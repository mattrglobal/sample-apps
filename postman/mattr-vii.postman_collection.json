{
	"info": {
		"_postman_id": "552c8e8b-92af-4ef1-979b-adc43373287e",
		"name": "MATTR VII Platform API",
		"description": "# Introduction\nThe MATTR VII API defines a set of capabilities that can be used to manage and interact with a MATTR VII tenant. This includes managing a Verifiable Credential across its lifecycle (issue-hold-verify) as well as various tenant administration and management tasks such as setting up a custom domain, creating identifiers and configuring issuance and verification workflows.\n\n# Getting Started with our APIs\nAs a MATTR VII user, you are provided with the following details, required for accessing and engaging with your MATTR VII tenant:\n\n``` json\n{\n  \"audience\": \"YOUR_AUDIENCE_URL\",\n  \"auth_url\": \"YOUR_AUTH_URL\",\n  \"tenant_url\": \"YOUR_TENANT_URL\",\n  \"client_id\": \"YOUR_CLIENT_ID\",\n  \"client_secret\": \"YOUR_CLIENT_SECRET\"\n}\n```\n\n1. Use the `auth_url`, `audience`, `client_id` and `client_secret` to [obtain an access token](#operation/authToken).\n2. To make a request to your tenant, suffix the `tenant_url` with the endpoint route and include the obtained access token as a header bearer token. For example:\n\n```\nGET https://{tenant_url}/v1/dids\n```\n\n# Pagination\nMost list operations in the API enable cursor pagination using the `cursor` and `limit` query parameters:\n\n**Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n```\nGET https://{tenant-url}/core/v2/credentials\n?limit=100\n&cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n```\n\n* `limit`: determines how many entries are returned in that request, with a maximum value of 1000.\n* `cursor`: sets the location in the retrieved list to get the next batch of entries from. This is based on the returned `nextCursor`, found at the beginning of each returned range and identifies the last object in the list.\n\nRequesting an entry after the last list value will return an empty `data` object:\n\n``` json\n{\n\"data\": []\n}\n```\n\nNot providing a query parameter defaults the response to return the first range of entries with a `limit` of 100.\n\n# Authorization\nAccess to the API is granted by our authorization provider. Use the `auth_url`, `audience`, `client_id` and `client_secret` provided with your tenant details to [make a request](#operation/authToken) to receive a bearer token from the auth provider. This token must then be used as an `authorization` header for all requests to protected endpoints (this is required for the majority of operations).\n\n<SecurityDefinitions />\n\n\nContact Support:\n Email: dev-support@mattr.global",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28262321"
	},
	"item": [
		{
			"name": "General",
			"item": [
				{
					"name": "Analytics",
					"item": [
						{
							"name": "Retrieve events",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/analytics/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"analytics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										},
										{
											"key": "ids",
											"value": "in tempor,labore aliquip",
											"description": "Query by event IDs. These can be retrieved from event details.",
											"disabled": true
										},
										{
											"key": "ids",
											"value": "consectetur,quis commodo",
											"description": "Query by event IDs. These can be retrieved from event details.",
											"disabled": true
										},
										{
											"key": "requestIds",
											"value": "in tempor,labore aliquip",
											"description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
											"disabled": true
										},
										{
											"key": "requestIds",
											"value": "consectetur,quis commodo",
											"description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
											"disabled": true
										},
										{
											"key": "categories",
											"value": "adipisicing nisi elit tempor,elit et pariatur consectetur anim",
											"description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
											"disabled": true
										},
										{
											"key": "categories",
											"value": "nostrud,p",
											"description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
											"disabled": true
										},
										{
											"key": "types",
											"value": "sed ut Duis deserunt,aute c",
											"description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
											"disabled": true
										},
										{
											"key": "types",
											"value": "mollit incididu,tempor eu veni",
											"description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "<dateTime>",
											"description": "Query by event start date and time (inclusive), in ISO-8601 format.",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "<dateTime>",
											"description": "Query by event end date and time (inclusive), in ISO-8601 format.",
											"disabled": true
										}
									]
								},
								"description": "Returns a list of matching events from the tenant's event database. \n\nThe `categories` and `types` parameters filter based on an **OR** logic, whilst all other parameters use an \"AND\" logic. For example `(categories OR types) AND requestIds AND dateFrom`.\n\nRefer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list of events categories and types.\n"
							},
							"response": [
								{
									"name": "A list of events",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/analytics/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"analytics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												},
												{
													"key": "ids",
													"value": "consectetur,quis commodo",
													"description": "Query by event IDs. These can be retrieved from event details.",
													"disabled": true
												},
												{
													"key": "requestIds",
													"value": "consectetur,quis commodo",
													"description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
													"disabled": true
												},
												{
													"key": "categories",
													"value": "nostrud,p",
													"description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "types",
													"value": "mollit incididu,tempor eu veni",
													"description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "dateFrom",
													"value": "<dateTime>",
													"description": "Query by event start date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												},
												{
													"key": "dateTo",
													"value": "<dateTime>",
													"description": "Query by event end date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"timestamp\": \"<string>\",\n\t\t\t\"category\": \"<string>\",\n\t\t\t\"metadata\": {},\n\t\t\t\"data\": {},\n\t\t\t\"requestId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"timestamp\": \"<string>\",\n\t\t\t\"category\": \"<string>\",\n\t\t\t\"metadata\": {},\n\t\t\t\"data\": {},\n\t\t\t\"requestId\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/analytics/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"analytics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												},
												{
													"key": "ids",
													"value": "consectetur,quis commodo",
													"description": "Query by event IDs. These can be retrieved from event details.",
													"disabled": true
												},
												{
													"key": "requestIds",
													"value": "consectetur,quis commodo",
													"description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
													"disabled": true
												},
												{
													"key": "categories",
													"value": "nostrud,p",
													"description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "types",
													"value": "mollit incididu,tempor eu veni",
													"description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "dateFrom",
													"value": "<dateTime>",
													"description": "Query by event start date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												},
												{
													"key": "dateTo",
													"value": "<dateTime>",
													"description": "Query by event end date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Unauthorized. The client is not authorized to access this resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/analytics/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"analytics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												},
												{
													"key": "ids",
													"value": "consectetur,quis commodo",
													"description": "Query by event IDs. These can be retrieved from event details.",
													"disabled": true
												},
												{
													"key": "requestIds",
													"value": "consectetur,quis commodo",
													"description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
													"disabled": true
												},
												{
													"key": "categories",
													"value": "nostrud,p",
													"description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "types",
													"value": "mollit incididu,tempor eu veni",
													"description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "dateFrom",
													"value": "<dateTime>",
													"description": "Query by event start date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												},
												{
													"key": "dateTo",
													"value": "<dateTime>",
													"description": "Query by event end date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden. The authorization server refuses to grant the client access to the resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/analytics/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"analytics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												},
												{
													"key": "ids",
													"value": "consectetur,quis commodo",
													"description": "Query by event IDs. These can be retrieved from event details.",
													"disabled": true
												},
												{
													"key": "requestIds",
													"value": "consectetur,quis commodo",
													"description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
													"disabled": true
												},
												{
													"key": "categories",
													"value": "nostrud,p",
													"description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "types",
													"value": "mollit incididu,tempor eu veni",
													"description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "dateFrom",
													"value": "<dateTime>",
													"description": "Query by event start date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												},
												{
													"key": "dateTo",
													"value": "<dateTime>",
													"description": "Query by event end date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/analytics/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"analytics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												},
												{
													"key": "ids",
													"value": "consectetur,quis commodo",
													"description": "Query by event IDs. These can be retrieved from event details.",
													"disabled": true
												},
												{
													"key": "requestIds",
													"value": "consectetur,quis commodo",
													"description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
													"disabled": true
												},
												{
													"key": "categories",
													"value": "nostrud,p",
													"description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "types",
													"value": "mollit incididu,tempor eu veni",
													"description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
													"disabled": true
												},
												{
													"key": "dateFrom",
													"value": "<dateTime>",
													"description": "Query by event start date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												},
												{
													"key": "dateTo",
													"value": "<dateTime>",
													"description": "Query by event end date and time (inclusive), in ISO-8601 format.",
													"disabled": true
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Messaging",
					"item": [
						{
							"name": "Sign a message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"didUrl\": \"<string>\",\n\t\"payload\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"sign"
									]
								},
								"description": "Accepts a message payload and signs it with a JWS (JSON Web Signature) using the a specific key from the DID (Decentralized Identifier) provided in the request.\n\n### **Analytic events**\n* MESSAGING_SIGN_START\n* MESSAGING_SIGN_SUCCESS\n* MESSAGING_SIGN_FAIL"
							},
							"response": [
								{
									"name": "Message signed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"didUrl\": \"<string>\",\n\t\"payload\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"sign"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Error signing message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"didUrl\": \"<string>\",\n\t\"payload\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"sign"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Verify a message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jws\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"verify"
									]
								},
								"description": "Verifies the siganture of a provided JWS (JSON Web Signature), validating that the payload has not been tampered with and verifying that the kid in the JWS header is the same as the `iss` value in the Request Object.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n### **Analytic events**\n* MESSAGING_VERIFY_START\n* MESSAGING_VERIFY_SUCCESS\n* MESSAGING_VERIFY_FAIL"
							},
							"response": [
								{
									"name": "Verification successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"jws\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"didUrl\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"verified\": \"<boolean>\",\n\t\"payload\": \"<string>\"\n}"
								},
								{
									"name": "Invalid JWS",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"jws\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Encrypt a message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"senderDidUrl\": \"<string>\",\n\t\"recipientDidUrls\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"payload\": {}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/encrypt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"encrypt"
									]
								},
								"description": "Encrypts the provided payload using into a JWM (JSON Web Message) format.\n\n### **Analytic events**\n* MESSAGING_ENCRYPT_START\n* MESSAGING_ENCRYPT_SUCCESS\n* MESSAGING_ENCRYPT_FAIL\n"
							},
							"response": [
								{
									"name": "Message encrypted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"senderDidUrl\": \"<string>\",\n\t\"recipientDidUrls\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"payload\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/encrypt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"encrypt"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"jwe\": {\n\t\t\"protected\": \"<string>\",\n\t\t\"recipients\": [\n\t\t\t{\n\t\t\t\t\"encryption_key\": \"<string>\",\n\t\t\t\t\"header\": {\n\t\t\t\t\t\"alg\": \"<string>\",\n\t\t\t\t\t\"kid\": \"<string>\",\n\t\t\t\t\t\"epk\": {\n\t\t\t\t\t\t\"kty\": \"<string>\",\n\t\t\t\t\t\t\"crv\": \"<string>\",\n\t\t\t\t\t\t\"x\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t\"skid\": \"<string>\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"ciphertext\": \"<string>\",\n\t\t\"iv\": \"<string>\",\n\t\t\"tag\": \"<string>\"\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"senderDidUrl\": \"<string>\",\n\t\"recipientDidUrls\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"payload\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/encrypt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"encrypt"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Decrypt a message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"jwe\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/decrypt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"decrypt"
									]
								},
								"description": "Decrypts a provided message where the tenant manages the keys for the defined `recipientDidUrl`.\n\n### **Analytic events**\n* MESSAGING_DECRYPT_START\n* MESSAGING_DECRYPT_SUCCESS\n* MESSAGING_DECRYPT_FAIL"
							},
							"response": [
								{
									"name": "Message Decrypted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"jwe\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/decrypt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"decrypt"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"payload\": \"<string>\",\n\t\"senderDidUrl\": \"<string>\",\n\t\"senderPublicJwk\": {},\n\t\"recipientDidUrl\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"jwe\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/decrypt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"decrypt"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Send a message",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"to\": \"<string>\",\n\t\"message\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/send",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"send"
									]
								},
								"description": "Sends an encrypted JWM (JSON Web Messaging) format message to a service endpoint defined in a public DID document.\n\n### **Analytic events**\n* MESSAGING_SEND_START\n* MESSAGING_SEND_SUCCESS\n* MESSAGING_SEND_FAIL"
							},
							"response": [
								{
									"name": "Message sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"to\": \"<string>\",\n\t\"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"send"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Error sending message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"to\": \"<string>\",\n\t\"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"send"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Inboxes",
					"item": [
						{
							"name": "Create an inbox",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes"
									]
								},
								"description": "Creates an inbox that can register DIDs and then hold messages sent to those DIDs service points.\n\n### **Analytic events**\n* MESSAGING_INBOX_CREATE_START\n* MESSAGING_INBOX_CREATE_SUCCESS\n* MESSAGING_INBOX_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Inbox created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "List inboxes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									]
								},
								"description": "Returns a list of all inboxes on the tenant.\n\n### **Analytic events**\n* MESSAGING_INBOX_RETRIEVE_LIST_START\n* MESSAGING_INBOX_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_RETRIEVE_LIST_FAIL\n"
							},
							"response": [
								{
									"name": "A list of inboxes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Retrieve an inbox",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Inbox ID"
										}
									]
								},
								"description": "Retrieves an inbox based on its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_RETRIEVE_START\n* MESSAGING_INBOX_RETRIEVE_SUCCESS\n* MESSAGING_INBOX_RETRIEVE_FAIL\n"
							},
							"response": [
								{
									"name": "Inbox returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Update an inbox",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Inbox ID"
										}
									]
								},
								"description": "Update the inbox configurations"
							},
							"response": [
								{
									"name": "Inbox updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete an inbox",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Inbox ID"
										}
									]
								},
								"description": "Deletes an inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_DELETE_START\n* MESSAGING_INBOX_DELETE_SUCCESS\n* MESSAGING_INBOX_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Inbox deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Register DID with an inbox",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id",
										"dids"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Requested inbox ID"
										}
									]
								},
								"description": "Register the provided DID to the requested inbox.\n\n> DID registration with inboxes is currently limited to `did:key`'\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_REGISTER_START\n* MESSAGING_INBOX_DID_REGISTER_SUCCESS\n* MESSAGING_INBOX_DID_REGISTER_FAIL"
							},
							"response": [
								{
									"name": "DID registered with inbox",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"did\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve inbox DIDs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id",
										"dids"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Requested inbox ID"
										}
									]
								},
								"description": "Retrieves a list of all the DIDs registered with the requested inbox.\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_START\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_FAIL\n"
							},
							"response": [
								{
									"name": "A list of inbox DIDs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Unregister DID with an inbox",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id",
										"dids",
										":did"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Requested inbox ID"
										},
										{
											"key": "did",
											"value": "<string>",
											"description": "(Required) DID"
										}
									]
								},
								"description": "Unregisters a DID from the requested inbox.\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_UNREGISTER_START\n* MESSAGING_INBOX_DID_UNREGISTER_SUCCESS\n* MESSAGING_INBOX_DID_UNREGISTER_FAIL"
							},
							"response": [
								{
									"name": "DID unregistered from inbox",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids",
												":did"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "did"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids",
												":did"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "did"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"dids",
												":did"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "did"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all messages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id",
										"messages"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Requested inbox ID"
										}
									]
								},
								"description": "Retrieving all the messages from an inbox\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_START\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_FAIL\n"
							},
							"response": [
								{
									"name": "A list of inbox messages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"createdAt\": \"<date>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"inboxId\": \"<string>\",\n\t\t\t\"payload\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"createdAt\": \"<date>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"inboxId\": \"<string>\",\n\t\t\t\"payload\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve a message",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id",
										"messages",
										":messageid"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Requested inbox ID"
										},
										{
											"key": "messageid",
											"value": "<string>",
											"description": "(Required) Requested message ID"
										}
									]
								},
								"description": "Retrieves a message from the requested inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_START\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_SUCCESS\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_FAIL\n"
							},
							"response": [
								{
									"name": "An inbox message",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages",
												":messageid"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "messageid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"name\": \"<string>\",\n\t\"createdAt\": \"<date>\",\n\t\"id\": \"<string>\",\n\t\"inboxId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages",
												":messageid"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "messageid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages",
												":messageid"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "messageid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete a message",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"messaging",
										"inboxes",
										":id",
										"messages",
										":messageid"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Requested inbox ID"
										},
										{
											"key": "messageid",
											"value": "<string>",
											"description": "(Required) Requested message ID"
										}
									]
								},
								"description": "Deletes a message from the requested inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_DELETE_START\n* MESSAGING_INBOX_MESSAGE_DELETE_SUCCESS\n* MESSAGING_INBOX_MESSAGE_DELETE_FAIL\n"
							},
							"response": [
								{
									"name": "Message deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages",
												":messageid"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "messageid"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages",
												":messageid"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "messageid"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"messaging",
												"inboxes",
												":id",
												"messages",
												":messageid"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "messageid"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Tenant configuration",
			"item": [
				{
					"name": "Security",
					"item": [
						{
							"name": "Create API Auth Token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"client_id\": \"<string>\",\n\t\"client_secret\": \"<string>\",\n\t\"audience\": \"<string>\",\n\t\"grant_type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth",
										"token"
									]
								},
								"description": "Returns an API access token. This token must then be used as an authorization header for all requests to protected endpoints (this is required for the majority of operations).\n\nThis request must be made to an authentication server based on your tenant's region:\n- **Sydney, Australia**: `auth.au01.mattr.global`\n- **Montreal, Canada**: `auth.ca01.mattr.global`\n- **Frankfurt, Germany, Europe**: `auth.eu01.mattr.global`\n- **Oregon, United States**: `auth.us01.mattr.global`\n\nYour region details as well as required `client_id` and `client_secret` are provided as part of onboarding, or retrieved when you create a tenant on the Self Service Portal. If you do not have your tenant details, or have any other questions, please [contact us](mailto:dev-support@mattr.global) before proceeding."
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"client_id\": \"<string>\",\n\t\"client_secret\": \"<string>\",\n\t\"audience\": \"<string>\",\n\t\"grant_type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"access_token\": \"<string>\",\n\t\"expires_in\": \"<number>\",\n\t\"token_type\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"client_id\": \"<string>\",\n\t\"client_secret\": \"<string>\",\n\t\"audience\": \"<string>\",\n\t\"grant_type\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"error\": \"<string>\",\n\t\"error_description\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Custom Domain",
					"item": [
						{
							"name": "Configure custom domain",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/config/domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"config",
										"domain"
									]
								},
								"description": "Creates a custom domain configuration on your tenant. You can configure a custom domain for a specific MATTR VII tenant to represent your brand and instil trust with your end-users. Any MATTR VII tenant can only have one custom domain. Refer to our [docs](https://learn.mattr.global/docs/capabilities/platform-management/custom) for more information.\n\n> Custom domains are only available as part of our paid plans, and trial accounts do not include ongoing access to custom domains. The APIs are available for you to trial the feature, but they may be deactivated unless you switch to a paid plan.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_CREATE_START\n* CONFIG_CUSTOM_DOMAIN_CREATE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_CREATE_FAIL\n"
							},
							"response": [
								{
									"name": "Custom domain created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"verificationToken\": \"<string>\",\n\t\"isVerified\": \"<boolean>\",\n\t\"verifiedAt\": \"<string,>\"\n}"
								},
								{
									"name": "Bad request, Invalid request body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve custom domain",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/config/domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"config",
										"domain"
									]
								},
								"description": "Returns your tenant's custom domain configuration and its verification status.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_START\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Custom domain returned",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"verificationToken\": \"<string>\",\n\t\"isVerified\": \"<boolean>\",\n\t\"verifiedAt\": \"<string,>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete custom domain",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/config/domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"config",
										"domain"
									]
								},
								"description": "Deletes the custom domain configuration on your tenant.\n\n> Deleting your custom domain configuration breaks the linkage with any credentials issued under the custom domain. These credentials will no longer be valid.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_DELETE_START\n* CONFIG_CUSTOM_DOMAIN_DELETE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Custom domain deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Update custom domain",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/config/domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"config",
										"domain"
									]
								},
								"description": "Updates the custom domain configuration.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_UPDATE_START\n* CONFIG_CUSTOM_DOMAIN_UPDATE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_UPDATE_FAIL"
							},
							"response": [
								{
									"name": "Custom Domain updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"verificationToken\": \"<string>\",\n\t\"isVerified\": \"<boolean>\",\n\t\"verifiedAt\": \"<string,>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Verify custom domain",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/config/domain/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"config",
										"domain",
										"verify"
									]
								},
								"description": "Verifies that you have control of the configured custom domain by examining its TXT record.\n\n> Your custom domain will not be active until you verify it. Refer to [Verify domain ownership](https://learn.mattr.global/docs/capabilities/platform-management/custom#verify-domain-ownership) for more information.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_VERIFY_START\n* CONFIG_CUSTOM_DOMAIN_VERIFY_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_VERIFY_FAIL"
							},
							"response": [
								{
									"name": "Custom domain verified",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain",
												"verify"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/config/domain/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"config",
												"domain",
												"verify"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				},
				{
					"name": "DIDs",
					"item": [
						{
							"name": "Create a DID",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"method\": \"web\",\n\t\"options\": {\n\t\t\"keyType\": \"<string>\",\n\t\t\"url\": \"<string>\"\n\t}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"dids"
									]
								},
								"description": "Takes a supported [DID method](https://learn.mattr.global/docs/formats/json/dids#methods) and returns a new DID with its generated keys and required information. This endpoint also registers the DID Document when applicable.\n\nMATTR VII currently supports creating DIDs of the following methods:\n- **did:key**: The most basic type of DID. The public key forms the DID and has no further data associated with it.\n- **did:web**: This type of DID requires hosting the DID document on a publicly accessible domain in order to make the document and its contents available.\n\n### **Analytic events**\n* DID_CREATE_START\n* DID_CREATE_SUCCESS\n* DID_CREATE_FAIL"
							},
							"response": [
								{
									"name": "DID document created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"method\": \"web\",\n\t\"options\": {\n\t\t\"keyType\": \"<string>\",\n\t\t\"url\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"registrationStatus\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"metadata\": {\n\t\t\"keys\": [\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"registered\": \"<number>\",\n\t\t\"initialDidDocument\": {}\n\t}\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"method\": \"web\",\n\t\"options\": {\n\t\t\"keyType\": \"<string>\",\n\t\t\"url\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve a list of DIDs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"dids"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									]
								},
								"description": "Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n\n### **Analytic events**\n* DID_RETRIEVE_LIST_START\n* DID_RETRIEVE_LIST_SUCCESS\n* DID_RETRIEVE_LIST_FAIL\n"
							},
							"response": [
								{
									"name": "A list of DIDs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"did\": \"<string>\",\n\t\t\t\"localMetadata\": {\n\t\t\t\t\"keys\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"registered\": \"<number>\",\n\t\t\t\t\"initialDidDocument\": {}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"did\": \"<string>\",\n\t\t\t\"localMetadata\": {\n\t\t\t\t\"keys\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"registered\": \"<number>\",\n\t\t\t\t\"initialDidDocument\": {}\n\t\t\t}\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Resolve a DID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) DID"
										}
									]
								},
								"description": "Retrieves a DID and its metadata from the tenant by its URI. This may involve a network call depending on the method involved:\n- For did:key the public key is encapsulated in the DID URI itself.\n- For did:web it must be resolved by accessing the `/.well-known/did.json` path on its domain.\n\n### **Analytic events**\n* DID_RETRIEVE_START\n* DID_RETRIEVE_SUCCESS\n* DID_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "A DID Document and its meta-data",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"did\": {},\n\t\"registrationStatus\": \"<string>\",\n\t\"localMetadata\": {\n\t\t\"keys\": [\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"registered\": \"<number>\",\n\t\t\"initialDidDocument\": {}\n\t}\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete a DID",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) DID"
										}
									]
								},
								"description": "Deletes a DID and all associated metadata by providing its URI. This includes all the removal of all associated private keys from the Key Management System (KMS).\n> For ledger-based DIDs the public DID Document will still be available. This means that for `did:web` you will need to manually remove the `did.json` from your hosted domain.\n\n### **Analytic events**\n* DID_DELETE_START\n* DID_DELETE_SUCCESS\n* DID_DELETE_FAIL"
							},
							"response": [
								{
									"name": "DID successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/dids/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"dids",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Well known DID configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/.well-known/did-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										".well-known",
										"did-configuration"
									]
								},
								"description": "Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant. These are automatically created for **all** DIDS created on a tenant so that they can be used by any party aiming to establish and verify the domain-DID linkage by exposing cryptographic proofs. Thus, this endpoint is unprotected, public facing and can be deterministically found at the root of the tenant subdomain or alias by any party. Refer to [Well Known DID Configuration](https://identity.foundation/.well-known/resources/did-configuration) on the Decentralized Identity Foundation website for more information.\n"
							},
							"response": [
								{
									"name": "List of DID Configuration entries",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/.well-known/did-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												".well-known",
												"did-configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"entries\": [\n\t\t{\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t},\n\t\t\t\"proof\": {\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuer\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t},\n\t\t\t\"proof\": {\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuer\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				},
				{
					"name": "IACA",
					"item": [
						{
							"name": "Create an IACA",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"commonName\": \"{tenantHost} IACA\",\n\t\"country\": \"<string>\",\n\t\"notAfter\": \"<string>\",\n\t\"stateOrProvinceName\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"iacas"
									]
								},
								"description": "Creates a new IACA that can be used to sign new Document Signer Certificates (DSCs).\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_CREATE_START\n* MOBILE_CREDENTIAL_IACA_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_IACA_CREATE_FAIL"
							},
							"response": [
								{
									"name": "IACA created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"commonName\": \"{tenantHost} IACA\",\n\t\"country\": \"<string>\",\n\t\"notAfter\": \"<string>\",\n\t\"stateOrProvinceName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"iacas"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} IACA\",\n\t\t\"stateOrProvinceName\": \"<string>\"\n\t},\n\t\"publicKeyJwk\": {},\n\t\"certificatePem\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"commonName\": \"{tenantHost} IACA\",\n\t\"country\": \"<string>\",\n\t\"notAfter\": \"<string>\",\n\t\"stateOrProvinceName\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"iacas"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all IACAs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"iacas"
									]
								},
								"description": "Retrieves all existing IACAs from the tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_FAIL"
							},
							"response": [
								{
									"name": "IACAs Retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"iacas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} IACA\",\n\t\t\t\t\"stateOrProvinceName\": \"<string>\"\n\t\t\t},\n\t\t\t\"publicKeyJwk\": {},\n\t\t\t\"certificatePem\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} IACA\",\n\t\t\t\t\"stateOrProvinceName\": \"<string>\"\n\t\t\t},\n\t\t\t\"publicKeyJwk\": {},\n\t\t\t\"certificatePem\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete an IACA",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"iacas",
										":iacaId"
									],
									"variable": [
										{
											"key": "iacaId",
											"value": "<uuid>",
											"description": "(Required) IACA ID"
										}
									]
								},
								"description": "Deletes an existing IACA by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_DELETE_START\n* MOBILE_CREDENTIAL_IACA_DELETE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_IACA_DELETE_LIST_FAIL"
							},
							"response": [
								{
									"name": "IACA deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"iacas",
												":iacaId"
											],
											"variable": [
												{
													"key": "iacaId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"iacas",
												":iacaId"
											],
											"variable": [
												{
													"key": "iacaId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "IACA not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"iacas",
												":iacaId"
											],
											"variable": [
												{
													"key": "iacaId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				},
				{
					"name": "DSCs",
					"item": [
						{
							"name": "Create a DSC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"active\": \"<boolean>\",\n\t\"commonName\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"document-signers"
									]
								},
								"description": "Creates a new Document Signer Certificate (DSC) that can be used to sign new mDocs.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_CREATE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_CREATE_FAIL"
							},
							"response": [
								{
									"name": "DSC created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"active\": \"<boolean>\",\n\t\"commonName\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"active\": \"<boolean>\",\n\t\"publicKey\": {},\n\t\"certificatePem\": \"<string>\",\n\t\"certificateFingerprint\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} Document Signer\",\n\t\t\"stateOrProvinceName\": \"<string>\"\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"active\": \"<boolean>\",\n\t\"commonName\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all DSCs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"document-signers"
									]
								},
								"description": "Retrieves all existing DSCs from the tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_LIST_FAIL"
							},
							"response": [
								{
									"name": "DSCs retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"active\": \"<boolean>\",\n\t\t\t\"publicKey\": {},\n\t\t\t\"certificatePem\": \"<string>\",\n\t\t\t\"certificateFingerprint\": \"<string>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} Document Signer\",\n\t\t\t\t\"stateOrProvinceName\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"active\": \"<boolean>\",\n\t\t\t\"publicKey\": {},\n\t\t\t\"certificatePem\": \"<string>\",\n\t\t\t\"certificateFingerprint\": \"<string>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} Document Signer\",\n\t\t\t\t\"stateOrProvinceName\": \"<string>\"\n\t\t\t}\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a DSC",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"active\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"document-signers",
										":documentSignerId"
									],
									"variable": [
										{
											"key": "documentSignerId",
											"value": "<uuid>",
											"description": "(Required) DSC ID"
										}
									]
								},
								"description": "Updates an existing DSC by providing its ID and `active` parameter.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_UPDATE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_UPDATE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_UPDATE_FAIL"
							},
							"response": [
								{
									"name": "DSC updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers",
												":documentSignerId"
											],
											"variable": [
												{
													"key": "documentSignerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"active\": \"<boolean>\",\n\t\"publicKey\": {},\n\t\"certificatePem\": \"<string>\",\n\t\"certificateFingerprint\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} Document Signer\",\n\t\t\"stateOrProvinceName\": \"<string>\"\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers",
												":documentSignerId"
											],
											"variable": [
												{
													"key": "documentSignerId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "DSC not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"active\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers",
												":documentSignerId"
											],
											"variable": [
												{
													"key": "documentSignerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve a DSC",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"document-signers",
										":documentSignerId"
									],
									"variable": [
										{
											"key": "documentSignerId",
											"value": "<uuid>",
											"description": "(Required) DSC ID"
										}
									]
								},
								"description": "Retrieves an existing DSC by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "DSC retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers",
												":documentSignerId"
											],
											"variable": [
												{
													"key": "documentSignerId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"active\": \"<boolean>\",\n\t\"publicKey\": {},\n\t\"certificatePem\": \"<string>\",\n\t\"certificateFingerprint\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} Document Signer\",\n\t\t\"stateOrProvinceName\": \"<string>\"\n\t}\n}"
								},
								{
									"name": "DSC not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers",
												":documentSignerId"
											],
											"variable": [
												{
													"key": "documentSignerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete a DSC",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"document-signers",
										":documentSignerId"
									],
									"variable": [
										{
											"key": "documentSignerId",
											"value": "<uuid>",
											"description": "(Required) DSC ID"
										}
									]
								},
								"description": "Deletes an existing DSC by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_DELETE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_DELETE_FAIL"
							},
							"response": [
								{
									"name": "DSC deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers",
												":documentSignerId"
											],
											"variable": [
												{
													"key": "documentSignerId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "DSC not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/document-signers/:documentSignerId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"document-signers",
												":documentSignerId"
											],
											"variable": [
												{
													"key": "documentSignerId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Create Webhook",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"events\": [\n\t\t\"OidcIssuerCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"webhooks"
									]
								},
								"description": "Creates a new webhook for this tenant.\n\n### **Analytic events**\n* WEBHOOK_CREATE_START\n* WEBHOOK_CREATE_SUCCESS\n* WEBHOOK_CREATE_FAIL\n"
							},
							"response": [
								{
									"name": "Webhook created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"events\": [\n\t\t\"OidcIssuerCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"events\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": false\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"events\": [\n\t\t\"OidcIssuerCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all Webhooks",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"webhooks"
									],
									"query": [
										{
											"key": "limit",
											"value": "<number>",
											"description": "Range size of returned webhook entries, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the range of webhook entries",
											"disabled": true
										}
									]
								},
								"description": "Retrieves a list of webhooks configured on the tenant.\n\n### **Analytic events**\n* WEBHOOK_RETRIEVE_LIST_START\n* WEBHOOK_RETRIEVE_LIST_SUCCESS\n* WEBHOOK_RETRIEVE_LIST_FAIL\n"
							},
							"response": [
								{
									"name": "Webhooks retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned webhook entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of webhook entries",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"events\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"disabled\": false\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"events\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"disabled\": false\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned webhook entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of webhook entries",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve Webhook",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/webhooks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"webhooks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The requested Webhook ID."
										}
									]
								},
								"description": "Retrieve a specific Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_RETRIEVE_START\n* WEBHOOK_RETRIEVE_SUCCESS\n* WEBHOOK_RETRIEVE_FAIL\n"
							},
							"response": [
								{
									"name": "Webhook retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"events\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": false\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Update Webhook",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"events\": [\n\t\t\"OidcIssuerCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/core/v1/webhooks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"webhooks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Webhook ID"
										}
									]
								},
								"description": "Updates an existing Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_UPDATE_START\n* WEBHOOK_UPDATE_SUCCESS\n* WEBHOOK_UPDATE_FAIL"
							},
							"response": [
								{
									"name": "Webhook updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"events\": [\n\t\t\"OidcIssuerCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"events\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": false\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"events\": [\n\t\t\"OidcIssuerCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "The webhook is not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"events\": [\n\t\t\"OidcIssuerCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete Webhook",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/webhooks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"webhooks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Webhook ID"
										}
									]
								},
								"description": "Deletes a Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_DELETE_START\n* WEBHOOK_DELETE_SUCCESS\n* WEBHOOK_DELETE_FAIL\n"
							},
							"response": [
								{
									"name": "Webhook deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "The webhook is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve Webhook JWKs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/core/v1/webhooks/jwks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"core",
										"v1",
										"webhooks",
										"jwks"
									]
								},
								"description": "Retrieves a list of Webhook JWKs (JSON Web Keys) from the tenant. These keys can be used to verify the HTTP signature and validate the integrity and authorship of generated Webhooks. This endpoint does not require authentication and is publicly available by design.\n"
							},
							"response": [
								{
									"name": "Webhook JWKs retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/webhooks/jwks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"webhooks",
												"jwks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"keys\": [\n\t\t{\n\t\t\t\"kty\": \"<string>\",\n\t\t\t\"crv\": \"<string>\",\n\t\t\t\"x\": \"<string>\",\n\t\t\t\"use\": \"<string>\",\n\t\t\t\"kid\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"kty\": \"<string>\",\n\t\t\t\"crv\": \"<string>\",\n\t\t\t\"x\": \"<string>\",\n\t\t\t\"use\": \"<string>\",\n\t\t\t\"kid\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Ecosystem operations",
			"item": [
				{
					"name": "Ecosystems",
					"item": [
						{
							"name": "Retrieve all ecosystems",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									]
								},
								"description": "Retrieves a list of ecosystems.\n### **Analytic events**\n* ECOSYSTEM_RETRIEVE_LIST_START\n* ECOSYSTEM_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_RETRIEVE_LIST_FAIL"
							},
							"response": [
								{
									"name": "Ecosystems retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"integrations\": [\n\t\t\t\t{\n\t\t\t\t\t\"format\": \"MATTR\",\n\t\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\t\t\"integrationResult\": {\n\t\t\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"failReasons\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"format\": \"MATTR\",\n\t\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\t\t\"integrationResult\": {\n\t\t\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"failReasons\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"integrations\": [\n\t\t\t\t{\n\t\t\t\t\t\"format\": \"MATTR\",\n\t\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\t\t\"integrationResult\": {\n\t\t\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"failReasons\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"format\": \"MATTR\",\n\t\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\t\t\"integrationResult\": {\n\t\t\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\t\t\"failReasons\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Create ecosystem",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems"
									]
								},
								"description": "Creates an ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREATE_START\n* ECOSYSTEM_CREATE_SUCCESS\n* ECOSYSTEM_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Ecosystem created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\"integrationResult\": {\n\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\"integrationResult\": {\n\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Sync ecosystem",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/sync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										"sync"
									]
								},
								"description": "Synchronises all configured consumptions and integrations by retrieving the most recent trust information.\n### **Analytic events**\n* ECOSYSTEM_TENANT_SYNC_ALL_START\n* ECOSYSTEM_TENANT_SYNC_ALL_SUCCESS\n* ECOSYSTEM_TENANT_SYNC_ALL_FAIL"
							},
							"response": [
								{
									"name": "Ecosystem sync request accepted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												"sync"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"tenantConfiguration\": {\n\t\t\"ecosystems\": [\n\t\t\t{\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												"sync"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve ecosystem",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Retrieves an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_RETRIEVE_START\n* ECOSYSTEM_RETRIEVE_SUCCESS\n* ECOSYSTEM_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Ecosystem retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\"integrationResult\": {\n\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\"integrationResult\": {\n\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update ecosystem",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Updates an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_UPDATE_START\n* ECOSYSTEM_UPDATE_SUCCESS\n* ECOSYSTEM_UPDATE_FAIL"
							},
							"response": [
								{
									"name": "Ecosystem updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\"integrationResult\": {\n\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\",\n\t\t\t\"integrationResult\": {\n\t\t\t\t\"success\": \"<boolean>\",\n\t\t\t\t\"lastSyncedAt\": \"<dateTime>\",\n\t\t\t\t\"lastModifiedAt\": \"<dateTime>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"integrations\": [\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"MATTR\",\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"enabled\": \"<boolean>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete ecosystem",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Deletes an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_DELETE_START\n* ECOSYSTEM_DELETE_SUCCESS\n* ECOSYSTEM_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Ecosystem deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Participants",
					"item": [
						{
							"name": "Retrieve participants",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Retrieves a list of participants from the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_START\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_FAIL"
							},
							"response": [
								{
									"name": "Participants retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"mollit_47\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"culpa_7\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"esse_2\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"enim_3\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"status\": \"Inactive\",\n\t\t\t\"country\": \"<string>\",\n\t\t\t\"stateOrProvince\": \"<string>\",\n\t\t\t\"contacts\": [\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"nostrud_85\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"status\": \"Inactive\",\n\t\t\t\"country\": \"<string>\",\n\t\t\t\"stateOrProvince\": \"<string>\",\n\t\t\t\"contacts\": [\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create participant",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Creates a participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_CREATE_START\n* ECOSYSTEM_PARTICIPANT_CREATE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Participant created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve participant",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants",
										":participantId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "participantId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the participant"
										}
									]
								},
								"description": "Retrieves a participant from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_START\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Participant retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update participant",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants",
										":participantId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "participantId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the participant"
										}
									]
								},
								"description": "Updates a participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_UPDATE_START\n* ECOSYSTEM_PARTICIPANT_UPDATE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_UPDATE_FAIL"
							},
							"response": [
								{
									"name": "Participant updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"labore47\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"velitda0\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true,\n\t\"status\": \"Inactive\",\n\t\"country\": \"<string>\",\n\t\"stateOrProvince\": \"<string>\",\n\t\"contacts\": [\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\"address\": \"<string>\"\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete participant",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants",
										":participantId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "participantId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the participant"
										}
									]
								},
								"description": "Deletes a participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_DELETE_START\n* ECOSYSTEM_PARTICIPANT_DELETE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Participant deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Credential types",
					"item": [
						{
							"name": "Create credential type",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"credentials"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Creates a new credential type in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_CREATE_START\n* ECOSYSTEM_CREDENTIAL_CREATE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Credential type created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve credential types",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"credentials"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Retrieves a list of credential types from the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_START\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_FAIL"
							},
							"response": [
								{
									"name": "Credential types retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"web-semantic\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve credential type",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"credentials",
										":credentialId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "credentialId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the credential"
										}
									]
								},
								"description": "Retrieves a credential type from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_START\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Credential type retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete credential type",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"credentials",
										":credentialId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "credentialId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the credential"
										}
									]
								},
								"description": "Deletes a credential type from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_DELETE_START\n* ECOSYSTEM_CREDENTIAL_DELETE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Credential type deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Policy",
					"item": [
						{
							"name": "Retrieve ecosystem policy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "If-None-Match",
										"value": "<string>",
										"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip",
										"description": "Use the Accept-Encoding header to specify the supported content encodings.",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"policy"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Retrieves an ecosystem policy by its ID.\n### **Analytic events**\n* ECOSYSTEM_POLICY_RETRIEVE_START\n* ECOSYSTEM_POLICY_RETRIEVE_SUCCESS\n* ECOSYSTEM_POLICY_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Ecosystem policy retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"policy"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "ETag",
											"value": "<string>",
											"description": {
												"content": "An Entity Tag (ETag) is a unique identifier assigned to a specific version of a resource. It allows clients to check if a resource has been modified since it was last retrieved.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n\t\"policyModifiedAt\": \"<dateTime>\",\n\t\"credentials\": {\n\t\t\"599bf148-d711-405a-a20b-9c8a87ac8850\": {\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t},\n\t\"participants\": {\n\t\t\"a24e391a-c27f-4b6e-9805-1ee7e03f3c58\": {\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"in4b\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"status\": \"Inactive\",\n\t\t\t\"country\": \"<string>\",\n\t\t\t\"stateOrProvince\": \"<string>\",\n\t\t\t\"contacts\": [\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t}\n\t}\n}"
								},
								{
									"name": "Not Modified. The resource has not been modified since the last request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"policy"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"policy"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Issuer Policies",
					"item": [
						{
							"name": "Retrieve issuer policy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "If-None-Match",
										"value": "<string>",
										"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip",
										"description": "Use the Accept-Encoding header to specify the supported content encodings.",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"issuers"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Retrieves an ecosystem issuer policy by its ID."
							},
							"response": [
								{
									"name": "Ecosystem issuer policy retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"issuers"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "ETag",
											"value": "<string>",
											"description": {
												"content": "An Entity Tag (ETag) is a unique identifier assigned to a specific version of a resource. It allows clients to check if a resource has been modified since it was last retrieved.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n\t\"policyModifiedAt\": \"<dateTime>\",\n\t\"credentials\": {\n\t\t\"599bf148-d711-405a-a20b-9c8a87ac8850\": {\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t},\n\t\"participants\": {\n\t\t\"a24e391a-c27f-4b6e-9805-1ee7e03f3c58\": {\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"in4b\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"status\": \"Inactive\",\n\t\t\t\"country\": \"<string>\",\n\t\t\t\"stateOrProvince\": \"<string>\",\n\t\t\t\"contacts\": [\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t}\n\t}\n}"
								},
								{
									"name": "Not Modified. The resource has not been modified since the last request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"issuers"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"issuers"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create issuer policy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants",
										":participantId",
										"issuer",
										"credentials"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "participantId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the participant"
										}
									]
								},
								"description": "Creates an issuer policy for the requested participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_ISSUER_POLICY_CREATE_START\n* ECOSYSTEM_ISSUER_POLICY_CREATE_SUCCESS\n* ECOSYSTEM_ISSUER_POLICY_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Issuer policy created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete issuer policy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants",
										":participantId",
										"issuer",
										"credentials",
										":credentialId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "participantId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the participant"
										},
										{
											"key": "credentialId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the credential"
										}
									]
								},
								"description": "Deletes an issuer policy for the requested participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_ISSUER_POLICY_DELETE_START\n* ECOSYSTEM_ISSUER_POLICY_DELETE_SUCCESS\n* ECOSYSTEM_ISSUER_POLICY_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Issuer policy deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"issuer",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Verifier Policies",
					"item": [
						{
							"name": "Retrieve verifier policy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "If-None-Match",
										"value": "<string>",
										"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
										"disabled": true
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip",
										"description": "Use the Accept-Encoding header to specify the supported content encodings.",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"verifiers"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										}
									]
								},
								"description": "Retrieves an ecosystem verifier policy by its ID."
							},
							"response": [
								{
									"name": "Ecosystem verifier policy retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"verifiers"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "ETag",
											"value": "<string>",
											"description": {
												"content": "An Entity Tag (ETag) is a unique identifier assigned to a specific version of a resource. It allows clients to check if a resource has been modified since it was last retrieved.",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "{\n\t\"policyModifiedAt\": \"<dateTime>\",\n\t\"credentials\": {\n\t\t\"599bf148-d711-405a-a20b-9c8a87ac8850\": {\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t},\n\t\"participants\": {\n\t\t\"a24e391a-c27f-4b6e-9805-1ee7e03f3c58\": {\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"in4b\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"status\": \"Inactive\",\n\t\t\t\"country\": \"<string>\",\n\t\t\t\"stateOrProvince\": \"<string>\",\n\t\t\t\"contacts\": [\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"phoneNumber\": \"<string>\",\n\t\t\t\t\t\"address\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t}\n\t}\n}"
								},
								{
									"name": "Not Modified. The resource has not been modified since the last request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"verifiers"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "If-None-Match",
												"value": "<string>",
												"description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
												"disabled": true
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip",
												"description": "Use the Accept-Encoding header to specify the supported content encodings.",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"verifiers"
											],
											"variable": [
												{
													"key": "ecosystemId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create verifier policy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants",
										":participantId",
										"verifier",
										"credentials"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "participantId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the participant"
										}
									]
								},
								"description": "Creates a verifier policy for the requested participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_START\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_SUCCESS\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Verifier policy created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"compact-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete verifier policy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ecosystems",
										":ecosystemId",
										"participants",
										":participantId",
										"verifier",
										"credentials",
										":credentialId"
									],
									"variable": [
										{
											"key": "ecosystemId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the ecosystem"
										},
										{
											"key": "participantId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the participant"
										},
										{
											"key": "credentialId",
											"value": "<uuid>",
											"description": "(Required) The UUID of the credential"
										}
									]
								},
								"description": "Deletes a verifier policy for the requested participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_START\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_SUCCESS\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Verifier policy deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request. The request was malformed or missing required parameters.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found. The specified resource was not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error. An unexpected error occurred.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ecosystems",
												":ecosystemId",
												"participants",
												":participantId",
												"verifier",
												"credentials",
												":credentialId"
											],
											"variable": [
												{
													"key": "ecosystemId"
												},
												{
													"key": "participantId"
												},
												{
													"key": "credentialId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Credential issuance",
			"item": [
				{
					"name": "Direct",
					"item": [
						{
							"name": "CWT credentials issuance",
							"item": [
								{
									"name": "CWT credential templates",
									"item": [
										{
											"name": "CWT credentials PDF templates",
											"item": [
												{
													"name": "Create a PDF template",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/zip"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<string>"
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"pdf",
																"templates"
															]
														},
														"description": "Creates a CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_FAIL"
													},
													"response": [
														{
															"name": "PDF template created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates"
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Retrieve all PDF templates",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"pdf",
																"templates"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "100",
																	"description": "Range size of the list, default 100",
																	"disabled": true
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "Starting point for the list",
																	"disabled": true
																}
															]
														},
														"description": "Retrieves a list of all CWT credentials PDF templates available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_FAIL"
													},
													"response": [
														{
															"name": "PDF templates retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a PDF template",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/zip"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<string>"
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"pdf",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) PDF template ID"
																}
															]
														},
														"description": "Update an existing CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_FAIL"
													},
													"response": [
														{
															"name": "PDF template updated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Retrieve a PDF template",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"pdf",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) PDF template ID"
																}
															]
														},
														"description": "Retrieves an existing CWT credentials PDF template using its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_FAIL"
													},
													"response": [
														{
															"name": "PDF template retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a PDF template",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"pdf",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) PDF Template ID"
																}
															]
														},
														"description": "Delete an existing PDF template by providing its ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_FAIL"
													},
													"response": [
														{
															"name": "PDF template deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "CWT credentials Apple Pass templates",
											"item": [
												{
													"name": "Create an Apple Pass template",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Apple digital pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "fileName",
																	"value": "<string>",
																	"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																	"type": "text"
																},
																{
																	"key": "teamIdentifier",
																	"value": "<string>",
																	"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																	"type": "text"
																},
																{
																	"key": "passTypeIdentifier",
																	"value": "<string>",
																	"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																	"type": "text"
																},
																{
																	"key": "wwdr",
																	"value": "<string>",
																	"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																	"type": "text"
																},
																{
																	"key": "signerCert",
																	"value": "<string>",
																	"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																	"type": "text"
																},
																{
																	"key": "signerKey",
																	"value": "<string>",
																	"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																	"type": "text"
																},
																{
																	"key": "signerKeyPassphrase",
																	"value": "<string>",
																	"description": "(Required) Passphrase for the encrypted key.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"apple",
																"templates"
															]
														},
														"description": "Creates an Apple Pass template based on the provided `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n> The Apple Pass template uses the official Apple Pass bundle structure.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Retrieve all Apple Pass templates",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"apple",
																"templates"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "100",
																	"description": "Range size of the list, default 100",
																	"disabled": true
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "Starting point for the list",
																	"disabled": true
																}
															]
														},
														"description": "Retrieves a list of all Apple Pass template available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass templates retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"apple\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Update an Apple Pass template",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Apple digital pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "fileName",
																	"value": "<string>",
																	"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																	"type": "text"
																},
																{
																	"key": "teamIdentifier",
																	"value": "<string>",
																	"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																	"type": "text"
																},
																{
																	"key": "passTypeIdentifier",
																	"value": "<string>",
																	"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																	"type": "text"
																},
																{
																	"key": "wwdr",
																	"value": "<string>",
																	"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																	"type": "text"
																},
																{
																	"key": "signerCert",
																	"value": "<string>",
																	"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																	"type": "text"
																},
																{
																	"key": "signerKey",
																	"value": "<string>",
																	"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																	"type": "text"
																},
																{
																	"key": "signerKeyPassphrase",
																	"value": "<string>",
																	"description": "(Required) Passphrase for the encrypted key.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"apple",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Apple Pass template ID"
																}
															]
														},
														"description": "Updates an existing Apple Pass template by providing its ID and a `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template updated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Retrieve an Apple Pass template",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"apple",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Apple Pass template ID"
																}
															]
														},
														"description": "Retrieves an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Delete an Apple Pass template",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"apple",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Apple Pass template ID"
																}
															]
														},
														"description": "Deletes an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												}
											]
										},
										{
											"name": "CWT credentials Google Pass templates",
											"item": [
												{
													"name": "Create a Google Pass template",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Google Pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "issuerId",
																	"value": "<string>",
																	"description": "(Required) Google Wallet Pass signer issuer ID.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountClientEmail",
																	"value": "<string>",
																	"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountPrivateKey",
																	"value": "<string>",
																	"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"google",
																"templates"
															]
														},
														"description": "Creates a Google Pass template based on the provided `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass template created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"google\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Retrieve all Google Pass templates",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"google",
																"templates"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "100",
																	"description": "Range size of the list, default 100",
																	"disabled": true
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "Starting point for the list",
																	"disabled": true
																}
															]
														},
														"description": "Retrieves a list of all Google Pass templates available on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
													},
													"response": [
														{
															"name": "Google Pass templates retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"apple\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Update a Google Pass template",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Google Pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "issuerId",
																	"value": "<string>",
																	"description": "(Required) Google Wallet Pass signer issuer ID.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountClientEmail",
																	"value": "<string>",
																	"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountPrivateKey",
																	"value": "<string>",
																	"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"google",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Google Pass template ID"
																}
															]
														},
														"description": "Updates a existing Google Pass template by providing its ID and a `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass template updated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"google\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Retrieve a Google Pass template",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"google",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Google Pass template ID"
																}
															]
														},
														"description": "Retrieves an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass templated retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"google\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Delete a Google Pass template",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact",
																"digital-pass",
																"google",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Google Pass template ID"
																}
															]
														},
														"description": "Deletes an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass template deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Sign a CWT credential",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\"\n\t},\n\t\"revocable\": false,\n\t\"isRevoked\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"sign"
											]
										},
										"description": "Returns a signed CWT credential generated from a provided valid payload.\n\nThe payload can include any number of custom claims, as CWT credentials do not comply with any specific standard or specification.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SIGN_START\n* CREDENTIAL_COMPACT_SIGN_SUCCESS\n* CREDENTIAL_COMPACT_SIGN_FAIL"
									},
									"response": [
										{
											"name": "CWT credential signed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\"\n\t},\n\t\"revocable\": false,\n\t\"isRevoked\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"sign"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<string>\",\n\t\"encoded\": \"<string>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t}\n}"
										},
										{
											"name": "CWT credential signing failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\"\n\t},\n\t\"revocable\": false,\n\t\"isRevoked\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"sign"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Format a CWT credential as a QR code",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "image/png"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"qrcode"
											]
										},
										"description": "Returns a QR code representation of a CWT credential from a provided encoded string representation of that credential.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_QRCODE_CREATE_START\n* CREDENTIAL_COMPACT_QRCODE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_QRCODE_CREATE_FAIL"
									},
									"response": [
										{
											"name": "QR code generated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "image/png"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"qrcode"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "image/png"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"qrcode"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Format a CWT credential as a PDF",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/pdf"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/pdf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"pdf"
											]
										},
										"description": "Returns a PDF representation of a provided CWT credential based on an existing PDF template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_CREATE_START\n* CREDENTIAL_COMPACT_PDF_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_CREATE_FAIL"
									},
									"response": [
										{
											"name": "PDF created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/pdf"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"pdf"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/pdf"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"pdf"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"pdf"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Format a CWT credential as an Apple Pass",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.apple.pkpass"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"digital-pass",
												"apple"
											]
										},
										"description": "Returns an Apple Pass representation of a provided CWT credential based on an existing Apple Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_FAIL"
									},
									"response": [
										{
											"name": "Apple Pass created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.apple.pkpass"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"digital-pass",
														"apple"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/vnd.apple.pkpass"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"digital-pass",
														"apple"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Format a CWT credential as a Google Pass",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"digital-pass",
												"google"
											]
										},
										"description": "Returns a Google Pass representation of a provided CWT credential based on an existing Google Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_FAIL"
									},
									"response": [
										{
											"name": "Google Pass created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"digital-pass",
														"google"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"redirectTo\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"digital-pass",
														"google"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Semantic CWT credentials issuance",
							"item": [
								{
									"name": "Semantic CWT credential templates",
									"item": [
										{
											"name": "Semantic CWT credentials PDF templates",
											"item": [
												{
													"name": "Create a PDF template",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/zip"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<string>"
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"pdf",
																"templates"
															]
														},
														"description": "Creates a Semantic CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_FAIL"
													},
													"response": [
														{
															"name": "PDF template created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates"
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Retrieve all PDF templates",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"pdf",
																"templates"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "100",
																	"description": "Range size of the list, default 100",
																	"disabled": true
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "Starting point for the list",
																	"disabled": true
																}
															]
														},
														"description": "Retrieves a list of all Semantic CWT credential PDF templates available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_FAIL"
													},
													"response": [
														{
															"name": "PDF templates retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a PDF template",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/zip"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "<string>"
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"pdf",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) PDF Template ID"
																}
															]
														},
														"description": "Update an existing CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_FAIL"
													},
													"response": [
														{
															"name": "PDF template updated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/zip"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "<string>"
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Retrieve a PDF template",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"pdf",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) PDF Template ID"
																}
															]
														},
														"description": "Retrieves an existing Semantic CWT credential PDF template using its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_FAIL"
													},
													"response": [
														{
															"name": "PDF template retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a PDF template",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"pdf",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) PDF Template ID"
																}
															]
														},
														"description": "Delete an existing PDF template by providing its ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_FAIL"
													},
													"response": [
														{
															"name": "PDF template deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"pdf",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Semantic CWT credentials Apple Pass templates",
											"item": [
												{
													"name": "Create an Apple Pass template",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Apple digital pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "fileName",
																	"value": "<string>",
																	"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																	"type": "text"
																},
																{
																	"key": "teamIdentifier",
																	"value": "<string>",
																	"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																	"type": "text"
																},
																{
																	"key": "passTypeIdentifier",
																	"value": "<string>",
																	"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																	"type": "text"
																},
																{
																	"key": "wwdr",
																	"value": "<string>",
																	"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																	"type": "text"
																},
																{
																	"key": "signerCert",
																	"value": "<string>",
																	"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																	"type": "text"
																},
																{
																	"key": "signerKey",
																	"value": "<string>",
																	"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																	"type": "text"
																},
																{
																	"key": "signerKeyPassphrase",
																	"value": "<string>",
																	"description": "(Required) Passphrase for the encrypted key.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"apple",
																"templates"
															]
														},
														"description": "Creates an Apple Pass template based on the provided `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n> The Apple Pass template uses the official Apple Pass bundle structure.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Retrieve all Apple Pass templates",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"apple",
																"templates"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "100",
																	"description": "Range size of the list, default 100",
																	"disabled": true
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "Starting point for the list",
																	"disabled": true
																}
															]
														},
														"description": "Retrieves a list of all Apple Pass template available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass templates retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"apple\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Update an Apple Pass template",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Apple digital pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "fileName",
																	"value": "<string>",
																	"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																	"type": "text"
																},
																{
																	"key": "teamIdentifier",
																	"value": "<string>",
																	"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																	"type": "text"
																},
																{
																	"key": "passTypeIdentifier",
																	"value": "<string>",
																	"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																	"type": "text"
																},
																{
																	"key": "wwdr",
																	"value": "<string>",
																	"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																	"type": "text"
																},
																{
																	"key": "signerCert",
																	"value": "<string>",
																	"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																	"type": "text"
																},
																{
																	"key": "signerKey",
																	"value": "<string>",
																	"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																	"type": "text"
																},
																{
																	"key": "signerKeyPassphrase",
																	"value": "<string>",
																	"description": "(Required) Passphrase for the encrypted key.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"apple",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Apple Pass template ID"
																}
															]
														},
														"description": "Updates an existing Apple Pass template by providing its ID and a `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template updated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Apple digital pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "fileName",
																			"value": "<string>",
																			"description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
																			"type": "text"
																		},
																		{
																			"key": "teamIdentifier",
																			"value": "<string>",
																			"description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
																			"type": "text"
																		},
																		{
																			"key": "passTypeIdentifier",
																			"value": "<string>",
																			"description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
																			"type": "text"
																		},
																		{
																			"key": "wwdr",
																			"value": "<string>",
																			"description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerCert",
																			"value": "<string>",
																			"description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
																			"type": "text"
																		},
																		{
																			"key": "signerKey",
																			"value": "<string>",
																			"description": "(Required) The encrypted key of the Apple pass signer certificate.",
																			"type": "text"
																		},
																		{
																			"key": "signerKeyPassphrase",
																			"value": "<string>",
																			"description": "(Required) Passphrase for the encrypted key.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Retrieve an Apple Pass template",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"apple",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Apple Pass template ID"
																}
															]
														},
														"description": "Retrieves an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Delete an Apple Pass template",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"apple",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Apple Pass template ID"
																}
															]
														},
														"description": "Deletes an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_FAIL"
													},
													"response": [
														{
															"name": "Apple Pass template deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"apple",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Semantic CWT credentials Google Pass templates",
											"item": [
												{
													"name": "Create a Google Pass template",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Google Pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "issuerId",
																	"value": "<string>",
																	"description": "(Required) Google Wallet Pass signer issuer ID.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountClientEmail",
																	"value": "<string>",
																	"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountPrivateKey",
																	"value": "<string>",
																	"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"google",
																"templates"
															]
														},
														"description": "Creates a Google Pass template based on the provided `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass template created",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates"
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"google\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates"
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Retrieve all Google Pass templates",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"google",
																"templates"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "100",
																	"description": "Range size of the list, default 100",
																	"disabled": true
																},
																{
																	"key": "cursor",
																	"value": "<string>",
																	"description": "Starting point for the list",
																	"disabled": true
																}
															]
														},
														"description": "Retrieves a list of all Google Pass templates available on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
													},
													"response": [
														{
															"name": "Google Pass templates retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"apple\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "100",
																			"description": "Range size of the list, default 100",
																			"disabled": true
																		},
																		{
																			"key": "cursor",
																			"value": "<string>",
																			"description": "Starting point for the list",
																			"disabled": true
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Update a Google Pass template",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "(Required) Insert a name to identify this Google Pass template.",
																	"type": "text"
																},
																{
																	"key": "template",
																	"value": "<string>",
																	"description": "(Required) Includes your template files.",
																	"type": "text"
																},
																{
																	"key": "issuerId",
																	"value": "<string>",
																	"description": "(Required) Google Wallet Pass signer issuer ID.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountClientEmail",
																	"value": "<string>",
																	"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																	"type": "text"
																},
																{
																	"key": "serviceAccountPrivateKey",
																	"value": "<string>",
																	"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"google",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"description": "(Required) Google Pass template ID"
																}
															]
														},
														"description": "Updates a existing Google Pass template by providing its ID and a `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass template updated",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"google\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "multipart/form-data"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "(Required) Insert a name to identify this Google Pass template.",
																			"type": "text"
																		},
																		{
																			"key": "template",
																			"value": "<string>",
																			"description": "(Required) Includes your template files.",
																			"type": "text"
																		},
																		{
																			"key": "issuerId",
																			"value": "<string>",
																			"description": "(Required) Google Wallet Pass signer issuer ID.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountClientEmail",
																			"value": "<string>",
																			"description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
																			"type": "text"
																		},
																		{
																			"key": "serviceAccountPrivateKey",
																			"value": "<string>",
																			"description": "(Required) Private key PEM of the Google Cloud Platform service account.",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Retrieve a Google Pass template",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"google",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Google Pass template ID"
																}
															]
														},
														"description": "Retrieves an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass templated retrieved",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"google\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												},
												{
													"name": "Delete a Google Pass template",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"credentials",
																"compact-semantic",
																"digital-pass",
																"google",
																"templates",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<uuid>",
																	"description": "(Required) Google Pass template ID"
																}
															]
														},
														"description": "Delete a Google Pay Pass template by ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_FAIL"
													},
													"response": [
														{
															"name": "Google Pass template deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad Request",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"credentials",
																		"compact-semantic",
																		"digital-pass",
																		"google",
																		"templates",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Sign a Semantic CWT credential",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"ea_\": \"<string>\",\n\t\t\t\t\"ipsum_f00\": \"<string>\",\n\t\t\t\t\"veniam_4b\": \"<string>\"\n\t\t\t},\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"@context\": \"<string>\"\n\t\t},\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\"\n\t},\n\t\"revocable\": false,\n\t\"isRevoked\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"sign"
											]
										},
										"description": "Returns a signed Semantic CWT credential generated from a provided valid payload.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_START\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_FAIL"
									},
									"response": [
										{
											"name": "Semantic CWT credential signed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"ea_\": \"<string>\",\n\t\t\t\t\"ipsum_f00\": \"<string>\",\n\t\t\t\t\"veniam_4b\": \"<string>\"\n\t\t\t},\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"@context\": \"<string>\"\n\t\t},\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\"\n\t},\n\t\"revocable\": false,\n\t\"isRevoked\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"sign"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<string>\",\n\t\"encoded\": \"<string>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"labore2\": \"<string>\",\n\t\t\t\t\"est_d7\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t}\n}"
										},
										{
											"name": "Failed to sign Semantic CWT credential, invalid payload, etc",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"ea_\": \"<string>\",\n\t\t\t\t\"ipsum_f00\": \"<string>\",\n\t\t\t\t\"veniam_4b\": \"<string>\"\n\t\t\t},\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"@context\": \"<string>\"\n\t\t},\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\"\n\t},\n\t\"revocable\": false,\n\t\"isRevoked\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"sign"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Format a Semantic CWT credential as a QR code",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "image/png"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"qrcode"
											]
										},
										"description": "Returns a QR code representation of a Semantic CWT credential from a provided encoded string representation of that credential.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_FAIL"
									},
									"response": [
										{
											"name": "QR code generated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "image/png"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"qrcode"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "image/png"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"qrcode"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Format a CWT credential as a PDF",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/pdf"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"pdf"
											]
										},
										"description": "Returns a PDF representation of a provided CWT credential based on an existing PDF template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_FAIL"
									},
									"response": [
										{
											"name": "PDF created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/pdf"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"pdf"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/pdf"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"pdf"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"pdf"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Format a Semantic CWT credential as an Apple Pass",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/vnd.apple.pkpass"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"digital-pass",
												"apple"
											]
										},
										"description": "Returns an Apple Pass representation of a provided Semantic CWT credential based on an existing Apple Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_FAIL"
									},
									"response": [
										{
											"name": "Apple Pass created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/vnd.apple.pkpass"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"digital-pass",
														"apple"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/vnd.apple.pkpass"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"digital-pass",
														"apple"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Format a Semantic CWT credential as a Google Pass",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"digital-pass",
												"google"
											]
										},
										"description": "Returns a Google Pass representation of a provided CWT credential based on an existing Google Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_FAIL"
									},
									"response": [
										{
											"name": "Google Pass created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"digital-pass",
														"google"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"redirectTo\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"digital-pass",
														"google"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "JSON credentials issuance",
							"item": [
								{
									"name": "Sign a JSON credential",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialSubject\": {},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"expirationDate\": \"<string>\",\n\t\t\"issuanceDate\": \"<string>\"\n\t},\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"tag\": \"<string>\",\n\t\"persist\": false,\n\t\"revocable\": false,\n\t\"includeId\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"sign"
											]
										},
										"description": "Returns a signed JSON credential generated from a provided valid payload.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_SIGN_START\n* CREDENTIAL_WEB_SEMANTIC_SIGN_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_SIGN_FAIL"
									},
									"response": [
										{
											"name": "JSON Credential signed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialSubject\": {},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"expirationDate\": \"<string>\",\n\t\t\"issuanceDate\": \"<string>\"\n\t},\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"tag\": \"<string>\",\n\t\"persist\": false,\n\t\"revocable\": false,\n\t\"includeId\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"web-semantic",
														"sign"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<string>\",\n\t\"credential\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"issuanceDate\": \"<string>\",\n\t\"tag\": \"<string>\",\n\t\"credentialStatus\": {\n\t\t\"id\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\"revocationListCredential\": \"<string>\"\n\t}\n}"
										},
										{
											"name": "Failed to sign JSON credential, invalid payload, etc",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialSubject\": {},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"expirationDate\": \"<string>\",\n\t\t\"issuanceDate\": \"<string>\"\n\t},\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"tag\": \"<string>\",\n\t\"persist\": false,\n\t\"revocable\": false,\n\t\"includeId\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"web-semantic",
														"sign"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "mDocs issuance",
							"item": [
								{
									"name": "Sign an mDoc",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": {\n\t\t\"deviceKeyInfo\": {\n\t\t\t\"deviceKey\": {}\n\t\t},\n\t\t\"docType\": \"<string>\",\n\t\t\"validityInfo\": {\n\t\t\t\"validUntil\": \"<dateTime>\",\n\t\t\t\"validFrom\": \"<dateTime>\",\n\t\t\t\"expectedUpdate\": \"<dateTime>\"\n\t\t},\n\t\t\"itemsToSign\": {\n\t\t\t\"Duis063\": {\n\t\t\t\t\"Duis_a2b\": {\n\t\t\t\t\t\"value\": true,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t},\n\t\t\t\t\"in65\": {\n\t\t\t\t\t\"value\": false,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"elit_8a\": {\n\t\t\t\t\"aliquip_83\": {\n\t\t\t\t\t\"value\": true,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"branding\": {\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\"issuerIcon\": \"<string>\"\n\t\t}\n\t},\n\t\"documentSignerId\": \"<uuid>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/sign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"sign"
											]
										},
										"description": "Signs the provided mDoc payload using the referenced Document Signer Certificate (DSC).\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_SIGN_START\n* MOBILE_CREDENTIAL_SIGN_SUCCESS\n* MOBILE_CREDENTIAL_SIGN_FAIL"
									},
									"response": [
										{
											"name": "mDoc signed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"deviceKeyInfo\": {\n\t\t\t\"deviceKey\": {}\n\t\t},\n\t\t\"docType\": \"<string>\",\n\t\t\"validityInfo\": {\n\t\t\t\"validUntil\": \"<dateTime>\",\n\t\t\t\"validFrom\": \"<dateTime>\",\n\t\t\t\"expectedUpdate\": \"<dateTime>\"\n\t\t},\n\t\t\"itemsToSign\": {\n\t\t\t\"Duis063\": {\n\t\t\t\t\"Duis_a2b\": {\n\t\t\t\t\t\"value\": true,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t},\n\t\t\t\t\"in65\": {\n\t\t\t\t\t\"value\": false,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"elit_8a\": {\n\t\t\t\t\"aliquip_83\": {\n\t\t\t\t\t\"value\": true,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"branding\": {\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\"issuerIcon\": \"<string>\"\n\t\t}\n\t},\n\t\"documentSignerId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"sign"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"encoded\": \"<string>\",\n\t\"decoded\": {\n\t\t\"namespaces\": {},\n\t\t\"issuerAuth\": \"<string>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"payload\": {\n\t\t\"deviceKeyInfo\": {\n\t\t\t\"deviceKey\": {}\n\t\t},\n\t\t\"docType\": \"<string>\",\n\t\t\"validityInfo\": {\n\t\t\t\"validUntil\": \"<dateTime>\",\n\t\t\t\"validFrom\": \"<dateTime>\",\n\t\t\t\"expectedUpdate\": \"<dateTime>\"\n\t\t},\n\t\t\"itemsToSign\": {\n\t\t\t\"Duis063\": {\n\t\t\t\t\"Duis_a2b\": {\n\t\t\t\t\t\"value\": true,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t},\n\t\t\t\t\"in65\": {\n\t\t\t\t\t\"value\": false,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"elit_8a\": {\n\t\t\t\t\"aliquip_83\": {\n\t\t\t\t\t\"value\": true,\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"branding\": {\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\"issuerIcon\": \"<string>\"\n\t\t}\n\t},\n\t\"documentSignerId\": \"<uuid>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/sign",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"sign"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "OID4VCI",
					"item": [
						{
							"name": "CWT credentials configuration",
							"item": [
								{
									"name": "Create a CWT credential configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_5c\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"configurations"
											]
										},
										"description": "Creates a new CWT credential configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
									},
									"response": [
										{
											"name": "CWT credential configuration created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_5c\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"claimMappings\": {\n\t\t\"eiusmod_63f\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"<string>\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_5c\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all CWT credential configurations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of entries",
													"disabled": true
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "The optional credential type to filter on",
													"disabled": true
												}
											]
										},
										"description": "Returns a list of all CWT credential configurations from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "CWT credential configurations retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "The optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"sit_5\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"aliqua_e1\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"aliquip_2\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"ipsum_acc\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "The optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve a CWT credential configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier for the CWT credential configuration."
												}
											]
										},
										"description": "Returns a CWT credential configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
									},
									"response": [
										{
											"name": "CWT credential configuration retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"claimMappings\": {\n\t\t\"eiusmod_63f\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"<string>\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "CWT credential configuration not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update a CWT credential configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_5c\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier for the CWT credential configuration."
												}
											]
										},
										"description": "Updates an existing CWT credential configuration by providing its ID.\n        \n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
									},
									"response": [
										{
											"name": "CWT credential configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_5c\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"claimMappings\": {\n\t\t\"eiusmod_63f\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"<string>\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_5c\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "CWT credential configuration not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_5c\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete a CWT credential configuration",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier for the CWT credential configuration."
												}
											]
										},
										"description": "Deletes an existing CWT credential configuration by providing its ID.\n \n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
									},
									"response": [
										{
											"name": "CWT credential configuration deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "The credential configuration is not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Semantic CWT credentials configuration",
							"item": [
								{
									"name": "Create a Semantic CWT credentials configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa6\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"sint_7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"aute__5e\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"sint voluptate laborum\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"configurations"
											]
										},
										"description": "Creates a new Semantic CWT credentials configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
									},
									"response": [
										{
											"name": "Credential configuration created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa6\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"sint_7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"aute__5e\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"sint voluptate laborum\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"claimMappings\": {\n\t\t\"essec\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"nulla_4\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ad_6a0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"ullamco occaecat dolore sunt\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa6\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"sint_7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"aute__5e\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"sint voluptate laborum\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all Semantic CWT credentials configurations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of entries",
													"disabled": true
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "The optional credential type to filter on",
													"disabled": true
												}
											]
										},
										"description": "Returns a list of all Comapct Semantic Credential configurations from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "Semantic CWT credentials configurations retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "The optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"cupidatat25\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"dolore2d\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"anim_a4d\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"ea eu\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"dolore6\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"qui laborum\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "The optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve a Semantic CWT credentials configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
												}
											]
										},
										"description": "Returns a Semantic CWT credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
									},
									"response": [
										{
											"name": "Semantic CWT credentials configuration retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"claimMappings\": {\n\t\t\"essec\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"nulla_4\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ad_6a0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"ullamco occaecat dolore sunt\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "The Credential Configuration is not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update a Semantic CWT credentials configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa6\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"sint_7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"aute__5e\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"sint voluptate laborum\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
												}
											]
										},
										"description": "Updates an existing Semantic CWT credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
									},
									"response": [
										{
											"name": "Semantic CWT credentials configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa6\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"sint_7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"aute__5e\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"sint voluptate laborum\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"claimMappings\": {\n\t\t\"essec\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"nulla_4\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ad_6a0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"ullamco occaecat dolore sunt\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa6\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"sint_7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"aute__5e\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"sint voluptate laborum\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "The Credential Configuration is not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa6\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"sint_7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"aute__5e\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"sint voluptate laborum\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete a Semantic CWT credentials configuration",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
												}
											]
										},
										"description": "Deletes an existing Semantic CWT credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
									},
									"response": [
										{
											"name": "Semantic CWT credentials configuration deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "The Credential Configuration is not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"compact-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "JSON credentials configuration",
							"item": [
								{
									"name": "Create a JSON credentials configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"consequat8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v2",
												"credentials",
												"web-semantic",
												"configurations"
											]
										},
										"description": "Creates a new JSON credentials configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
									},
									"response": [
										{
											"name": "JSON credentials configuration created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"consequat8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"do2\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"consequat8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all JSON credentials configurations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v2",
												"credentials",
												"web-semantic",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of entries",
													"disabled": true
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "The optional credential type to filter on",
													"disabled": true
												}
											]
										},
										"description": "Returns a list of all JSON credential configurations on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "JSON credentials configurations retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "The optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"issuer\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"persist\": false,\n\t\t\t\"revocable\": true,\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"additionalTypes\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"contexts\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"proofType\": \"Ed25519Signature2018\",\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"deserunt_405\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"dolore83\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"magna51\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"includeId\": false,\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"issuer\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"persist\": false,\n\t\t\t\"revocable\": true,\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"additionalTypes\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"contexts\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"proofType\": \"BbsSignature2022\",\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"Duis4c2\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"anim_0\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"includeId\": false,\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "The optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve a JSON credentials configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v2",
												"credentials",
												"web-semantic",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) JSON credentials configuration unique identifier"
												}
											]
										},
										"description": "Retrieve a JSON credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
									},
									"response": [
										{
											"name": "JSON credentials configuration retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"do2\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "The credential configuration is not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update a JSON credentials configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"consequat8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v2",
												"credentials",
												"web-semantic",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) JSON credentials configuration unique identifier"
												}
											]
										},
										"description": "Updates an existing JSON credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
									},
									"response": [
										{
											"name": "JSON credentials configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"consequat8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"do2\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"consequat8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "The credential configuration is not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"consequat8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete a JSON credentials configuration",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v2",
												"credentials",
												"web-semantic",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) JSON credentials configuration unique identifier"
												}
											]
										},
										"description": "Deletes an existing JSON credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
									},
									"response": [
										{
											"name": "JSON credentials configuration deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "The credential configuration is not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v2",
														"credentials",
														"web-semantic",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "mDoc credentials configuration",
							"item": [
								{
									"name": "Create an mDocs configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"configurations"
											]
										},
										"description": "Creates a new mDocs configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
									},
									"response": [
										{
											"name": "mDocs configuration created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t},\n\t\"claimSourceId\": \"<uuid>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all mDocs configurations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"configurations"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Optional credential type to filter on",
													"disabled": true
												}
											]
										},
										"description": "Retrieves all mDocs configurations from your tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "mDocs configurations retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Range size of the list, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the list",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimSourceId\": \"<uuid>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimSourceId\": \"<uuid>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Range size of the list, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the list",
															"disabled": true
														},
														{
															"key": "type",
															"value": "<string>",
															"description": "Optional credential type to filter on",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve an mDocs configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) mDocs configuration ID"
												}
											]
										},
										"description": "Retrieves an existing mDocs configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL\n"
									},
									"response": [
										{
											"name": "mDocs configuration retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t},\n\t\"claimSourceId\": \"<uuid>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "mDocs configuration Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update an mDocs configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) mDocs configuration ID"
												}
											]
										},
										"description": "Updates an existing mDocs configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
									},
									"response": [
										{
											"name": "mDocs configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t},\n\t\"claimSourceId\": \"<uuid>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "mDocs configuration not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete an mDocs configuration",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"configurations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) mDocs configuration ID"
												}
											]
										},
										"description": "Deletes an existing mDocs configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
									},
									"response": [
										{
											"name": "mDocs configuration deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "mDocs configuration not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"credentials",
														"mobile",
														"configurations",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Authentication Provider",
							"item": [
								{
									"name": "Configure an Authentication Provider",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"url\": \"https://yoyyP.ftwUa8\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"dolora\": \"<string>\",\n\t\t\"consequat48c\": \"<string>\",\n\t\t\"sint5\": \"<string>\",\n\t\t\"Lorem_4\": \"<string>\",\n\t\t\"eiusmode\": \"<string>\",\n\t\t\"aliqua_28e\": \"<string>\",\n\t\t\"et_c1\": \"<string>\",\n\t\t\"veniam_e\": \"<string>\",\n\t\t\"officia_78\": \"<string>\",\n\t\t\"minim025\": \"<string>\",\n\t\t\"fugiat_9\": \"<string>\",\n\t\t\"commodo_c7\": \"<string>\",\n\t\t\"nullab\": \"<string>\",\n\t\t\"enim_7a\": \"<string>\",\n\t\t\"officia_cd1\": \"<string>\",\n\t\t\"quif\": \"<string>\",\n\t\t\"incididunt58\": \"<string>\",\n\t\t\"magnab\": \"<string>\",\n\t\t\"magna_2ab\": \"<string>\",\n\t\t\"est69\": \"<string>\",\n\t\t\"dolore_37\": \"<string>\",\n\t\t\"cillum__8\": \"<string>\",\n\t\t\"doe\": \"<string>\",\n\t\t\"sit6\": \"<string>\",\n\t\t\"proident__9\": \"<string>\",\n\t\t\"quisaf\": \"<string>\",\n\t\t\"irured\": \"<string>\",\n\t\t\"nisif_3\": \"<string>\",\n\t\t\"pariatur7cc\": \"<string>\",\n\t\t\"reprehenderit_5e\": \"<string>\",\n\t\t\"Duis77\": \"<string>\",\n\t\t\"dod1\": \"<string>\",\n\t\t\"adipisicinge\": \"<string>\",\n\t\t\"amet_0e8\": \"<string>\",\n\t\t\"anim41\": \"<string>\",\n\t\t\"enimde\": \"<string>\",\n\t\t\"nulla_0b\": \"<string>\",\n\t\t\"sint_10\": \"<string>\",\n\t\t\"do_b_\": \"<string>\",\n\t\t\"quis_04\": \"<string>\",\n\t\t\"Lorem_6e\": \"<string>\",\n\t\t\"occaecat5\": \"<string>\",\n\t\t\"Excepteura15\": \"<string>\",\n\t\t\"culpa35\": \"<string>\",\n\t\t\"laboreb5\": \"<string>\",\n\t\t\"officia8db\": \"<string>\",\n\t\t\"magna72e\": \"<string>\",\n\t\t\"dolor_bd_\": \"<string>\",\n\t\t\"deserunt__2\": \"<string>\",\n\t\t\"consequat_c\": \"<string>\",\n\t\t\"Loremc\": \"<string>\",\n\t\t\"utf37\": \"<string>\",\n\t\t\"do_dd2\": \"<string>\",\n\t\t\"tempor_7d\": \"<string>\",\n\t\t\"aute_f47\": \"<string>\",\n\t\t\"nulla_7\": \"<string>\",\n\t\t\"officia_8\": \"<string>\",\n\t\t\"laborecc7\": \"<string>\",\n\t\t\"nonf79\": \"<string>\",\n\t\t\"sint2ab\": \"<string>\",\n\t\t\"nulla4\": \"<string>\",\n\t\t\"veniama37\": \"<string>\",\n\t\t\"esse7\": \"<string>\",\n\t\t\"minim_4f_\": \"<string>\",\n\t\t\"cupidatat_5fd\": \"<string>\",\n\t\t\"in_fd1\": \"<string>\",\n\t\t\"et_e14\": \"<string>\",\n\t\t\"nulla5\": \"<string>\",\n\t\t\"proidentba\": \"<string>\",\n\t\t\"exercitation86c\": \"<string>\",\n\t\t\"laborum7a9\": \"<string>\",\n\t\t\"amet_6\": \"<string>\",\n\t\t\"dolore__\": \"<string>\",\n\t\t\"adipisicing_3_4\": \"<string>\",\n\t\t\"doeb\": \"<string>\",\n\t\t\"consequat_3\": \"<string>\",\n\t\t\"nisi_ed7\": \"<string>\",\n\t\t\"dolor_2\": \"<string>\",\n\t\t\"ut_9f3\": \"<string>\",\n\t\t\"voluptate_fa\": \"<string>\",\n\t\t\"commodo_45d\": \"<string>\",\n\t\t\"nonab\": \"<string>\",\n\t\t\"sit881\": \"<string>\",\n\t\t\"irure_7\": \"<string>\",\n\t\t\"tempor_a42\": \"<string>\",\n\t\t\"occaecat_cc1\": \"<string>\",\n\t\t\"officia_3\": \"<string>\",\n\t\t\"ad9\": \"<string>\",\n\t\t\"nisi_b0\": \"<string>\",\n\t\t\"sed_aa5\": \"<string>\",\n\t\t\"proident_4d_\": \"<string>\",\n\t\t\"amet9_a\": \"<string>\",\n\t\t\"sit9\": \"<string>\",\n\t\t\"sint_8\": \"<string>\",\n\t\t\"dolore_d\": \"<string>\",\n\t\t\"sed49\": \"<string>\",\n\t\t\"sunt_dc\": \"<string>\",\n\t\t\"commodo_\": \"<string>\",\n\t\t\"dolor_9f_\": \"<string>\",\n\t\t\"eiusmod_ee5\": \"<string>\",\n\t\t\"proident8\": \"<string>\",\n\t\t\"sit_e_\": \"<string>\",\n\t\t\"ad77e\": \"<string>\",\n\t\t\"culpa1\": \"<string>\",\n\t\t\"nulla1f\": \"<string>\",\n\t\t\"minim_\": \"<string>\",\n\t\t\"eu_29\": \"<string>\",\n\t\t\"quie\": \"<string>\",\n\t\t\"id_fea\": \"<string>\",\n\t\t\"velit97\": \"<string>\",\n\t\t\"sit_0d\": \"<string>\",\n\t\t\"voluptate3b\": \"<string>\",\n\t\t\"sint384\": \"<string>\",\n\t\t\"cupidatat__3a\": \"<string>\",\n\t\t\"fugiat_3\": \"<string>\",\n\t\t\"ipsum_43\": \"<string>\",\n\t\t\"dolorfe4\": \"<string>\",\n\t\t\"in_45\": \"<string>\",\n\t\t\"pariatur88c\": \"<string>\",\n\t\t\"mollit7_\": \"<string>\",\n\t\t\"anim70e\": \"<string>\",\n\t\t\"laboris_c97\": \"<string>\",\n\t\t\"nisi_3c4\": \"<string>\",\n\t\t\"culpa_5\": \"<string>\",\n\t\t\"labore_e9\": \"<string>\",\n\t\t\"deseruntf60\": \"<string>\",\n\t\t\"aliquip09\": \"<string>\",\n\t\t\"aute__51\": \"<string>\",\n\t\t\"cupidatat_d6\": \"<string>\",\n\t\t\"et42\": \"<string>\",\n\t\t\"fugiat__\": \"<string>\",\n\t\t\"consequat__c9\": \"<string>\",\n\t\t\"magna_1a\": \"<string>\",\n\t\t\"eiusmod47b\": \"<string>\",\n\t\t\"in_3da\": \"<string>\",\n\t\t\"officia_c72\": \"<string>\",\n\t\t\"minim_53\": \"<string>\",\n\t\t\"anim0\": \"<string>\",\n\t\t\"aute7b6\": \"<string>\",\n\t\t\"sunt8\": \"<string>\",\n\t\t\"ameta8\": \"<string>\",\n\t\t\"sint_d\": \"<string>\",\n\t\t\"minim74\": \"<string>\",\n\t\t\"incididunt0d1\": \"<string>\",\n\t\t\"aliquip1bf\": \"<string>\",\n\t\t\"essed\": \"<string>\",\n\t\t\"pariatur0\": \"<string>\",\n\t\t\"occaecata\": \"<string>\",\n\t\t\"nulla_ba\": \"<string>\",\n\t\t\"aliqua61f\": \"<string>\",\n\t\t\"anim_34\": \"<string>\",\n\t\t\"elit0\": \"<string>\",\n\t\t\"ipsum_9_\": \"<string>\",\n\t\t\"ut1f2\": \"<string>\",\n\t\t\"aliquip_c\": \"<string>\",\n\t\t\"id_160\": \"<string>\",\n\t\t\"minim_c2e\": \"<string>\",\n\t\t\"commodo6b8\": \"<string>\",\n\t\t\"esse4a\": \"<string>\",\n\t\t\"enimd9\": \"<string>\",\n\t\t\"ad70_\": \"<string>\",\n\t\t\"aliquip_d\": \"<string>\",\n\t\t\"in_3\": \"<string>\",\n\t\t\"Duis_4e0\": \"<string>\",\n\t\t\"laboris_1bd\": \"<string>\",\n\t\t\"Excepteur_73d\": \"<string>\",\n\t\t\"mollit_4\": \"<string>\",\n\t\t\"elit_c\": \"<string>\",\n\t\t\"Utb\": \"<string>\",\n\t\t\"qui_0\": \"<string>\",\n\t\t\"mollit_1\": \"<string>\",\n\t\t\"non9d\": \"<string>\",\n\t\t\"sedb0\": \"<string>\",\n\t\t\"ullamco_dfa\": \"<string>\",\n\t\t\"ut_4ba\": \"<string>\",\n\t\t\"deseruntb07\": \"<string>\",\n\t\t\"in_f\": \"<string>\",\n\t\t\"nonc\": \"<string>\",\n\t\t\"tempor4_8\": \"<string>\",\n\t\t\"enim_8\": \"<string>\",\n\t\t\"Ut_0fa\": \"<string>\",\n\t\t\"est_1\": \"<string>\",\n\t\t\"aliquip_b\": \"<string>\",\n\t\t\"in_b\": \"<string>\",\n\t\t\"id_cd\": \"<string>\",\n\t\t\"incididunt_ec6\": \"<string>\",\n\t\t\"consectetur5bd\": \"<string>\",\n\t\t\"proident65\": \"<string>\",\n\t\t\"enim_3\": \"<string>\",\n\t\t\"dolore_c5\": \"<string>\",\n\t\t\"non_a1\": \"<string>\",\n\t\t\"deserunt489\": \"<string>\",\n\t\t\"elit36\": \"<string>\",\n\t\t\"officiab\": \"<string>\",\n\t\t\"do_bb\": \"<string>\",\n\t\t\"ipsumd57\": \"<string>\",\n\t\t\"tempor_838\": \"<string>\",\n\t\t\"commodo7\": \"<string>\",\n\t\t\"essea4\": \"<string>\",\n\t\t\"qui_f5c\": \"<string>\",\n\t\t\"dolor693\": \"<string>\",\n\t\t\"adipisicing0\": \"<string>\",\n\t\t\"officia_5\": \"<string>\",\n\t\t\"velit_e1\": \"<string>\",\n\t\t\"id9ce\": \"<string>\",\n\t\t\"mollitf3\": \"<string>\",\n\t\t\"reprehenderit250\": \"<string>\",\n\t\t\"ullamco80\": \"<string>\",\n\t\t\"cupidatat_720\": \"<string>\",\n\t\t\"voluptated7\": \"<string>\",\n\t\t\"autef5d\": \"<string>\",\n\t\t\"commodo_8\": \"<string>\",\n\t\t\"minim9\": \"<string>\",\n\t\t\"laborum_65\": \"<string>\",\n\t\t\"incididunt_bf1\": \"<string>\",\n\t\t\"culpa_0c\": \"<string>\",\n\t\t\"officia_cb\": \"<string>\",\n\t\t\"irurea2e\": \"<string>\",\n\t\t\"consequat_b3\": \"<string>\",\n\t\t\"culpa_c\": \"<string>\",\n\t\t\"tempor_2a\": \"<string>\",\n\t\t\"euc\": \"<string>\",\n\t\t\"nulla7\": \"<string>\",\n\t\t\"nisi_425\": \"<string>\",\n\t\t\"in192\": \"<string>\",\n\t\t\"pariatur3\": \"<string>\",\n\t\t\"adipisicing7\": \"<string>\",\n\t\t\"amet3_7\": \"<string>\",\n\t\t\"pariatur_2_b\": \"<string>\",\n\t\t\"ut6f\": \"<string>\",\n\t\t\"non1\": \"<string>\",\n\t\t\"sed_31\": \"<string>\",\n\t\t\"enim1\": \"<string>\",\n\t\t\"sint_da4\": \"<string>\",\n\t\t\"voluptate_b\": \"<string>\",\n\t\t\"ad7e9\": \"<string>\",\n\t\t\"pariatur_93\": \"<string>\",\n\t\t\"enim_c\": \"<string>\",\n\t\t\"Excepteur_ac7\": \"<string>\",\n\t\t\"eiusmod_a9\": \"<string>\",\n\t\t\"dolore_ef\": \"<string>\",\n\t\t\"incididunte7\": \"<string>\",\n\t\t\"sed_e7\": \"<string>\",\n\t\t\"est_ce5\": \"<string>\",\n\t\t\"ind1\": \"<string>\",\n\t\t\"sunt_07\": \"<string>\",\n\t\t\"dolore_9\": \"<string>\",\n\t\t\"sit_6\": \"<string>\",\n\t\t\"incididunt_0d\": \"<string>\",\n\t\t\"officia0b1\": \"<string>\",\n\t\t\"labore6\": \"<string>\",\n\t\t\"sed_536\": \"<string>\",\n\t\t\"Ut_3\": \"<string>\",\n\t\t\"est_3\": \"<string>\",\n\t\t\"reprehenderit8e\": \"<string>\",\n\t\t\"Excepteur__2d\": \"<string>\",\n\t\t\"sunt5ec\": \"<string>\",\n\t\t\"reprehenderit_33\": \"<string>\",\n\t\t\"velit_b8d\": \"<string>\",\n\t\t\"eiusmod5\": \"<string>\",\n\t\t\"consectetur_7\": \"<string>\",\n\t\t\"nulla_baa\": \"<string>\",\n\t\t\"officia_4b1\": \"<string>\",\n\t\t\"ex_6e4\": \"<string>\",\n\t\t\"doc\": \"<string>\",\n\t\t\"exercitationc\": \"<string>\",\n\t\t\"doloree34\": \"<string>\",\n\t\t\"dof7\": \"<string>\",\n\t\t\"magnaddb\": \"<string>\",\n\t\t\"sunt_a\": \"<string>\",\n\t\t\"in_a5\": \"<string>\",\n\t\t\"aliquip_fb\": \"<string>\",\n\t\t\"Utf4\": \"<string>\",\n\t\t\"ipsum_eb\": \"<string>\",\n\t\t\"dolor_fa\": \"<string>\",\n\t\t\"ind\": \"<string>\",\n\t\t\"nulla_1\": \"<string>\",\n\t\t\"in_d_9\": \"<string>\",\n\t\t\"Duis_382\": \"<string>\",\n\t\t\"nulla_3\": \"<string>\",\n\t\t\"sunt_a1\": \"<string>\",\n\t\t\"irure75\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"ad_72\": \"<string>\",\n\t\t\"Lorem_ee\": \"<string>\",\n\t\t\"dolor_b_\": \"<string>\",\n\t\t\"et908\": \"<string>\",\n\t\t\"qui2\": \"<string>\",\n\t\t\"adipisicing0e3\": \"<string>\",\n\t\t\"Duis_735\": \"<string>\",\n\t\t\"elit_3cb\": \"<string>\",\n\t\t\"adipisicing5\": \"<string>\",\n\t\t\"Duis8\": \"<string>\",\n\t\t\"esse_7\": \"<string>\",\n\t\t\"ullamco2\": \"<string>\",\n\t\t\"enim69\": \"<string>\",\n\t\t\"fugiat_7\": \"<string>\",\n\t\t\"deserunt1\": \"<string>\",\n\t\t\"adipisicing_44\": \"<string>\",\n\t\t\"enim_09e\": \"<string>\",\n\t\t\"ullamco83\": \"<string>\",\n\t\t\"Duis21c\": \"<string>\",\n\t\t\"ine\": \"<string>\",\n\t\t\"in_5_\": \"<string>\",\n\t\t\"esse793\": \"<string>\",\n\t\t\"labore_9e\": \"<string>\",\n\t\t\"esse_87\": \"<string>\",\n\t\t\"eteb8\": \"<string>\",\n\t\t\"eac\": \"<string>\",\n\t\t\"consectetur75\": \"<string>\",\n\t\t\"in_5f\": \"<string>\",\n\t\t\"minim_6a\": \"<string>\",\n\t\t\"elit3a5\": \"<string>\",\n\t\t\"eu_3_3\": \"<string>\",\n\t\t\"in8\": \"<string>\",\n\t\t\"veniam0\": \"<string>\",\n\t\t\"amet_05\": \"<string>\",\n\t\t\"mollitf\": \"<string>\",\n\t\t\"Duis5\": \"<string>\",\n\t\t\"velit_2\": \"<string>\",\n\t\t\"aliquip5\": \"<string>\",\n\t\t\"sed7\": \"<string>\",\n\t\t\"occaecat_394\": \"<string>\",\n\t\t\"Lorem_1_\": \"<string>\",\n\t\t\"adipisicing66a\": \"<string>\",\n\t\t\"labore_ba\": \"<string>\",\n\t\t\"culpa_35\": \"<string>\",\n\t\t\"labore_5d\": \"<string>\",\n\t\t\"do_98\": \"<string>\",\n\t\t\"eu0f\": \"<string>\",\n\t\t\"aliquip_7\": \"<string>\",\n\t\t\"nullac5\": \"<string>\",\n\t\t\"elit__3\": \"<string>\",\n\t\t\"dolor_52f\": \"<string>\",\n\t\t\"enim__8_\": \"<string>\",\n\t\t\"sunt_4be\": \"<string>\",\n\t\t\"dolore_05\": \"<string>\",\n\t\t\"officia9f\": \"<string>\",\n\t\t\"consequatf54\": \"<string>\",\n\t\t\"consecteturc28\": \"<string>\",\n\t\t\"deserunt7\": \"<string>\",\n\t\t\"nostrud_7\": \"<string>\",\n\t\t\"auteeb2\": \"<string>\",\n\t\t\"in_25\": \"<string>\",\n\t\t\"aliquip_4_\": \"<string>\",\n\t\t\"Excepteur3d\": \"<string>\",\n\t\t\"Ut6e\": \"<string>\",\n\t\t\"veniam_925\": \"<string>\",\n\t\t\"est_c9c\": \"<string>\",\n\t\t\"consectetur_9a5\": \"<string>\",\n\t\t\"non_2\": \"<string>\",\n\t\t\"qui_127\": \"<string>\",\n\t\t\"Duis1c1\": \"<string>\",\n\t\t\"culpa_4ff\": \"<string>\",\n\t\t\"sunt_40\": \"<string>\",\n\t\t\"commododf\": \"<string>\",\n\t\t\"in_82\": \"<string>\",\n\t\t\"nonfa\": \"<string>\",\n\t\t\"dolor_b\": \"<string>\",\n\t\t\"quis_1\": \"<string>\",\n\t\t\"in738\": \"<string>\",\n\t\t\"cupidatat_30_\": \"<string>\",\n\t\t\"velita\": \"<string>\",\n\t\t\"culpa_8dc\": \"<string>\",\n\t\t\"mollitcf\": \"<string>\",\n\t\t\"sunt2\": \"<string>\",\n\t\t\"ea6\": \"<string>\",\n\t\t\"esse_d8\": \"<string>\",\n\t\t\"in_fe\": \"<string>\",\n\t\t\"sit_\": \"<string>\",\n\t\t\"exercitatione\": \"<string>\",\n\t\t\"in_1_\": \"<string>\",\n\t\t\"incididunt5\": \"<string>\",\n\t\t\"id_9\": \"<string>\",\n\t\t\"irure_6\": \"<string>\",\n\t\t\"nisi168\": \"<string>\",\n\t\t\"deserunt_\": \"<string>\",\n\t\t\"reprehenderit53\": \"<string>\",\n\t\t\"ad_e\": \"<string>\",\n\t\t\"nullaa\": \"<string>\",\n\t\t\"qui3\": \"<string>\",\n\t\t\"fugiata73\": \"<string>\",\n\t\t\"animd5\": \"<string>\",\n\t\t\"sunt659\": \"<string>\",\n\t\t\"dolore_6a\": \"<string>\",\n\t\t\"ut_ef7\": \"<string>\",\n\t\t\"exercitation_6\": \"<string>\",\n\t\t\"quis_0\": \"<string>\",\n\t\t\"ullamco33\": \"<string>\",\n\t\t\"culpa_2\": \"<string>\",\n\t\t\"consectetur_590\": \"<string>\",\n\t\t\"officia_e23\": \"<string>\",\n\t\t\"est_c\": \"<string>\",\n\t\t\"velit0ac\": \"<string>\",\n\t\t\"consequat_4d9\": \"<string>\",\n\t\t\"sint__\": \"<string>\",\n\t\t\"velitad\": \"<string>\",\n\t\t\"eu_57\": \"<string>\",\n\t\t\"cupidatat__b4\": \"<string>\",\n\t\t\"cupidatat_109\": \"<string>\",\n\t\t\"enim_6f4\": \"<string>\",\n\t\t\"nulla3e1\": \"<string>\",\n\t\t\"nisi48\": \"<string>\",\n\t\t\"cilluma\": \"<string>\",\n\t\t\"voluptate6\": \"<string>\",\n\t\t\"voluptate_e35\": \"<string>\",\n\t\t\"Excepteur6\": \"<string>\",\n\t\t\"eiusmod_168\": \"<string>\",\n\t\t\"doc08\": \"<string>\",\n\t\t\"do_a40\": \"<string>\",\n\t\t\"in_7b\": \"<string>\",\n\t\t\"qui_4d\": \"<string>\",\n\t\t\"aliquaa\": \"<string>\",\n\t\t\"in_7c\": \"<string>\",\n\t\t\"occaecat6\": \"<string>\",\n\t\t\"incididunt__7\": \"<string>\",\n\t\t\"dolore_359\": \"<string>\",\n\t\t\"deserunt68f\": \"<string>\",\n\t\t\"qui_76_\": \"<string>\",\n\t\t\"occaecata0a\": \"<string>\",\n\t\t\"minim_1_a\": \"<string>\",\n\t\t\"ut_02\": \"<string>\",\n\t\t\"deserunt_e\": \"<string>\",\n\t\t\"in__\": \"<string>\",\n\t\t\"sinte\": \"<string>\",\n\t\t\"consectetur_42c\": \"<string>\",\n\t\t\"qui_d\": \"<string>\",\n\t\t\"occaecat_4\": \"<string>\",\n\t\t\"commodo70e\": \"<string>\",\n\t\t\"mollitf1c\": \"<string>\",\n\t\t\"labore2\": \"<string>\",\n\t\t\"nostrud_2\": \"<string>\",\n\t\t\"eu__0\": \"<string>\",\n\t\t\"fugiat02\": \"<string>\",\n\t\t\"dolore__2\": \"<string>\",\n\t\t\"dolor841\": \"<string>\",\n\t\t\"pariatur863\": \"<string>\",\n\t\t\"dolore4\": \"<string>\",\n\t\t\"laborum_71_\": \"<string>\",\n\t\t\"incididunt0\": \"<string>\",\n\t\t\"doloref\": \"<string>\",\n\t\t\"aute_2\": \"<string>\",\n\t\t\"dolore_8d2\": \"<string>\",\n\t\t\"quis_e94\": \"<string>\",\n\t\t\"voluptatec\": \"<string>\",\n\t\t\"et0\": \"<string>\",\n\t\t\"in_55\": \"<string>\",\n\t\t\"Lorem_44_\": \"<string>\",\n\t\t\"nostrud_c6\": \"<string>\",\n\t\t\"Loremae\": \"<string>\",\n\t\t\"minim_7\": \"<string>\",\n\t\t\"sed06\": \"<string>\",\n\t\t\"ipsum6\": \"<string>\",\n\t\t\"dof3a\": \"<string>\",\n\t\t\"laboris73\": \"<string>\",\n\t\t\"magna_0c_\": \"<string>\",\n\t\t\"pariatur_edb\": \"<string>\",\n\t\t\"sunt_b77\": \"<string>\",\n\t\t\"cillum_78\": \"<string>\",\n\t\t\"reprehenderit_5\": \"<string>\",\n\t\t\"do_182\": \"<string>\",\n\t\t\"voluptate_9\": \"<string>\",\n\t\t\"tempor_48\": \"<string>\",\n\t\t\"aute2e5\": \"<string>\",\n\t\t\"sedb7b\": \"<string>\",\n\t\t\"consectetur6\": \"<string>\",\n\t\t\"in_6af\": \"<string>\",\n\t\t\"laboris_f2d\": \"<string>\",\n\t\t\"incididunt9\": \"<string>\",\n\t\t\"ad63\": \"<string>\",\n\t\t\"tempor_2ab\": \"<string>\",\n\t\t\"sunt09\": \"<string>\",\n\t\t\"eu5f\": \"<string>\",\n\t\t\"qui__\": \"<string>\",\n\t\t\"ullamco4\": \"<string>\",\n\t\t\"reprehenderit77\": \"<string>\",\n\t\t\"incididuntb\": \"<string>\",\n\t\t\"ex52a\": \"<string>\",\n\t\t\"ut_b\": \"<string>\",\n\t\t\"consecteturb\": \"<string>\",\n\t\t\"voluptated0\": \"<string>\",\n\t\t\"laborum_a_\": \"<string>\",\n\t\t\"laboris87\": \"<string>\",\n\t\t\"irure03\": \"<string>\",\n\t\t\"reprehenderit1\": \"<string>\",\n\t\t\"eiusmod_4\": \"<string>\",\n\t\t\"voluptated5e\": \"<string>\",\n\t\t\"dolor02\": \"<string>\",\n\t\t\"dolor1e1\": \"<string>\",\n\t\t\"cupidatat83\": \"<string>\",\n\t\t\"nulla_a\": \"<string>\",\n\t\t\"irure_851\": \"<string>\",\n\t\t\"deserunt06\": \"<string>\",\n\t\t\"labore7\": \"<string>\",\n\t\t\"adipisicingd4\": \"<string>\",\n\t\t\"esse_1\": \"<string>\",\n\t\t\"officia_032\": \"<string>\",\n\t\t\"ine1\": \"<string>\",\n\t\t\"nulla_dd\": \"<string>\",\n\t\t\"esse8\": \"<string>\",\n\t\t\"dolor_5f\": \"<string>\",\n\t\t\"in7\": \"<string>\",\n\t\t\"animc34\": \"<string>\",\n\t\t\"occaecatc\": \"<string>\",\n\t\t\"reprehenderit_7cc\": \"<string>\",\n\t\t\"qui_c51\": \"<string>\",\n\t\t\"consectetura\": \"<string>\",\n\t\t\"nisi7c2\": \"<string>\",\n\t\t\"velitd2b\": \"<string>\",\n\t\t\"aliqua_86\": \"<string>\",\n\t\t\"cupidatat25\": \"<string>\",\n\t\t\"Duis_c1\": \"<string>\",\n\t\t\"consectetur_ef2\": \"<string>\",\n\t\t\"fugiat_5be\": \"<string>\",\n\t\t\"deserunt7aa\": \"<string>\",\n\t\t\"velit_65\": \"<string>\",\n\t\t\"sit04\": \"<string>\",\n\t\t\"sint_c9\": \"<string>\",\n\t\t\"aliquab\": \"<string>\",\n\t\t\"dolore_97\": \"<string>\",\n\t\t\"dolorec9\": \"<string>\",\n\t\t\"culpa_70\": \"<string>\",\n\t\t\"esse_f8c\": \"<string>\",\n\t\t\"dolore2_\": \"<string>\",\n\t\t\"etbe\": \"<string>\",\n\t\t\"commodo70\": \"<string>\",\n\t\t\"laborum06\": \"<string>\",\n\t\t\"ea_b\": \"<string>\",\n\t\t\"proident42\": \"<string>\",\n\t\t\"dolore6\": \"<string>\",\n\t\t\"esse3ac\": \"<string>\",\n\t\t\"ad_39d\": \"<string>\",\n\t\t\"ine15\": \"<string>\",\n\t\t\"ut_4_\": \"<string>\",\n\t\t\"dolore74\": \"<string>\",\n\t\t\"laboris_43\": \"<string>\",\n\t\t\"dolore__eb\": \"<string>\",\n\t\t\"laborum_0bb\": \"<string>\",\n\t\t\"elit_5f\": \"<string>\",\n\t\t\"aute7\": \"<string>\",\n\t\t\"sit_3d\": \"<string>\",\n\t\t\"adipisicing_78\": \"<string>\",\n\t\t\"esse94\": \"<string>\",\n\t\t\"voluptate_421\": \"<string>\",\n\t\t\"ullamcofa\": \"<string>\",\n\t\t\"eu_b5\": \"<string>\",\n\t\t\"pariatur801\": \"<string>\",\n\t\t\"nostrud_94\": \"<string>\",\n\t\t\"eiusmodb\": \"<string>\",\n\t\t\"ullamco_f7\": \"<string>\",\n\t\t\"elit5d6\": \"<string>\",\n\t\t\"ina\": \"<string>\",\n\t\t\"Ut0\": \"<string>\",\n\t\t\"nisi_a_\": \"<string>\",\n\t\t\"officia9_\": \"<string>\",\n\t\t\"eu_4\": \"<string>\",\n\t\t\"deserunt5\": \"<string>\",\n\t\t\"velit3\": \"<string>\",\n\t\t\"aliquip985\": \"<string>\",\n\t\t\"non4e2\": \"<string>\",\n\t\t\"consequat_f72\": \"<string>\",\n\t\t\"enim_4\": \"<string>\",\n\t\t\"anim9f6\": \"<string>\",\n\t\t\"in_4\": \"<string>\",\n\t\t\"magna_49a\": \"<string>\",\n\t\t\"ipsum314\": \"<string>\",\n\t\t\"aliquip_f\": \"<string>\",\n\t\t\"veniam_7b\": \"<string>\",\n\t\t\"cillum_34\": \"<string>\",\n\t\t\"dolor4b\": \"<string>\",\n\t\t\"in_e87\": \"<string>\",\n\t\t\"consequat91\": \"<string>\",\n\t\t\"elit_1\": \"<string>\",\n\t\t\"autedc\": \"<string>\",\n\t\t\"amet_3\": \"<string>\",\n\t\t\"in_d0\": \"<string>\",\n\t\t\"consectetur_b4\": \"<string>\",\n\t\t\"voluptate2b\": \"<string>\",\n\t\t\"proident_e\": \"<string>\",\n\t\t\"occaecate\": \"<string>\",\n\t\t\"dolore_\": \"<string>\",\n\t\t\"dolor_8\": \"<string>\",\n\t\t\"do90\": \"<string>\",\n\t\t\"voluptatedf1\": \"<string>\",\n\t\t\"mollit_\": \"<string>\",\n\t\t\"nulla_4\": \"<string>\",\n\t\t\"ut5\": \"<string>\",\n\t\t\"sed_2\": \"<string>\",\n\t\t\"veniam_71e\": \"<string>\",\n\t\t\"ad4\": \"<string>\",\n\t\t\"consequat091\": \"<string>\",\n\t\t\"in_c6\": \"<string>\",\n\t\t\"ex_1c\": \"<string>\",\n\t\t\"ut_486\": \"<string>\",\n\t\t\"nostrud8\": \"<string>\",\n\t\t\"minim24b\": \"<string>\",\n\t\t\"dolore_7\": \"<string>\",\n\t\t\"est96\": \"<string>\",\n\t\t\"sint_1\": \"<string>\",\n\t\t\"amet_5_\": \"<string>\",\n\t\t\"eiusmod6_\": \"<string>\",\n\t\t\"sed_26\": \"<string>\",\n\t\t\"ipsum_1d\": \"<string>\",\n\t\t\"consequat__\": \"<string>\",\n\t\t\"commodo3\": \"<string>\",\n\t\t\"consequat6a\": \"<string>\",\n\t\t\"eu_3\": \"<string>\",\n\t\t\"voluptate_ba\": \"<string>\",\n\t\t\"dolore_7_0\": \"<string>\",\n\t\t\"Excepteur2\": \"<string>\",\n\t\t\"Excepteurc1\": \"<string>\",\n\t\t\"ad8_5\": \"<string>\",\n\t\t\"exercitation_0\": \"<string>\",\n\t\t\"idf\": \"<string>\",\n\t\t\"irure_be\": \"<string>\",\n\t\t\"dolore9\": \"<string>\",\n\t\t\"magna751\": \"<string>\",\n\t\t\"mollit7\": \"<string>\",\n\t\t\"ullamco_69e\": \"<string>\",\n\t\t\"voluptate13\": \"<string>\",\n\t\t\"Ut6a_\": \"<string>\",\n\t\t\"enim_ef\": \"<string>\",\n\t\t\"enim_1ec\": \"<string>\",\n\t\t\"commodo__5\": \"<string>\",\n\t\t\"estba2\": \"<string>\",\n\t\t\"aute7b3\": \"<string>\",\n\t\t\"proident_4\": \"<string>\",\n\t\t\"ad330\": \"<string>\",\n\t\t\"magna4\": \"<string>\",\n\t\t\"cillumfa\": \"<string>\",\n\t\t\"dolore_59\": \"<string>\",\n\t\t\"adipisicing8\": \"<string>\",\n\t\t\"dolor_0\": \"<string>\",\n\t\t\"cupidatat75\": \"<string>\",\n\t\t\"amet3_\": \"<string>\",\n\t\t\"pariatur_375\": \"<string>\",\n\t\t\"culpa_c5\": \"<string>\",\n\t\t\"ut_e\": \"<string>\",\n\t\t\"Ut_9\": \"<string>\",\n\t\t\"exercitation_60d\": \"<string>\",\n\t\t\"pariatur_2\": \"<string>\",\n\t\t\"Ute7\": \"<string>\",\n\t\t\"quis2b\": \"<string>\",\n\t\t\"sintf3\": \"<string>\",\n\t\t\"culpa_896\": \"<string>\",\n\t\t\"dolor39d\": \"<string>\",\n\t\t\"elit_9\": \"<string>\",\n\t\t\"sit_595\": \"<string>\",\n\t\t\"magna91\": \"<string>\",\n\t\t\"commodo_8a\": \"<string>\",\n\t\t\"aute075\": \"<string>\",\n\t\t\"mollitd19\": \"<string>\",\n\t\t\"ada27\": \"<string>\",\n\t\t\"enim_19\": \"<string>\",\n\t\t\"sedc\": \"<string>\",\n\t\t\"ut74\": \"<string>\",\n\t\t\"ullamco_7\": \"<string>\",\n\t\t\"eta2b\": \"<string>\",\n\t\t\"sit92\": \"<string>\",\n\t\t\"Lorema1\": \"<string>\",\n\t\t\"consequatc\": \"<string>\",\n\t\t\"ipsum_\": \"<string>\",\n\t\t\"cillum_8\": \"<string>\",\n\t\t\"labore7d7\": \"<string>\",\n\t\t\"velit_7\": \"<string>\",\n\t\t\"cupidatat_d_\": \"<string>\",\n\t\t\"quis_e82\": \"<string>\",\n\t\t\"occaecat18b\": \"<string>\",\n\t\t\"voluptatee19\": \"<string>\",\n\t\t\"est_8a\": \"<string>\",\n\t\t\"adipisicingcf9\": \"<string>\",\n\t\t\"esse_2bf\": \"<string>\",\n\t\t\"laboris_9d\": \"<string>\",\n\t\t\"aute_b_8\": \"<string>\",\n\t\t\"ex_5\": \"<string>\",\n\t\t\"dolor4\": \"<string>\",\n\t\t\"Excepteur_7e9\": \"<string>\",\n\t\t\"consequat381\": \"<string>\",\n\t\t\"aliqua0\": \"<string>\",\n\t\t\"voluptate_89\": \"<string>\",\n\t\t\"nisi_9_7\": \"<string>\",\n\t\t\"tempor5\": \"<string>\",\n\t\t\"et_25\": \"<string>\",\n\t\t\"laborum_6ce\": \"<string>\",\n\t\t\"aliquip6c\": \"<string>\",\n\t\t\"ipsumac\": \"<string>\",\n\t\t\"aute__\": \"<string>\",\n\t\t\"mollit97c\": \"<string>\",\n\t\t\"nisi_77d\": \"<string>\",\n\t\t\"ipsumcd4\": \"<string>\",\n\t\t\"anim87_\": \"<string>\",\n\t\t\"ipsum_3\": \"<string>\",\n\t\t\"quis1\": \"<string>\",\n\t\t\"Duis_6a5\": \"<string>\",\n\t\t\"minim__\": \"<string>\",\n\t\t\"occaecat46f\": \"<string>\",\n\t\t\"dolorf85\": \"<string>\",\n\t\t\"ut_3ef\": \"<string>\",\n\t\t\"fugiat_dd\": \"<string>\",\n\t\t\"pariatur6cb\": \"<string>\",\n\t\t\"aliquip_152\": \"<string>\",\n\t\t\"occaecat7\": \"<string>\",\n\t\t\"ad_4\": \"<string>\",\n\t\t\"sunt_d11\": \"<string>\",\n\t\t\"nonb\": \"<string>\",\n\t\t\"incididunt_7_\": \"<string>\",\n\t\t\"incididunt_9e\": \"<string>\",\n\t\t\"enimc2a\": \"<string>\",\n\t\t\"et_7\": \"<string>\",\n\t\t\"magna72\": \"<string>\",\n\t\t\"Excepteur_\": \"<string>\",\n\t\t\"elit_459\": \"<string>\",\n\t\t\"adipisicing296\": \"<string>\",\n\t\t\"sint8\": \"<string>\",\n\t\t\"ut0\": \"<string>\",\n\t\t\"aliqua_333\": \"<string>\",\n\t\t\"fugiat253\": \"<string>\",\n\t\t\"nostrud_99\": \"<string>\",\n\t\t\"occaecat_06\": \"<string>\",\n\t\t\"amete_7\": \"<string>\",\n\t\t\"voluptate_e8\": \"<string>\",\n\t\t\"ullamcof\": \"<string>\",\n\t\t\"eu_9\": \"<string>\",\n\t\t\"Excepteur_52\": \"<string>\",\n\t\t\"dolor43\": \"<string>\",\n\t\t\"qui7\": \"<string>\",\n\t\t\"officia__c6\": \"<string>\",\n\t\t\"est1\": \"<string>\",\n\t\t\"irure1f\": \"<string>\",\n\t\t\"tempor_0\": \"<string>\",\n\t\t\"est41\": \"<string>\",\n\t\t\"eiusmod97e\": \"<string>\",\n\t\t\"ut_3\": \"<string>\",\n\t\t\"adf\": \"<string>\",\n\t\t\"est_5c\": \"<string>\",\n\t\t\"adipisicing_02e\": \"<string>\",\n\t\t\"consectetur__\": \"<string>\",\n\t\t\"aute33\": \"<string>\",\n\t\t\"reprehenderit03\": \"<string>\",\n\t\t\"laborum_2f\": \"<string>\",\n\t\t\"magna8\": \"<string>\",\n\t\t\"elit21\": \"<string>\",\n\t\t\"cupidatat_3d\": \"<string>\",\n\t\t\"sint_3e6\": \"<string>\",\n\t\t\"et_b\": \"<string>\",\n\t\t\"culpa_3b4\": \"<string>\",\n\t\t\"ipsum__5a\": \"<string>\",\n\t\t\"in_dcb\": \"<string>\",\n\t\t\"Lorem_a\": \"<string>\",\n\t\t\"eaab\": \"<string>\",\n\t\t\"Duis_b\": \"<string>\",\n\t\t\"velit_5\": \"<string>\",\n\t\t\"laborum_fe9\": \"<string>\",\n\t\t\"tempor69\": \"<string>\",\n\t\t\"laborisb\": \"<string>\",\n\t\t\"eiusmod96\": \"<string>\",\n\t\t\"fugiat_\": \"<string>\",\n\t\t\"velit1\": \"<string>\",\n\t\t\"enimae3\": \"<string>\",\n\t\t\"eiusmod_be\": \"<string>\",\n\t\t\"proidenta\": \"<string>\",\n\t\t\"enim805\": \"<string>\",\n\t\t\"anim_f\": \"<string>\",\n\t\t\"eu_f7\": \"<string>\",\n\t\t\"velit23\": \"<string>\",\n\t\t\"eiusmodd_\": \"<string>\",\n\t\t\"adipisicingebc\": \"<string>\",\n\t\t\"aliquip_21\": \"<string>\",\n\t\t\"consecteturfa\": \"<string>\",\n\t\t\"et3__\": \"<string>\",\n\t\t\"Duis_818\": \"<string>\",\n\t\t\"Excepteur_2\": \"<string>\",\n\t\t\"consecteture\": \"<string>\",\n\t\t\"culpa72\": \"<string>\",\n\t\t\"incididunt_f5c\": \"<string>\",\n\t\t\"veniam_667\": \"<string>\",\n\t\t\"fugiata\": \"<string>\",\n\t\t\"quis_486\": \"<string>\",\n\t\t\"Excepteur_96\": \"<string>\",\n\t\t\"proident__0\": \"<string>\",\n\t\t\"do_f0b\": \"<string>\",\n\t\t\"docc\": \"<string>\",\n\t\t\"est_6af\": \"<string>\",\n\t\t\"eaf8d\": \"<string>\",\n\t\t\"enim7\": \"<string>\",\n\t\t\"sit_8\": \"<string>\",\n\t\t\"exercitation1\": \"<string>\",\n\t\t\"minim3\": \"<string>\",\n\t\t\"cillum_3c3\": \"<string>\",\n\t\t\"incididunt6ef\": \"<string>\",\n\t\t\"minim4b\": \"<string>\",\n\t\t\"in1_\": \"<string>\",\n\t\t\"exercitation6\": \"<string>\",\n\t\t\"commodo_5a9\": \"<string>\",\n\t\t\"enim9a\": \"<string>\",\n\t\t\"dolor9_\": \"<string>\",\n\t\t\"suntc\": \"<string>\",\n\t\t\"aliquip_01\": \"<string>\",\n\t\t\"quis_8\": \"<string>\",\n\t\t\"commodo_ae\": \"<string>\",\n\t\t\"non1e\": \"<string>\",\n\t\t\"magna56f\": \"<string>\",\n\t\t\"dolorc\": \"<string>\",\n\t\t\"nisi__\": \"<string>\",\n\t\t\"dolor_d_\": \"<string>\",\n\t\t\"eu5\": \"<string>\",\n\t\t\"nulla_f\": \"<string>\",\n\t\t\"utb3a\": \"<string>\",\n\t\t\"adipisicing_4\": \"<string>\",\n\t\t\"anim_6e5\": \"<string>\",\n\t\t\"mollit54\": \"<string>\",\n\t\t\"Excepteur_58\": \"<string>\",\n\t\t\"aliquip_63\": \"<string>\",\n\t\t\"Ut1\": \"<string>\",\n\t\t\"exercitation_1\": \"<string>\",\n\t\t\"dolor_0_\": \"<string>\",\n\t\t\"aliqua_e\": \"<string>\",\n\t\t\"quisd91\": \"<string>\",\n\t\t\"quisb\": \"<string>\",\n\t\t\"exb\": \"<string>\",\n\t\t\"fugiat4e6\": \"<string>\",\n\t\t\"minim_2ff\": \"<string>\",\n\t\t\"ut78d\": \"<string>\",\n\t\t\"in6\": \"<string>\",\n\t\t\"irure_84\": \"<string>\",\n\t\t\"Lorem_59\": \"<string>\",\n\t\t\"sit1\": \"<string>\",\n\t\t\"quis_932\": \"<string>\",\n\t\t\"occaecat_2\": \"<string>\",\n\t\t\"reprehenderit_d3\": \"<string>\",\n\t\t\"aute0\": \"<string>\",\n\t\t\"anim__5e\": \"<string>\",\n\t\t\"magna_2e4\": \"<string>\",\n\t\t\"ipsum_b_5\": \"<string>\",\n\t\t\"irure51\": \"<string>\",\n\t\t\"Duis5e3\": \"<string>\",\n\t\t\"adipisicing_c49\": \"<string>\",\n\t\t\"officia4_\": \"<string>\",\n\t\t\"reprehenderit_fc0\": \"<string>\",\n\t\t\"anim_2\": \"<string>\",\n\t\t\"aliqua_\": \"<string>\",\n\t\t\"ea24\": \"<string>\",\n\t\t\"Excepteurbd8\": \"<string>\",\n\t\t\"occaecat_d9f\": \"<string>\",\n\t\t\"enim0a\": \"<string>\",\n\t\t\"eud\": \"<string>\",\n\t\t\"inf\": \"<string>\",\n\t\t\"amet_c__\": \"<string>\",\n\t\t\"deseruntf\": \"<string>\",\n\t\t\"ad17\": \"<string>\",\n\t\t\"Excepteur_3ff\": \"<string>\",\n\t\t\"aute_4\": \"<string>\",\n\t\t\"ipsum_daa\": \"<string>\",\n\t\t\"qui_8\": \"<string>\",\n\t\t\"laborebc3\": \"<string>\",\n\t\t\"ipsum_6\": \"<string>\",\n\t\t\"Duiscb\": \"<string>\",\n\t\t\"dolore2\": \"<string>\",\n\t\t\"adipisicing72c\": \"<string>\",\n\t\t\"mollit53f\": \"<string>\",\n\t\t\"sunt_9\": \"<string>\",\n\t\t\"non__f\": \"<string>\",\n\t\t\"ex3\": \"<string>\",\n\t\t\"ullamco_b94\": \"<string>\",\n\t\t\"eiusmod_dc\": \"<string>\",\n\t\t\"exercitation_4\": \"<string>\",\n\t\t\"occaecat_384\": \"<string>\",\n\t\t\"minime\": \"<string>\",\n\t\t\"anim37c\": \"<string>\",\n\t\t\"reprehenderit_7a\": \"<string>\",\n\t\t\"consectetur_f\": \"<string>\",\n\t\t\"ullamco6\": \"<string>\",\n\t\t\"veniam_933\": \"<string>\",\n\t\t\"sintb4\": \"<string>\",\n\t\t\"aliqua_d9\": \"<string>\",\n\t\t\"officiaa\": \"<string>\",\n\t\t\"commodo_a\": \"<string>\",\n\t\t\"dob\": \"<string>\",\n\t\t\"aliqua_20b\": \"<string>\",\n\t\t\"reprehenderit_3e\": \"<string>\",\n\t\t\"aliqua_d85\": \"<string>\",\n\t\t\"ut_23\": \"<string>\",\n\t\t\"dolor_d51\": \"<string>\",\n\t\t\"eu_58d\": \"<string>\",\n\t\t\"deserunt_6\": \"<string>\",\n\t\t\"et__\": \"<string>\",\n\t\t\"quis_081\": \"<string>\",\n\t\t\"Ut_4\": \"<string>\",\n\t\t\"inb7\": \"<string>\",\n\t\t\"est_72\": \"<string>\",\n\t\t\"occaecat_6\": \"<string>\",\n\t\t\"Duis_5c5\": \"<string>\",\n\t\t\"consequat_44f\": \"<string>\",\n\t\t\"Ut0b2\": \"<string>\",\n\t\t\"nostrud_0\": \"<string>\",\n\t\t\"aute9\": \"<string>\",\n\t\t\"cupidatat92b\": \"<string>\",\n\t\t\"ipsum_d\": \"<string>\",\n\t\t\"amet8\": \"<string>\",\n\t\t\"elit__d9\": \"<string>\",\n\t\t\"qui8c\": \"<string>\",\n\t\t\"nostrud_cd\": \"<string>\",\n\t\t\"aliquip_88\": \"<string>\",\n\t\t\"id_7c\": \"<string>\",\n\t\t\"sita5\": \"<string>\",\n\t\t\"doa\": \"<string>\",\n\t\t\"pariatur_73e\": \"<string>\",\n\t\t\"sitec\": \"<string>\",\n\t\t\"in_346\": \"<string>\",\n\t\t\"velite8e\": \"<string>\",\n\t\t\"sed_7\": \"<string>\",\n\t\t\"proident__\": \"<string>\",\n\t\t\"ipsum_2f\": \"<string>\",\n\t\t\"nulla43\": \"<string>\",\n\t\t\"nulla_746\": \"<string>\",\n\t\t\"velitbbf\": \"<string>\",\n\t\t\"dolore67\": \"<string>\",\n\t\t\"irure_9f7\": \"<string>\",\n\t\t\"dolor_12\": \"<string>\",\n\t\t\"commodocd2\": \"<string>\",\n\t\t\"id_0aa\": \"<string>\",\n\t\t\"nulla186\": \"<string>\",\n\t\t\"est_45\": \"<string>\",\n\t\t\"veniam_c8_\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/authentication-providers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												"authentication-providers"
											]
										},
										"description": "Configures an Authentication Provider on the tenant.\n\nAn authentication or identity provider (IdP) is a platform that is typically used to store and manage user accounts on behalf of an organisation or a service provider. MATTR VII uses the authentication provider to authenticate end users before issuing them credentials.\n\n> Only one authentication provider can be configured on a tenant.\n\nThe `/.well-known/openid-configuration` endpoint of the Authentication Provider must contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported`.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_CREATE_START\n* USER_AUTHENTICATION_PROVIDER_CREATE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_CREATE_FAIL"
									},
									"response": [
										{
											"name": "Authentication Provider configured",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"url\": \"https://yoyyP.ftwUa8\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"dolora\": \"<string>\",\n\t\t\"consequat48c\": \"<string>\",\n\t\t\"sint5\": \"<string>\",\n\t\t\"Lorem_4\": \"<string>\",\n\t\t\"eiusmode\": \"<string>\",\n\t\t\"aliqua_28e\": \"<string>\",\n\t\t\"et_c1\": \"<string>\",\n\t\t\"veniam_e\": \"<string>\",\n\t\t\"officia_78\": \"<string>\",\n\t\t\"minim025\": \"<string>\",\n\t\t\"fugiat_9\": \"<string>\",\n\t\t\"commodo_c7\": \"<string>\",\n\t\t\"nullab\": \"<string>\",\n\t\t\"enim_7a\": \"<string>\",\n\t\t\"officia_cd1\": \"<string>\",\n\t\t\"quif\": \"<string>\",\n\t\t\"incididunt58\": \"<string>\",\n\t\t\"magnab\": \"<string>\",\n\t\t\"magna_2ab\": \"<string>\",\n\t\t\"est69\": \"<string>\",\n\t\t\"dolore_37\": \"<string>\",\n\t\t\"cillum__8\": \"<string>\",\n\t\t\"doe\": \"<string>\",\n\t\t\"sit6\": \"<string>\",\n\t\t\"proident__9\": \"<string>\",\n\t\t\"quisaf\": \"<string>\",\n\t\t\"irured\": \"<string>\",\n\t\t\"nisif_3\": \"<string>\",\n\t\t\"pariatur7cc\": \"<string>\",\n\t\t\"reprehenderit_5e\": \"<string>\",\n\t\t\"Duis77\": \"<string>\",\n\t\t\"dod1\": \"<string>\",\n\t\t\"adipisicinge\": \"<string>\",\n\t\t\"amet_0e8\": \"<string>\",\n\t\t\"anim41\": \"<string>\",\n\t\t\"enimde\": \"<string>\",\n\t\t\"nulla_0b\": \"<string>\",\n\t\t\"sint_10\": \"<string>\",\n\t\t\"do_b_\": \"<string>\",\n\t\t\"quis_04\": \"<string>\",\n\t\t\"Lorem_6e\": \"<string>\",\n\t\t\"occaecat5\": \"<string>\",\n\t\t\"Excepteura15\": \"<string>\",\n\t\t\"culpa35\": \"<string>\",\n\t\t\"laboreb5\": \"<string>\",\n\t\t\"officia8db\": \"<string>\",\n\t\t\"magna72e\": \"<string>\",\n\t\t\"dolor_bd_\": \"<string>\",\n\t\t\"deserunt__2\": \"<string>\",\n\t\t\"consequat_c\": \"<string>\",\n\t\t\"Loremc\": \"<string>\",\n\t\t\"utf37\": \"<string>\",\n\t\t\"do_dd2\": \"<string>\",\n\t\t\"tempor_7d\": \"<string>\",\n\t\t\"aute_f47\": \"<string>\",\n\t\t\"nulla_7\": \"<string>\",\n\t\t\"officia_8\": \"<string>\",\n\t\t\"laborecc7\": \"<string>\",\n\t\t\"nonf79\": \"<string>\",\n\t\t\"sint2ab\": \"<string>\",\n\t\t\"nulla4\": \"<string>\",\n\t\t\"veniama37\": \"<string>\",\n\t\t\"esse7\": \"<string>\",\n\t\t\"minim_4f_\": \"<string>\",\n\t\t\"cupidatat_5fd\": \"<string>\",\n\t\t\"in_fd1\": \"<string>\",\n\t\t\"et_e14\": \"<string>\",\n\t\t\"nulla5\": \"<string>\",\n\t\t\"proidentba\": \"<string>\",\n\t\t\"exercitation86c\": \"<string>\",\n\t\t\"laborum7a9\": \"<string>\",\n\t\t\"amet_6\": \"<string>\",\n\t\t\"dolore__\": \"<string>\",\n\t\t\"adipisicing_3_4\": \"<string>\",\n\t\t\"doeb\": \"<string>\",\n\t\t\"consequat_3\": \"<string>\",\n\t\t\"nisi_ed7\": \"<string>\",\n\t\t\"dolor_2\": \"<string>\",\n\t\t\"ut_9f3\": \"<string>\",\n\t\t\"voluptate_fa\": \"<string>\",\n\t\t\"commodo_45d\": \"<string>\",\n\t\t\"nonab\": \"<string>\",\n\t\t\"sit881\": \"<string>\",\n\t\t\"irure_7\": \"<string>\",\n\t\t\"tempor_a42\": \"<string>\",\n\t\t\"occaecat_cc1\": \"<string>\",\n\t\t\"officia_3\": \"<string>\",\n\t\t\"ad9\": \"<string>\",\n\t\t\"nisi_b0\": \"<string>\",\n\t\t\"sed_aa5\": \"<string>\",\n\t\t\"proident_4d_\": \"<string>\",\n\t\t\"amet9_a\": \"<string>\",\n\t\t\"sit9\": \"<string>\",\n\t\t\"sint_8\": \"<string>\",\n\t\t\"dolore_d\": \"<string>\",\n\t\t\"sed49\": \"<string>\",\n\t\t\"sunt_dc\": \"<string>\",\n\t\t\"commodo_\": \"<string>\",\n\t\t\"dolor_9f_\": \"<string>\",\n\t\t\"eiusmod_ee5\": \"<string>\",\n\t\t\"proident8\": \"<string>\",\n\t\t\"sit_e_\": \"<string>\",\n\t\t\"ad77e\": \"<string>\",\n\t\t\"culpa1\": \"<string>\",\n\t\t\"nulla1f\": \"<string>\",\n\t\t\"minim_\": \"<string>\",\n\t\t\"eu_29\": \"<string>\",\n\t\t\"quie\": \"<string>\",\n\t\t\"id_fea\": \"<string>\",\n\t\t\"velit97\": \"<string>\",\n\t\t\"sit_0d\": \"<string>\",\n\t\t\"voluptate3b\": \"<string>\",\n\t\t\"sint384\": \"<string>\",\n\t\t\"cupidatat__3a\": \"<string>\",\n\t\t\"fugiat_3\": \"<string>\",\n\t\t\"ipsum_43\": \"<string>\",\n\t\t\"dolorfe4\": \"<string>\",\n\t\t\"in_45\": \"<string>\",\n\t\t\"pariatur88c\": \"<string>\",\n\t\t\"mollit7_\": \"<string>\",\n\t\t\"anim70e\": \"<string>\",\n\t\t\"laboris_c97\": \"<string>\",\n\t\t\"nisi_3c4\": \"<string>\",\n\t\t\"culpa_5\": \"<string>\",\n\t\t\"labore_e9\": \"<string>\",\n\t\t\"deseruntf60\": \"<string>\",\n\t\t\"aliquip09\": \"<string>\",\n\t\t\"aute__51\": \"<string>\",\n\t\t\"cupidatat_d6\": \"<string>\",\n\t\t\"et42\": \"<string>\",\n\t\t\"fugiat__\": \"<string>\",\n\t\t\"consequat__c9\": \"<string>\",\n\t\t\"magna_1a\": \"<string>\",\n\t\t\"eiusmod47b\": \"<string>\",\n\t\t\"in_3da\": \"<string>\",\n\t\t\"officia_c72\": \"<string>\",\n\t\t\"minim_53\": \"<string>\",\n\t\t\"anim0\": \"<string>\",\n\t\t\"aute7b6\": \"<string>\",\n\t\t\"sunt8\": \"<string>\",\n\t\t\"ameta8\": \"<string>\",\n\t\t\"sint_d\": \"<string>\",\n\t\t\"minim74\": \"<string>\",\n\t\t\"incididunt0d1\": \"<string>\",\n\t\t\"aliquip1bf\": \"<string>\",\n\t\t\"essed\": \"<string>\",\n\t\t\"pariatur0\": \"<string>\",\n\t\t\"occaecata\": \"<string>\",\n\t\t\"nulla_ba\": \"<string>\",\n\t\t\"aliqua61f\": \"<string>\",\n\t\t\"anim_34\": \"<string>\",\n\t\t\"elit0\": \"<string>\",\n\t\t\"ipsum_9_\": \"<string>\",\n\t\t\"ut1f2\": \"<string>\",\n\t\t\"aliquip_c\": \"<string>\",\n\t\t\"id_160\": \"<string>\",\n\t\t\"minim_c2e\": \"<string>\",\n\t\t\"commodo6b8\": \"<string>\",\n\t\t\"esse4a\": \"<string>\",\n\t\t\"enimd9\": \"<string>\",\n\t\t\"ad70_\": \"<string>\",\n\t\t\"aliquip_d\": \"<string>\",\n\t\t\"in_3\": \"<string>\",\n\t\t\"Duis_4e0\": \"<string>\",\n\t\t\"laboris_1bd\": \"<string>\",\n\t\t\"Excepteur_73d\": \"<string>\",\n\t\t\"mollit_4\": \"<string>\",\n\t\t\"elit_c\": \"<string>\",\n\t\t\"Utb\": \"<string>\",\n\t\t\"qui_0\": \"<string>\",\n\t\t\"mollit_1\": \"<string>\",\n\t\t\"non9d\": \"<string>\",\n\t\t\"sedb0\": \"<string>\",\n\t\t\"ullamco_dfa\": \"<string>\",\n\t\t\"ut_4ba\": \"<string>\",\n\t\t\"deseruntb07\": \"<string>\",\n\t\t\"in_f\": \"<string>\",\n\t\t\"nonc\": \"<string>\",\n\t\t\"tempor4_8\": \"<string>\",\n\t\t\"enim_8\": \"<string>\",\n\t\t\"Ut_0fa\": \"<string>\",\n\t\t\"est_1\": \"<string>\",\n\t\t\"aliquip_b\": \"<string>\",\n\t\t\"in_b\": \"<string>\",\n\t\t\"id_cd\": \"<string>\",\n\t\t\"incididunt_ec6\": \"<string>\",\n\t\t\"consectetur5bd\": \"<string>\",\n\t\t\"proident65\": \"<string>\",\n\t\t\"enim_3\": \"<string>\",\n\t\t\"dolore_c5\": \"<string>\",\n\t\t\"non_a1\": \"<string>\",\n\t\t\"deserunt489\": \"<string>\",\n\t\t\"elit36\": \"<string>\",\n\t\t\"officiab\": \"<string>\",\n\t\t\"do_bb\": \"<string>\",\n\t\t\"ipsumd57\": \"<string>\",\n\t\t\"tempor_838\": \"<string>\",\n\t\t\"commodo7\": \"<string>\",\n\t\t\"essea4\": \"<string>\",\n\t\t\"qui_f5c\": \"<string>\",\n\t\t\"dolor693\": \"<string>\",\n\t\t\"adipisicing0\": \"<string>\",\n\t\t\"officia_5\": \"<string>\",\n\t\t\"velit_e1\": \"<string>\",\n\t\t\"id9ce\": \"<string>\",\n\t\t\"mollitf3\": \"<string>\",\n\t\t\"reprehenderit250\": \"<string>\",\n\t\t\"ullamco80\": \"<string>\",\n\t\t\"cupidatat_720\": \"<string>\",\n\t\t\"voluptated7\": \"<string>\",\n\t\t\"autef5d\": \"<string>\",\n\t\t\"commodo_8\": \"<string>\",\n\t\t\"minim9\": \"<string>\",\n\t\t\"laborum_65\": \"<string>\",\n\t\t\"incididunt_bf1\": \"<string>\",\n\t\t\"culpa_0c\": \"<string>\",\n\t\t\"officia_cb\": \"<string>\",\n\t\t\"irurea2e\": \"<string>\",\n\t\t\"consequat_b3\": \"<string>\",\n\t\t\"culpa_c\": \"<string>\",\n\t\t\"tempor_2a\": \"<string>\",\n\t\t\"euc\": \"<string>\",\n\t\t\"nulla7\": \"<string>\",\n\t\t\"nisi_425\": \"<string>\",\n\t\t\"in192\": \"<string>\",\n\t\t\"pariatur3\": \"<string>\",\n\t\t\"adipisicing7\": \"<string>\",\n\t\t\"amet3_7\": \"<string>\",\n\t\t\"pariatur_2_b\": \"<string>\",\n\t\t\"ut6f\": \"<string>\",\n\t\t\"non1\": \"<string>\",\n\t\t\"sed_31\": \"<string>\",\n\t\t\"enim1\": \"<string>\",\n\t\t\"sint_da4\": \"<string>\",\n\t\t\"voluptate_b\": \"<string>\",\n\t\t\"ad7e9\": \"<string>\",\n\t\t\"pariatur_93\": \"<string>\",\n\t\t\"enim_c\": \"<string>\",\n\t\t\"Excepteur_ac7\": \"<string>\",\n\t\t\"eiusmod_a9\": \"<string>\",\n\t\t\"dolore_ef\": \"<string>\",\n\t\t\"incididunte7\": \"<string>\",\n\t\t\"sed_e7\": \"<string>\",\n\t\t\"est_ce5\": \"<string>\",\n\t\t\"ind1\": \"<string>\",\n\t\t\"sunt_07\": \"<string>\",\n\t\t\"dolore_9\": \"<string>\",\n\t\t\"sit_6\": \"<string>\",\n\t\t\"incididunt_0d\": \"<string>\",\n\t\t\"officia0b1\": \"<string>\",\n\t\t\"labore6\": \"<string>\",\n\t\t\"sed_536\": \"<string>\",\n\t\t\"Ut_3\": \"<string>\",\n\t\t\"est_3\": \"<string>\",\n\t\t\"reprehenderit8e\": \"<string>\",\n\t\t\"Excepteur__2d\": \"<string>\",\n\t\t\"sunt5ec\": \"<string>\",\n\t\t\"reprehenderit_33\": \"<string>\",\n\t\t\"velit_b8d\": \"<string>\",\n\t\t\"eiusmod5\": \"<string>\",\n\t\t\"consectetur_7\": \"<string>\",\n\t\t\"nulla_baa\": \"<string>\",\n\t\t\"officia_4b1\": \"<string>\",\n\t\t\"ex_6e4\": \"<string>\",\n\t\t\"doc\": \"<string>\",\n\t\t\"exercitationc\": \"<string>\",\n\t\t\"doloree34\": \"<string>\",\n\t\t\"dof7\": \"<string>\",\n\t\t\"magnaddb\": \"<string>\",\n\t\t\"sunt_a\": \"<string>\",\n\t\t\"in_a5\": \"<string>\",\n\t\t\"aliquip_fb\": \"<string>\",\n\t\t\"Utf4\": \"<string>\",\n\t\t\"ipsum_eb\": \"<string>\",\n\t\t\"dolor_fa\": \"<string>\",\n\t\t\"ind\": \"<string>\",\n\t\t\"nulla_1\": \"<string>\",\n\t\t\"in_d_9\": \"<string>\",\n\t\t\"Duis_382\": \"<string>\",\n\t\t\"nulla_3\": \"<string>\",\n\t\t\"sunt_a1\": \"<string>\",\n\t\t\"irure75\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"ad_72\": \"<string>\",\n\t\t\"Lorem_ee\": \"<string>\",\n\t\t\"dolor_b_\": \"<string>\",\n\t\t\"et908\": \"<string>\",\n\t\t\"qui2\": \"<string>\",\n\t\t\"adipisicing0e3\": \"<string>\",\n\t\t\"Duis_735\": \"<string>\",\n\t\t\"elit_3cb\": \"<string>\",\n\t\t\"adipisicing5\": \"<string>\",\n\t\t\"Duis8\": \"<string>\",\n\t\t\"esse_7\": \"<string>\",\n\t\t\"ullamco2\": \"<string>\",\n\t\t\"enim69\": \"<string>\",\n\t\t\"fugiat_7\": \"<string>\",\n\t\t\"deserunt1\": \"<string>\",\n\t\t\"adipisicing_44\": \"<string>\",\n\t\t\"enim_09e\": \"<string>\",\n\t\t\"ullamco83\": \"<string>\",\n\t\t\"Duis21c\": \"<string>\",\n\t\t\"ine\": \"<string>\",\n\t\t\"in_5_\": \"<string>\",\n\t\t\"esse793\": \"<string>\",\n\t\t\"labore_9e\": \"<string>\",\n\t\t\"esse_87\": \"<string>\",\n\t\t\"eteb8\": \"<string>\",\n\t\t\"eac\": \"<string>\",\n\t\t\"consectetur75\": \"<string>\",\n\t\t\"in_5f\": \"<string>\",\n\t\t\"minim_6a\": \"<string>\",\n\t\t\"elit3a5\": \"<string>\",\n\t\t\"eu_3_3\": \"<string>\",\n\t\t\"in8\": \"<string>\",\n\t\t\"veniam0\": \"<string>\",\n\t\t\"amet_05\": \"<string>\",\n\t\t\"mollitf\": \"<string>\",\n\t\t\"Duis5\": \"<string>\",\n\t\t\"velit_2\": \"<string>\",\n\t\t\"aliquip5\": \"<string>\",\n\t\t\"sed7\": \"<string>\",\n\t\t\"occaecat_394\": \"<string>\",\n\t\t\"Lorem_1_\": \"<string>\",\n\t\t\"adipisicing66a\": \"<string>\",\n\t\t\"labore_ba\": \"<string>\",\n\t\t\"culpa_35\": \"<string>\",\n\t\t\"labore_5d\": \"<string>\",\n\t\t\"do_98\": \"<string>\",\n\t\t\"eu0f\": \"<string>\",\n\t\t\"aliquip_7\": \"<string>\",\n\t\t\"nullac5\": \"<string>\",\n\t\t\"elit__3\": \"<string>\",\n\t\t\"dolor_52f\": \"<string>\",\n\t\t\"enim__8_\": \"<string>\",\n\t\t\"sunt_4be\": \"<string>\",\n\t\t\"dolore_05\": \"<string>\",\n\t\t\"officia9f\": \"<string>\",\n\t\t\"consequatf54\": \"<string>\",\n\t\t\"consecteturc28\": \"<string>\",\n\t\t\"deserunt7\": \"<string>\",\n\t\t\"nostrud_7\": \"<string>\",\n\t\t\"auteeb2\": \"<string>\",\n\t\t\"in_25\": \"<string>\",\n\t\t\"aliquip_4_\": \"<string>\",\n\t\t\"Excepteur3d\": \"<string>\",\n\t\t\"Ut6e\": \"<string>\",\n\t\t\"veniam_925\": \"<string>\",\n\t\t\"est_c9c\": \"<string>\",\n\t\t\"consectetur_9a5\": \"<string>\",\n\t\t\"non_2\": \"<string>\",\n\t\t\"qui_127\": \"<string>\",\n\t\t\"Duis1c1\": \"<string>\",\n\t\t\"culpa_4ff\": \"<string>\",\n\t\t\"sunt_40\": \"<string>\",\n\t\t\"commododf\": \"<string>\",\n\t\t\"in_82\": \"<string>\",\n\t\t\"nonfa\": \"<string>\",\n\t\t\"dolor_b\": \"<string>\",\n\t\t\"quis_1\": \"<string>\",\n\t\t\"in738\": \"<string>\",\n\t\t\"cupidatat_30_\": \"<string>\",\n\t\t\"velita\": \"<string>\",\n\t\t\"culpa_8dc\": \"<string>\",\n\t\t\"mollitcf\": \"<string>\",\n\t\t\"sunt2\": \"<string>\",\n\t\t\"ea6\": \"<string>\",\n\t\t\"esse_d8\": \"<string>\",\n\t\t\"in_fe\": \"<string>\",\n\t\t\"sit_\": \"<string>\",\n\t\t\"exercitatione\": \"<string>\",\n\t\t\"in_1_\": \"<string>\",\n\t\t\"incididunt5\": \"<string>\",\n\t\t\"id_9\": \"<string>\",\n\t\t\"irure_6\": \"<string>\",\n\t\t\"nisi168\": \"<string>\",\n\t\t\"deserunt_\": \"<string>\",\n\t\t\"reprehenderit53\": \"<string>\",\n\t\t\"ad_e\": \"<string>\",\n\t\t\"nullaa\": \"<string>\",\n\t\t\"qui3\": \"<string>\",\n\t\t\"fugiata73\": \"<string>\",\n\t\t\"animd5\": \"<string>\",\n\t\t\"sunt659\": \"<string>\",\n\t\t\"dolore_6a\": \"<string>\",\n\t\t\"ut_ef7\": \"<string>\",\n\t\t\"exercitation_6\": \"<string>\",\n\t\t\"quis_0\": \"<string>\",\n\t\t\"ullamco33\": \"<string>\",\n\t\t\"culpa_2\": \"<string>\",\n\t\t\"consectetur_590\": \"<string>\",\n\t\t\"officia_e23\": \"<string>\",\n\t\t\"est_c\": \"<string>\",\n\t\t\"velit0ac\": \"<string>\",\n\t\t\"consequat_4d9\": \"<string>\",\n\t\t\"sint__\": \"<string>\",\n\t\t\"velitad\": \"<string>\",\n\t\t\"eu_57\": \"<string>\",\n\t\t\"cupidatat__b4\": \"<string>\",\n\t\t\"cupidatat_109\": \"<string>\",\n\t\t\"enim_6f4\": \"<string>\",\n\t\t\"nulla3e1\": \"<string>\",\n\t\t\"nisi48\": \"<string>\",\n\t\t\"cilluma\": \"<string>\",\n\t\t\"voluptate6\": \"<string>\",\n\t\t\"voluptate_e35\": \"<string>\",\n\t\t\"Excepteur6\": \"<string>\",\n\t\t\"eiusmod_168\": \"<string>\",\n\t\t\"doc08\": \"<string>\",\n\t\t\"do_a40\": \"<string>\",\n\t\t\"in_7b\": \"<string>\",\n\t\t\"qui_4d\": \"<string>\",\n\t\t\"aliquaa\": \"<string>\",\n\t\t\"in_7c\": \"<string>\",\n\t\t\"occaecat6\": \"<string>\",\n\t\t\"incididunt__7\": \"<string>\",\n\t\t\"dolore_359\": \"<string>\",\n\t\t\"deserunt68f\": \"<string>\",\n\t\t\"qui_76_\": \"<string>\",\n\t\t\"occaecata0a\": \"<string>\",\n\t\t\"minim_1_a\": \"<string>\",\n\t\t\"ut_02\": \"<string>\",\n\t\t\"deserunt_e\": \"<string>\",\n\t\t\"in__\": \"<string>\",\n\t\t\"sinte\": \"<string>\",\n\t\t\"consectetur_42c\": \"<string>\",\n\t\t\"qui_d\": \"<string>\",\n\t\t\"occaecat_4\": \"<string>\",\n\t\t\"commodo70e\": \"<string>\",\n\t\t\"mollitf1c\": \"<string>\",\n\t\t\"labore2\": \"<string>\",\n\t\t\"nostrud_2\": \"<string>\",\n\t\t\"eu__0\": \"<string>\",\n\t\t\"fugiat02\": \"<string>\",\n\t\t\"dolore__2\": \"<string>\",\n\t\t\"dolor841\": \"<string>\",\n\t\t\"pariatur863\": \"<string>\",\n\t\t\"dolore4\": \"<string>\",\n\t\t\"laborum_71_\": \"<string>\",\n\t\t\"incididunt0\": \"<string>\",\n\t\t\"doloref\": \"<string>\",\n\t\t\"aute_2\": \"<string>\",\n\t\t\"dolore_8d2\": \"<string>\",\n\t\t\"quis_e94\": \"<string>\",\n\t\t\"voluptatec\": \"<string>\",\n\t\t\"et0\": \"<string>\",\n\t\t\"in_55\": \"<string>\",\n\t\t\"Lorem_44_\": \"<string>\",\n\t\t\"nostrud_c6\": \"<string>\",\n\t\t\"Loremae\": \"<string>\",\n\t\t\"minim_7\": \"<string>\",\n\t\t\"sed06\": \"<string>\",\n\t\t\"ipsum6\": \"<string>\",\n\t\t\"dof3a\": \"<string>\",\n\t\t\"laboris73\": \"<string>\",\n\t\t\"magna_0c_\": \"<string>\",\n\t\t\"pariatur_edb\": \"<string>\",\n\t\t\"sunt_b77\": \"<string>\",\n\t\t\"cillum_78\": \"<string>\",\n\t\t\"reprehenderit_5\": \"<string>\",\n\t\t\"do_182\": \"<string>\",\n\t\t\"voluptate_9\": \"<string>\",\n\t\t\"tempor_48\": \"<string>\",\n\t\t\"aute2e5\": \"<string>\",\n\t\t\"sedb7b\": \"<string>\",\n\t\t\"consectetur6\": \"<string>\",\n\t\t\"in_6af\": \"<string>\",\n\t\t\"laboris_f2d\": \"<string>\",\n\t\t\"incididunt9\": \"<string>\",\n\t\t\"ad63\": \"<string>\",\n\t\t\"tempor_2ab\": \"<string>\",\n\t\t\"sunt09\": \"<string>\",\n\t\t\"eu5f\": \"<string>\",\n\t\t\"qui__\": \"<string>\",\n\t\t\"ullamco4\": \"<string>\",\n\t\t\"reprehenderit77\": \"<string>\",\n\t\t\"incididuntb\": \"<string>\",\n\t\t\"ex52a\": \"<string>\",\n\t\t\"ut_b\": \"<string>\",\n\t\t\"consecteturb\": \"<string>\",\n\t\t\"voluptated0\": \"<string>\",\n\t\t\"laborum_a_\": \"<string>\",\n\t\t\"laboris87\": \"<string>\",\n\t\t\"irure03\": \"<string>\",\n\t\t\"reprehenderit1\": \"<string>\",\n\t\t\"eiusmod_4\": \"<string>\",\n\t\t\"voluptated5e\": \"<string>\",\n\t\t\"dolor02\": \"<string>\",\n\t\t\"dolor1e1\": \"<string>\",\n\t\t\"cupidatat83\": \"<string>\",\n\t\t\"nulla_a\": \"<string>\",\n\t\t\"irure_851\": \"<string>\",\n\t\t\"deserunt06\": \"<string>\",\n\t\t\"labore7\": \"<string>\",\n\t\t\"adipisicingd4\": \"<string>\",\n\t\t\"esse_1\": \"<string>\",\n\t\t\"officia_032\": \"<string>\",\n\t\t\"ine1\": \"<string>\",\n\t\t\"nulla_dd\": \"<string>\",\n\t\t\"esse8\": \"<string>\",\n\t\t\"dolor_5f\": \"<string>\",\n\t\t\"in7\": \"<string>\",\n\t\t\"animc34\": \"<string>\",\n\t\t\"occaecatc\": \"<string>\",\n\t\t\"reprehenderit_7cc\": \"<string>\",\n\t\t\"qui_c51\": \"<string>\",\n\t\t\"consectetura\": \"<string>\",\n\t\t\"nisi7c2\": \"<string>\",\n\t\t\"velitd2b\": \"<string>\",\n\t\t\"aliqua_86\": \"<string>\",\n\t\t\"cupidatat25\": \"<string>\",\n\t\t\"Duis_c1\": \"<string>\",\n\t\t\"consectetur_ef2\": \"<string>\",\n\t\t\"fugiat_5be\": \"<string>\",\n\t\t\"deserunt7aa\": \"<string>\",\n\t\t\"velit_65\": \"<string>\",\n\t\t\"sit04\": \"<string>\",\n\t\t\"sint_c9\": \"<string>\",\n\t\t\"aliquab\": \"<string>\",\n\t\t\"dolore_97\": \"<string>\",\n\t\t\"dolorec9\": \"<string>\",\n\t\t\"culpa_70\": \"<string>\",\n\t\t\"esse_f8c\": \"<string>\",\n\t\t\"dolore2_\": \"<string>\",\n\t\t\"etbe\": \"<string>\",\n\t\t\"commodo70\": \"<string>\",\n\t\t\"laborum06\": \"<string>\",\n\t\t\"ea_b\": \"<string>\",\n\t\t\"proident42\": \"<string>\",\n\t\t\"dolore6\": \"<string>\",\n\t\t\"esse3ac\": \"<string>\",\n\t\t\"ad_39d\": \"<string>\",\n\t\t\"ine15\": \"<string>\",\n\t\t\"ut_4_\": \"<string>\",\n\t\t\"dolore74\": \"<string>\",\n\t\t\"laboris_43\": \"<string>\",\n\t\t\"dolore__eb\": \"<string>\",\n\t\t\"laborum_0bb\": \"<string>\",\n\t\t\"elit_5f\": \"<string>\",\n\t\t\"aute7\": \"<string>\",\n\t\t\"sit_3d\": \"<string>\",\n\t\t\"adipisicing_78\": \"<string>\",\n\t\t\"esse94\": \"<string>\",\n\t\t\"voluptate_421\": \"<string>\",\n\t\t\"ullamcofa\": \"<string>\",\n\t\t\"eu_b5\": \"<string>\",\n\t\t\"pariatur801\": \"<string>\",\n\t\t\"nostrud_94\": \"<string>\",\n\t\t\"eiusmodb\": \"<string>\",\n\t\t\"ullamco_f7\": \"<string>\",\n\t\t\"elit5d6\": \"<string>\",\n\t\t\"ina\": \"<string>\",\n\t\t\"Ut0\": \"<string>\",\n\t\t\"nisi_a_\": \"<string>\",\n\t\t\"officia9_\": \"<string>\",\n\t\t\"eu_4\": \"<string>\",\n\t\t\"deserunt5\": \"<string>\",\n\t\t\"velit3\": \"<string>\",\n\t\t\"aliquip985\": \"<string>\",\n\t\t\"non4e2\": \"<string>\",\n\t\t\"consequat_f72\": \"<string>\",\n\t\t\"enim_4\": \"<string>\",\n\t\t\"anim9f6\": \"<string>\",\n\t\t\"in_4\": \"<string>\",\n\t\t\"magna_49a\": \"<string>\",\n\t\t\"ipsum314\": \"<string>\",\n\t\t\"aliquip_f\": \"<string>\",\n\t\t\"veniam_7b\": \"<string>\",\n\t\t\"cillum_34\": \"<string>\",\n\t\t\"dolor4b\": \"<string>\",\n\t\t\"in_e87\": \"<string>\",\n\t\t\"consequat91\": \"<string>\",\n\t\t\"elit_1\": \"<string>\",\n\t\t\"autedc\": \"<string>\",\n\t\t\"amet_3\": \"<string>\",\n\t\t\"in_d0\": \"<string>\",\n\t\t\"consectetur_b4\": \"<string>\",\n\t\t\"voluptate2b\": \"<string>\",\n\t\t\"proident_e\": \"<string>\",\n\t\t\"occaecate\": \"<string>\",\n\t\t\"dolore_\": \"<string>\",\n\t\t\"dolor_8\": \"<string>\",\n\t\t\"do90\": \"<string>\",\n\t\t\"voluptatedf1\": \"<string>\",\n\t\t\"mollit_\": \"<string>\",\n\t\t\"nulla_4\": \"<string>\",\n\t\t\"ut5\": \"<string>\",\n\t\t\"sed_2\": \"<string>\",\n\t\t\"veniam_71e\": \"<string>\",\n\t\t\"ad4\": \"<string>\",\n\t\t\"consequat091\": \"<string>\",\n\t\t\"in_c6\": \"<string>\",\n\t\t\"ex_1c\": \"<string>\",\n\t\t\"ut_486\": \"<string>\",\n\t\t\"nostrud8\": \"<string>\",\n\t\t\"minim24b\": \"<string>\",\n\t\t\"dolore_7\": \"<string>\",\n\t\t\"est96\": \"<string>\",\n\t\t\"sint_1\": \"<string>\",\n\t\t\"amet_5_\": \"<string>\",\n\t\t\"eiusmod6_\": \"<string>\",\n\t\t\"sed_26\": \"<string>\",\n\t\t\"ipsum_1d\": \"<string>\",\n\t\t\"consequat__\": \"<string>\",\n\t\t\"commodo3\": \"<string>\",\n\t\t\"consequat6a\": \"<string>\",\n\t\t\"eu_3\": \"<string>\",\n\t\t\"voluptate_ba\": \"<string>\",\n\t\t\"dolore_7_0\": \"<string>\",\n\t\t\"Excepteur2\": \"<string>\",\n\t\t\"Excepteurc1\": \"<string>\",\n\t\t\"ad8_5\": \"<string>\",\n\t\t\"exercitation_0\": \"<string>\",\n\t\t\"idf\": \"<string>\",\n\t\t\"irure_be\": \"<string>\",\n\t\t\"dolore9\": \"<string>\",\n\t\t\"magna751\": \"<string>\",\n\t\t\"mollit7\": \"<string>\",\n\t\t\"ullamco_69e\": \"<string>\",\n\t\t\"voluptate13\": \"<string>\",\n\t\t\"Ut6a_\": \"<string>\",\n\t\t\"enim_ef\": \"<string>\",\n\t\t\"enim_1ec\": \"<string>\",\n\t\t\"commodo__5\": \"<string>\",\n\t\t\"estba2\": \"<string>\",\n\t\t\"aute7b3\": \"<string>\",\n\t\t\"proident_4\": \"<string>\",\n\t\t\"ad330\": \"<string>\",\n\t\t\"magna4\": \"<string>\",\n\t\t\"cillumfa\": \"<string>\",\n\t\t\"dolore_59\": \"<string>\",\n\t\t\"adipisicing8\": \"<string>\",\n\t\t\"dolor_0\": \"<string>\",\n\t\t\"cupidatat75\": \"<string>\",\n\t\t\"amet3_\": \"<string>\",\n\t\t\"pariatur_375\": \"<string>\",\n\t\t\"culpa_c5\": \"<string>\",\n\t\t\"ut_e\": \"<string>\",\n\t\t\"Ut_9\": \"<string>\",\n\t\t\"exercitation_60d\": \"<string>\",\n\t\t\"pariatur_2\": \"<string>\",\n\t\t\"Ute7\": \"<string>\",\n\t\t\"quis2b\": \"<string>\",\n\t\t\"sintf3\": \"<string>\",\n\t\t\"culpa_896\": \"<string>\",\n\t\t\"dolor39d\": \"<string>\",\n\t\t\"elit_9\": \"<string>\",\n\t\t\"sit_595\": \"<string>\",\n\t\t\"magna91\": \"<string>\",\n\t\t\"commodo_8a\": \"<string>\",\n\t\t\"aute075\": \"<string>\",\n\t\t\"mollitd19\": \"<string>\",\n\t\t\"ada27\": \"<string>\",\n\t\t\"enim_19\": \"<string>\",\n\t\t\"sedc\": \"<string>\",\n\t\t\"ut74\": \"<string>\",\n\t\t\"ullamco_7\": \"<string>\",\n\t\t\"eta2b\": \"<string>\",\n\t\t\"sit92\": \"<string>\",\n\t\t\"Lorema1\": \"<string>\",\n\t\t\"consequatc\": \"<string>\",\n\t\t\"ipsum_\": \"<string>\",\n\t\t\"cillum_8\": \"<string>\",\n\t\t\"labore7d7\": \"<string>\",\n\t\t\"velit_7\": \"<string>\",\n\t\t\"cupidatat_d_\": \"<string>\",\n\t\t\"quis_e82\": \"<string>\",\n\t\t\"occaecat18b\": \"<string>\",\n\t\t\"voluptatee19\": \"<string>\",\n\t\t\"est_8a\": \"<string>\",\n\t\t\"adipisicingcf9\": \"<string>\",\n\t\t\"esse_2bf\": \"<string>\",\n\t\t\"laboris_9d\": \"<string>\",\n\t\t\"aute_b_8\": \"<string>\",\n\t\t\"ex_5\": \"<string>\",\n\t\t\"dolor4\": \"<string>\",\n\t\t\"Excepteur_7e9\": \"<string>\",\n\t\t\"consequat381\": \"<string>\",\n\t\t\"aliqua0\": \"<string>\",\n\t\t\"voluptate_89\": \"<string>\",\n\t\t\"nisi_9_7\": \"<string>\",\n\t\t\"tempor5\": \"<string>\",\n\t\t\"et_25\": \"<string>\",\n\t\t\"laborum_6ce\": \"<string>\",\n\t\t\"aliquip6c\": \"<string>\",\n\t\t\"ipsumac\": \"<string>\",\n\t\t\"aute__\": \"<string>\",\n\t\t\"mollit97c\": \"<string>\",\n\t\t\"nisi_77d\": \"<string>\",\n\t\t\"ipsumcd4\": \"<string>\",\n\t\t\"anim87_\": \"<string>\",\n\t\t\"ipsum_3\": \"<string>\",\n\t\t\"quis1\": \"<string>\",\n\t\t\"Duis_6a5\": \"<string>\",\n\t\t\"minim__\": \"<string>\",\n\t\t\"occaecat46f\": \"<string>\",\n\t\t\"dolorf85\": \"<string>\",\n\t\t\"ut_3ef\": \"<string>\",\n\t\t\"fugiat_dd\": \"<string>\",\n\t\t\"pariatur6cb\": \"<string>\",\n\t\t\"aliquip_152\": \"<string>\",\n\t\t\"occaecat7\": \"<string>\",\n\t\t\"ad_4\": \"<string>\",\n\t\t\"sunt_d11\": \"<string>\",\n\t\t\"nonb\": \"<string>\",\n\t\t\"incididunt_7_\": \"<string>\",\n\t\t\"incididunt_9e\": \"<string>\",\n\t\t\"enimc2a\": \"<string>\",\n\t\t\"et_7\": \"<string>\",\n\t\t\"magna72\": \"<string>\",\n\t\t\"Excepteur_\": \"<string>\",\n\t\t\"elit_459\": \"<string>\",\n\t\t\"adipisicing296\": \"<string>\",\n\t\t\"sint8\": \"<string>\",\n\t\t\"ut0\": \"<string>\",\n\t\t\"aliqua_333\": \"<string>\",\n\t\t\"fugiat253\": \"<string>\",\n\t\t\"nostrud_99\": \"<string>\",\n\t\t\"occaecat_06\": \"<string>\",\n\t\t\"amete_7\": \"<string>\",\n\t\t\"voluptate_e8\": \"<string>\",\n\t\t\"ullamcof\": \"<string>\",\n\t\t\"eu_9\": \"<string>\",\n\t\t\"Excepteur_52\": \"<string>\",\n\t\t\"dolor43\": \"<string>\",\n\t\t\"qui7\": \"<string>\",\n\t\t\"officia__c6\": \"<string>\",\n\t\t\"est1\": \"<string>\",\n\t\t\"irure1f\": \"<string>\",\n\t\t\"tempor_0\": \"<string>\",\n\t\t\"est41\": \"<string>\",\n\t\t\"eiusmod97e\": \"<string>\",\n\t\t\"ut_3\": \"<string>\",\n\t\t\"adf\": \"<string>\",\n\t\t\"est_5c\": \"<string>\",\n\t\t\"adipisicing_02e\": \"<string>\",\n\t\t\"consectetur__\": \"<string>\",\n\t\t\"aute33\": \"<string>\",\n\t\t\"reprehenderit03\": \"<string>\",\n\t\t\"laborum_2f\": \"<string>\",\n\t\t\"magna8\": \"<string>\",\n\t\t\"elit21\": \"<string>\",\n\t\t\"cupidatat_3d\": \"<string>\",\n\t\t\"sint_3e6\": \"<string>\",\n\t\t\"et_b\": \"<string>\",\n\t\t\"culpa_3b4\": \"<string>\",\n\t\t\"ipsum__5a\": \"<string>\",\n\t\t\"in_dcb\": \"<string>\",\n\t\t\"Lorem_a\": \"<string>\",\n\t\t\"eaab\": \"<string>\",\n\t\t\"Duis_b\": \"<string>\",\n\t\t\"velit_5\": \"<string>\",\n\t\t\"laborum_fe9\": \"<string>\",\n\t\t\"tempor69\": \"<string>\",\n\t\t\"laborisb\": \"<string>\",\n\t\t\"eiusmod96\": \"<string>\",\n\t\t\"fugiat_\": \"<string>\",\n\t\t\"velit1\": \"<string>\",\n\t\t\"enimae3\": \"<string>\",\n\t\t\"eiusmod_be\": \"<string>\",\n\t\t\"proidenta\": \"<string>\",\n\t\t\"enim805\": \"<string>\",\n\t\t\"anim_f\": \"<string>\",\n\t\t\"eu_f7\": \"<string>\",\n\t\t\"velit23\": \"<string>\",\n\t\t\"eiusmodd_\": \"<string>\",\n\t\t\"adipisicingebc\": \"<string>\",\n\t\t\"aliquip_21\": \"<string>\",\n\t\t\"consecteturfa\": \"<string>\",\n\t\t\"et3__\": \"<string>\",\n\t\t\"Duis_818\": \"<string>\",\n\t\t\"Excepteur_2\": \"<string>\",\n\t\t\"consecteture\": \"<string>\",\n\t\t\"culpa72\": \"<string>\",\n\t\t\"incididunt_f5c\": \"<string>\",\n\t\t\"veniam_667\": \"<string>\",\n\t\t\"fugiata\": \"<string>\",\n\t\t\"quis_486\": \"<string>\",\n\t\t\"Excepteur_96\": \"<string>\",\n\t\t\"proident__0\": \"<string>\",\n\t\t\"do_f0b\": \"<string>\",\n\t\t\"docc\": \"<string>\",\n\t\t\"est_6af\": \"<string>\",\n\t\t\"eaf8d\": \"<string>\",\n\t\t\"enim7\": \"<string>\",\n\t\t\"sit_8\": \"<string>\",\n\t\t\"exercitation1\": \"<string>\",\n\t\t\"minim3\": \"<string>\",\n\t\t\"cillum_3c3\": \"<string>\",\n\t\t\"incididunt6ef\": \"<string>\",\n\t\t\"minim4b\": \"<string>\",\n\t\t\"in1_\": \"<string>\",\n\t\t\"exercitation6\": \"<string>\",\n\t\t\"commodo_5a9\": \"<string>\",\n\t\t\"enim9a\": \"<string>\",\n\t\t\"dolor9_\": \"<string>\",\n\t\t\"suntc\": \"<string>\",\n\t\t\"aliquip_01\": \"<string>\",\n\t\t\"quis_8\": \"<string>\",\n\t\t\"commodo_ae\": \"<string>\",\n\t\t\"non1e\": \"<string>\",\n\t\t\"magna56f\": \"<string>\",\n\t\t\"dolorc\": \"<string>\",\n\t\t\"nisi__\": \"<string>\",\n\t\t\"dolor_d_\": \"<string>\",\n\t\t\"eu5\": \"<string>\",\n\t\t\"nulla_f\": \"<string>\",\n\t\t\"utb3a\": \"<string>\",\n\t\t\"adipisicing_4\": \"<string>\",\n\t\t\"anim_6e5\": \"<string>\",\n\t\t\"mollit54\": \"<string>\",\n\t\t\"Excepteur_58\": \"<string>\",\n\t\t\"aliquip_63\": \"<string>\",\n\t\t\"Ut1\": \"<string>\",\n\t\t\"exercitation_1\": \"<string>\",\n\t\t\"dolor_0_\": \"<string>\",\n\t\t\"aliqua_e\": \"<string>\",\n\t\t\"quisd91\": \"<string>\",\n\t\t\"quisb\": \"<string>\",\n\t\t\"exb\": \"<string>\",\n\t\t\"fugiat4e6\": \"<string>\",\n\t\t\"minim_2ff\": \"<string>\",\n\t\t\"ut78d\": \"<string>\",\n\t\t\"in6\": \"<string>\",\n\t\t\"irure_84\": \"<string>\",\n\t\t\"Lorem_59\": \"<string>\",\n\t\t\"sit1\": \"<string>\",\n\t\t\"quis_932\": \"<string>\",\n\t\t\"occaecat_2\": \"<string>\",\n\t\t\"reprehenderit_d3\": \"<string>\",\n\t\t\"aute0\": \"<string>\",\n\t\t\"anim__5e\": \"<string>\",\n\t\t\"magna_2e4\": \"<string>\",\n\t\t\"ipsum_b_5\": \"<string>\",\n\t\t\"irure51\": \"<string>\",\n\t\t\"Duis5e3\": \"<string>\",\n\t\t\"adipisicing_c49\": \"<string>\",\n\t\t\"officia4_\": \"<string>\",\n\t\t\"reprehenderit_fc0\": \"<string>\",\n\t\t\"anim_2\": \"<string>\",\n\t\t\"aliqua_\": \"<string>\",\n\t\t\"ea24\": \"<string>\",\n\t\t\"Excepteurbd8\": \"<string>\",\n\t\t\"occaecat_d9f\": \"<string>\",\n\t\t\"enim0a\": \"<string>\",\n\t\t\"eud\": \"<string>\",\n\t\t\"inf\": \"<string>\",\n\t\t\"amet_c__\": \"<string>\",\n\t\t\"deseruntf\": \"<string>\",\n\t\t\"ad17\": \"<string>\",\n\t\t\"Excepteur_3ff\": \"<string>\",\n\t\t\"aute_4\": \"<string>\",\n\t\t\"ipsum_daa\": \"<string>\",\n\t\t\"qui_8\": \"<string>\",\n\t\t\"laborebc3\": \"<string>\",\n\t\t\"ipsum_6\": \"<string>\",\n\t\t\"Duiscb\": \"<string>\",\n\t\t\"dolore2\": \"<string>\",\n\t\t\"adipisicing72c\": \"<string>\",\n\t\t\"mollit53f\": \"<string>\",\n\t\t\"sunt_9\": \"<string>\",\n\t\t\"non__f\": \"<string>\",\n\t\t\"ex3\": \"<string>\",\n\t\t\"ullamco_b94\": \"<string>\",\n\t\t\"eiusmod_dc\": \"<string>\",\n\t\t\"exercitation_4\": \"<string>\",\n\t\t\"occaecat_384\": \"<string>\",\n\t\t\"minime\": \"<string>\",\n\t\t\"anim37c\": \"<string>\",\n\t\t\"reprehenderit_7a\": \"<string>\",\n\t\t\"consectetur_f\": \"<string>\",\n\t\t\"ullamco6\": \"<string>\",\n\t\t\"veniam_933\": \"<string>\",\n\t\t\"sintb4\": \"<string>\",\n\t\t\"aliqua_d9\": \"<string>\",\n\t\t\"officiaa\": \"<string>\",\n\t\t\"commodo_a\": \"<string>\",\n\t\t\"dob\": \"<string>\",\n\t\t\"aliqua_20b\": \"<string>\",\n\t\t\"reprehenderit_3e\": \"<string>\",\n\t\t\"aliqua_d85\": \"<string>\",\n\t\t\"ut_23\": \"<string>\",\n\t\t\"dolor_d51\": \"<string>\",\n\t\t\"eu_58d\": \"<string>\",\n\t\t\"deserunt_6\": \"<string>\",\n\t\t\"et__\": \"<string>\",\n\t\t\"quis_081\": \"<string>\",\n\t\t\"Ut_4\": \"<string>\",\n\t\t\"inb7\": \"<string>\",\n\t\t\"est_72\": \"<string>\",\n\t\t\"occaecat_6\": \"<string>\",\n\t\t\"Duis_5c5\": \"<string>\",\n\t\t\"consequat_44f\": \"<string>\",\n\t\t\"Ut0b2\": \"<string>\",\n\t\t\"nostrud_0\": \"<string>\",\n\t\t\"aute9\": \"<string>\",\n\t\t\"cupidatat92b\": \"<string>\",\n\t\t\"ipsum_d\": \"<string>\",\n\t\t\"amet8\": \"<string>\",\n\t\t\"elit__d9\": \"<string>\",\n\t\t\"qui8c\": \"<string>\",\n\t\t\"nostrud_cd\": \"<string>\",\n\t\t\"aliquip_88\": \"<string>\",\n\t\t\"id_7c\": \"<string>\",\n\t\t\"sita5\": \"<string>\",\n\t\t\"doa\": \"<string>\",\n\t\t\"pariatur_73e\": \"<string>\",\n\t\t\"sitec\": \"<string>\",\n\t\t\"in_346\": \"<string>\",\n\t\t\"velite8e\": \"<string>\",\n\t\t\"sed_7\": \"<string>\",\n\t\t\"proident__\": \"<string>\",\n\t\t\"ipsum_2f\": \"<string>\",\n\t\t\"nulla43\": \"<string>\",\n\t\t\"nulla_746\": \"<string>\",\n\t\t\"velitbbf\": \"<string>\",\n\t\t\"dolore67\": \"<string>\",\n\t\t\"irure_9f7\": \"<string>\",\n\t\t\"dolor_12\": \"<string>\",\n\t\t\"commodocd2\": \"<string>\",\n\t\t\"id_0aa\": \"<string>\",\n\t\t\"nulla186\": \"<string>\",\n\t\t\"est_45\": \"<string>\",\n\t\t\"veniam_c8_\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"redirectUrl\": \"<uri>\",\n\t\"url\": \"<uri>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"sit_64\": \"<string>\",\n\t\t\"ex_c\": \"<string>\",\n\t\t\"qui_a1f\": \"<string>\",\n\t\t\"nisi1\": \"<string>\",\n\t\t\"deserunt3f\": \"<string>\",\n\t\t\"est_aa\": \"<string>\",\n\t\t\"laboris_\": \"<string>\",\n\t\t\"eac\": \"<string>\",\n\t\t\"anim8b\": \"<string>\",\n\t\t\"aute3\": \"<string>\",\n\t\t\"mollitb1\": \"<string>\",\n\t\t\"ad_8\": \"<string>\",\n\t\t\"voluptate_62\": \"<string>\",\n\t\t\"ut5_6\": \"<string>\",\n\t\t\"iruree\": \"<string>\",\n\t\t\"cillum0\": \"<string>\",\n\t\t\"nulla_a6\": \"<string>\",\n\t\t\"cillum7\": \"<string>\",\n\t\t\"irure4\": \"<string>\",\n\t\t\"sed9\": \"<string>\",\n\t\t\"doloreb11\": \"<string>\",\n\t\t\"ex_96\": \"<string>\",\n\t\t\"este76\": \"<string>\",\n\t\t\"est_b\": \"<string>\",\n\t\t\"eae9\": \"<string>\",\n\t\t\"Excepteur6\": \"<string>\",\n\t\t\"consectetur3b\": \"<string>\",\n\t\t\"velitf3\": \"<string>\",\n\t\t\"Lorem3cc\": \"<string>\",\n\t\t\"aliqua6c\": \"<string>\",\n\t\t\"officia6\": \"<string>\",\n\t\t\"aliqua2\": \"<string>\",\n\t\t\"et_b55\": \"<string>\",\n\t\t\"non60f\": \"<string>\",\n\t\t\"aliqua_b8\": \"<string>\",\n\t\t\"velit_0\": \"<string>\",\n\t\t\"tempor_5cc\": \"<string>\",\n\t\t\"ut_39e\": \"<string>\",\n\t\t\"mollit_6\": \"<string>\",\n\t\t\"tempor0a\": \"<string>\",\n\t\t\"exercitation_ae8\": \"<string>\",\n\t\t\"enim8c0\": \"<string>\",\n\t\t\"ut_\": \"<string>\",\n\t\t\"Duis5b\": \"<string>\",\n\t\t\"inc\": \"<string>\",\n\t\t\"irure_40a\": \"<string>\",\n\t\t\"in_653\": \"<string>\",\n\t\t\"sunt_c0\": \"<string>\",\n\t\t\"pariatur8\": \"<string>\",\n\t\t\"reprehenderit_b\": \"<string>\",\n\t\t\"aliquip_e5\": \"<string>\",\n\t\t\"doloree2e\": \"<string>\",\n\t\t\"consequat__\": \"<string>\",\n\t\t\"reprehenderit8_\": \"<string>\",\n\t\t\"dolor0\": \"<string>\",\n\t\t\"ad_55\": \"<string>\",\n\t\t\"exe0_\": \"<string>\",\n\t\t\"aute_d5\": \"<string>\",\n\t\t\"incididunt06c\": \"<string>\",\n\t\t\"aliqua_9\": \"<string>\",\n\t\t\"est_b38\": \"<string>\",\n\t\t\"velit_8a_\": \"<string>\",\n\t\t\"dolore_e\": \"<string>\",\n\t\t\"ipsum_b\": \"<string>\",\n\t\t\"adipisicing_f\": \"<string>\",\n\t\t\"tempor85e\": \"<string>\",\n\t\t\"eiusmod_61\": \"<string>\",\n\t\t\"exercitation_e4d\": \"<string>\",\n\t\t\"aliquip_2\": \"<string>\",\n\t\t\"aute_0a\": \"<string>\",\n\t\t\"in_5b9\": \"<string>\",\n\t\t\"consequat890\": \"<string>\",\n\t\t\"non_fd\": \"<string>\",\n\t\t\"cupidatat_15\": \"<string>\",\n\t\t\"cupidatat_0\": \"<string>\",\n\t\t\"magna7\": \"<string>\",\n\t\t\"eu_7\": \"<string>\",\n\t\t\"in17\": \"<string>\",\n\t\t\"laborisa\": \"<string>\",\n\t\t\"ut_25\": \"<string>\",\n\t\t\"in_4\": \"<string>\",\n\t\t\"ullamcoc\": \"<string>\",\n\t\t\"Duis_c\": \"<string>\",\n\t\t\"aliqua_ac\": \"<string>\",\n\t\t\"occaecat_ee0\": \"<string>\",\n\t\t\"laborum1d\": \"<string>\",\n\t\t\"ida\": \"<string>\",\n\t\t\"sed_a5c\": \"<string>\",\n\t\t\"Excepteur_1c\": \"<string>\",\n\t\t\"consectetur_fa_\": \"<string>\",\n\t\t\"amet35_\": \"<string>\",\n\t\t\"consectetur4\": \"<string>\",\n\t\t\"labored98\": \"<string>\",\n\t\t\"velit3\": \"<string>\",\n\t\t\"commodo__\": \"<string>\",\n\t\t\"Ut4\": \"<string>\",\n\t\t\"exfc\": \"<string>\",\n\t\t\"sed_4c2\": \"<string>\",\n\t\t\"veniam_7\": \"<string>\",\n\t\t\"dolore_\": \"<string>\",\n\t\t\"cillum8\": \"<string>\",\n\t\t\"incididunt_b\": \"<string>\",\n\t\t\"Duis_49\": \"<string>\",\n\t\t\"quis_5\": \"<string>\",\n\t\t\"commodo_d5\": \"<string>\",\n\t\t\"culpa9\": \"<string>\",\n\t\t\"amet__\": \"<string>\",\n\t\t\"mollit_c1_\": \"<string>\",\n\t\t\"aliquaee2\": \"<string>\",\n\t\t\"Excepteur_1\": \"<string>\",\n\t\t\"deserunt39\": \"<string>\",\n\t\t\"occaecat_c3\": \"<string>\",\n\t\t\"amet3c4\": \"<string>\",\n\t\t\"aute8b\": \"<string>\",\n\t\t\"et_71d\": \"<string>\",\n\t\t\"non3\": \"<string>\",\n\t\t\"ut_b07\": \"<string>\",\n\t\t\"utd7\": \"<string>\",\n\t\t\"ex_1d\": \"<string>\",\n\t\t\"laboris13d\": \"<string>\",\n\t\t\"do_51\": \"<string>\",\n\t\t\"nostrud_0a7\": \"<string>\",\n\t\t\"sit_20e\": \"<string>\",\n\t\t\"adipisicing_696\": \"<string>\",\n\t\t\"sunt__\": \"<string>\",\n\t\t\"occaecat_ca4\": \"<string>\",\n\t\t\"veniambf\": \"<string>\",\n\t\t\"dolore7\": \"<string>\",\n\t\t\"reprehenderit_1_3\": \"<string>\",\n\t\t\"fugiat_\": \"<string>\",\n\t\t\"tempor3f5\": \"<string>\",\n\t\t\"sit_1\": \"<string>\",\n\t\t\"eudb\": \"<string>\",\n\t\t\"aute_a\": \"<string>\",\n\t\t\"consequat_08\": \"<string>\",\n\t\t\"reprehenderit3a\": \"<string>\",\n\t\t\"consectetur65_\": \"<string>\",\n\t\t\"aliquip2\": \"<string>\",\n\t\t\"velit_1b\": \"<string>\",\n\t\t\"elit_7b5\": \"<string>\",\n\t\t\"elit__\": \"<string>\",\n\t\t\"adipisicing_\": \"<string>\",\n\t\t\"laborumb\": \"<string>\",\n\t\t\"labore5aa\": \"<string>\",\n\t\t\"laboris0\": \"<string>\",\n\t\t\"incb\": \"<string>\",\n\t\t\"siteee\": \"<string>\",\n\t\t\"et_a7\": \"<string>\",\n\t\t\"sit75f\": \"<string>\",\n\t\t\"officia_a\": \"<string>\",\n\t\t\"consectetur_e4c\": \"<string>\",\n\t\t\"aute_e\": \"<string>\",\n\t\t\"Duis8c\": \"<string>\",\n\t\t\"nisied\": \"<string>\",\n\t\t\"temporfa\": \"<string>\",\n\t\t\"id3\": \"<string>\",\n\t\t\"temporf05\": \"<string>\",\n\t\t\"velit2\": \"<string>\",\n\t\t\"elit0\": \"<string>\",\n\t\t\"deserunt5\": \"<string>\",\n\t\t\"Ut_90a\": \"<string>\",\n\t\t\"ea7_a\": \"<string>\",\n\t\t\"in57\": \"<string>\",\n\t\t\"deserunt_4\": \"<string>\",\n\t\t\"ullamco__\": \"<string>\",\n\t\t\"dolorea\": \"<string>\",\n\t\t\"quis_15\": \"<string>\",\n\t\t\"consectetur6ae\": \"<string>\",\n\t\t\"exercitation59_\": \"<string>\",\n\t\t\"dolordd\": \"<string>\",\n\t\t\"in948\": \"<string>\",\n\t\t\"officiac1b\": \"<string>\",\n\t\t\"magna_63\": \"<string>\",\n\t\t\"labore_620\": \"<string>\",\n\t\t\"dolor_99\": \"<string>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"url\": \"https://yoyyP.ftwUa8\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"dolora\": \"<string>\",\n\t\t\"consequat48c\": \"<string>\",\n\t\t\"sint5\": \"<string>\",\n\t\t\"Lorem_4\": \"<string>\",\n\t\t\"eiusmode\": \"<string>\",\n\t\t\"aliqua_28e\": \"<string>\",\n\t\t\"et_c1\": \"<string>\",\n\t\t\"veniam_e\": \"<string>\",\n\t\t\"officia_78\": \"<string>\",\n\t\t\"minim025\": \"<string>\",\n\t\t\"fugiat_9\": \"<string>\",\n\t\t\"commodo_c7\": \"<string>\",\n\t\t\"nullab\": \"<string>\",\n\t\t\"enim_7a\": \"<string>\",\n\t\t\"officia_cd1\": \"<string>\",\n\t\t\"quif\": \"<string>\",\n\t\t\"incididunt58\": \"<string>\",\n\t\t\"magnab\": \"<string>\",\n\t\t\"magna_2ab\": \"<string>\",\n\t\t\"est69\": \"<string>\",\n\t\t\"dolore_37\": \"<string>\",\n\t\t\"cillum__8\": \"<string>\",\n\t\t\"doe\": \"<string>\",\n\t\t\"sit6\": \"<string>\",\n\t\t\"proident__9\": \"<string>\",\n\t\t\"quisaf\": \"<string>\",\n\t\t\"irured\": \"<string>\",\n\t\t\"nisif_3\": \"<string>\",\n\t\t\"pariatur7cc\": \"<string>\",\n\t\t\"reprehenderit_5e\": \"<string>\",\n\t\t\"Duis77\": \"<string>\",\n\t\t\"dod1\": \"<string>\",\n\t\t\"adipisicinge\": \"<string>\",\n\t\t\"amet_0e8\": \"<string>\",\n\t\t\"anim41\": \"<string>\",\n\t\t\"enimde\": \"<string>\",\n\t\t\"nulla_0b\": \"<string>\",\n\t\t\"sint_10\": \"<string>\",\n\t\t\"do_b_\": \"<string>\",\n\t\t\"quis_04\": \"<string>\",\n\t\t\"Lorem_6e\": \"<string>\",\n\t\t\"occaecat5\": \"<string>\",\n\t\t\"Excepteura15\": \"<string>\",\n\t\t\"culpa35\": \"<string>\",\n\t\t\"laboreb5\": \"<string>\",\n\t\t\"officia8db\": \"<string>\",\n\t\t\"magna72e\": \"<string>\",\n\t\t\"dolor_bd_\": \"<string>\",\n\t\t\"deserunt__2\": \"<string>\",\n\t\t\"consequat_c\": \"<string>\",\n\t\t\"Loremc\": \"<string>\",\n\t\t\"utf37\": \"<string>\",\n\t\t\"do_dd2\": \"<string>\",\n\t\t\"tempor_7d\": \"<string>\",\n\t\t\"aute_f47\": \"<string>\",\n\t\t\"nulla_7\": \"<string>\",\n\t\t\"officia_8\": \"<string>\",\n\t\t\"laborecc7\": \"<string>\",\n\t\t\"nonf79\": \"<string>\",\n\t\t\"sint2ab\": \"<string>\",\n\t\t\"nulla4\": \"<string>\",\n\t\t\"veniama37\": \"<string>\",\n\t\t\"esse7\": \"<string>\",\n\t\t\"minim_4f_\": \"<string>\",\n\t\t\"cupidatat_5fd\": \"<string>\",\n\t\t\"in_fd1\": \"<string>\",\n\t\t\"et_e14\": \"<string>\",\n\t\t\"nulla5\": \"<string>\",\n\t\t\"proidentba\": \"<string>\",\n\t\t\"exercitation86c\": \"<string>\",\n\t\t\"laborum7a9\": \"<string>\",\n\t\t\"amet_6\": \"<string>\",\n\t\t\"dolore__\": \"<string>\",\n\t\t\"adipisicing_3_4\": \"<string>\",\n\t\t\"doeb\": \"<string>\",\n\t\t\"consequat_3\": \"<string>\",\n\t\t\"nisi_ed7\": \"<string>\",\n\t\t\"dolor_2\": \"<string>\",\n\t\t\"ut_9f3\": \"<string>\",\n\t\t\"voluptate_fa\": \"<string>\",\n\t\t\"commodo_45d\": \"<string>\",\n\t\t\"nonab\": \"<string>\",\n\t\t\"sit881\": \"<string>\",\n\t\t\"irure_7\": \"<string>\",\n\t\t\"tempor_a42\": \"<string>\",\n\t\t\"occaecat_cc1\": \"<string>\",\n\t\t\"officia_3\": \"<string>\",\n\t\t\"ad9\": \"<string>\",\n\t\t\"nisi_b0\": \"<string>\",\n\t\t\"sed_aa5\": \"<string>\",\n\t\t\"proident_4d_\": \"<string>\",\n\t\t\"amet9_a\": \"<string>\",\n\t\t\"sit9\": \"<string>\",\n\t\t\"sint_8\": \"<string>\",\n\t\t\"dolore_d\": \"<string>\",\n\t\t\"sed49\": \"<string>\",\n\t\t\"sunt_dc\": \"<string>\",\n\t\t\"commodo_\": \"<string>\",\n\t\t\"dolor_9f_\": \"<string>\",\n\t\t\"eiusmod_ee5\": \"<string>\",\n\t\t\"proident8\": \"<string>\",\n\t\t\"sit_e_\": \"<string>\",\n\t\t\"ad77e\": \"<string>\",\n\t\t\"culpa1\": \"<string>\",\n\t\t\"nulla1f\": \"<string>\",\n\t\t\"minim_\": \"<string>\",\n\t\t\"eu_29\": \"<string>\",\n\t\t\"quie\": \"<string>\",\n\t\t\"id_fea\": \"<string>\",\n\t\t\"velit97\": \"<string>\",\n\t\t\"sit_0d\": \"<string>\",\n\t\t\"voluptate3b\": \"<string>\",\n\t\t\"sint384\": \"<string>\",\n\t\t\"cupidatat__3a\": \"<string>\",\n\t\t\"fugiat_3\": \"<string>\",\n\t\t\"ipsum_43\": \"<string>\",\n\t\t\"dolorfe4\": \"<string>\",\n\t\t\"in_45\": \"<string>\",\n\t\t\"pariatur88c\": \"<string>\",\n\t\t\"mollit7_\": \"<string>\",\n\t\t\"anim70e\": \"<string>\",\n\t\t\"laboris_c97\": \"<string>\",\n\t\t\"nisi_3c4\": \"<string>\",\n\t\t\"culpa_5\": \"<string>\",\n\t\t\"labore_e9\": \"<string>\",\n\t\t\"deseruntf60\": \"<string>\",\n\t\t\"aliquip09\": \"<string>\",\n\t\t\"aute__51\": \"<string>\",\n\t\t\"cupidatat_d6\": \"<string>\",\n\t\t\"et42\": \"<string>\",\n\t\t\"fugiat__\": \"<string>\",\n\t\t\"consequat__c9\": \"<string>\",\n\t\t\"magna_1a\": \"<string>\",\n\t\t\"eiusmod47b\": \"<string>\",\n\t\t\"in_3da\": \"<string>\",\n\t\t\"officia_c72\": \"<string>\",\n\t\t\"minim_53\": \"<string>\",\n\t\t\"anim0\": \"<string>\",\n\t\t\"aute7b6\": \"<string>\",\n\t\t\"sunt8\": \"<string>\",\n\t\t\"ameta8\": \"<string>\",\n\t\t\"sint_d\": \"<string>\",\n\t\t\"minim74\": \"<string>\",\n\t\t\"incididunt0d1\": \"<string>\",\n\t\t\"aliquip1bf\": \"<string>\",\n\t\t\"essed\": \"<string>\",\n\t\t\"pariatur0\": \"<string>\",\n\t\t\"occaecata\": \"<string>\",\n\t\t\"nulla_ba\": \"<string>\",\n\t\t\"aliqua61f\": \"<string>\",\n\t\t\"anim_34\": \"<string>\",\n\t\t\"elit0\": \"<string>\",\n\t\t\"ipsum_9_\": \"<string>\",\n\t\t\"ut1f2\": \"<string>\",\n\t\t\"aliquip_c\": \"<string>\",\n\t\t\"id_160\": \"<string>\",\n\t\t\"minim_c2e\": \"<string>\",\n\t\t\"commodo6b8\": \"<string>\",\n\t\t\"esse4a\": \"<string>\",\n\t\t\"enimd9\": \"<string>\",\n\t\t\"ad70_\": \"<string>\",\n\t\t\"aliquip_d\": \"<string>\",\n\t\t\"in_3\": \"<string>\",\n\t\t\"Duis_4e0\": \"<string>\",\n\t\t\"laboris_1bd\": \"<string>\",\n\t\t\"Excepteur_73d\": \"<string>\",\n\t\t\"mollit_4\": \"<string>\",\n\t\t\"elit_c\": \"<string>\",\n\t\t\"Utb\": \"<string>\",\n\t\t\"qui_0\": \"<string>\",\n\t\t\"mollit_1\": \"<string>\",\n\t\t\"non9d\": \"<string>\",\n\t\t\"sedb0\": \"<string>\",\n\t\t\"ullamco_dfa\": \"<string>\",\n\t\t\"ut_4ba\": \"<string>\",\n\t\t\"deseruntb07\": \"<string>\",\n\t\t\"in_f\": \"<string>\",\n\t\t\"nonc\": \"<string>\",\n\t\t\"tempor4_8\": \"<string>\",\n\t\t\"enim_8\": \"<string>\",\n\t\t\"Ut_0fa\": \"<string>\",\n\t\t\"est_1\": \"<string>\",\n\t\t\"aliquip_b\": \"<string>\",\n\t\t\"in_b\": \"<string>\",\n\t\t\"id_cd\": \"<string>\",\n\t\t\"incididunt_ec6\": \"<string>\",\n\t\t\"consectetur5bd\": \"<string>\",\n\t\t\"proident65\": \"<string>\",\n\t\t\"enim_3\": \"<string>\",\n\t\t\"dolore_c5\": \"<string>\",\n\t\t\"non_a1\": \"<string>\",\n\t\t\"deserunt489\": \"<string>\",\n\t\t\"elit36\": \"<string>\",\n\t\t\"officiab\": \"<string>\",\n\t\t\"do_bb\": \"<string>\",\n\t\t\"ipsumd57\": \"<string>\",\n\t\t\"tempor_838\": \"<string>\",\n\t\t\"commodo7\": \"<string>\",\n\t\t\"essea4\": \"<string>\",\n\t\t\"qui_f5c\": \"<string>\",\n\t\t\"dolor693\": \"<string>\",\n\t\t\"adipisicing0\": \"<string>\",\n\t\t\"officia_5\": \"<string>\",\n\t\t\"velit_e1\": \"<string>\",\n\t\t\"id9ce\": \"<string>\",\n\t\t\"mollitf3\": \"<string>\",\n\t\t\"reprehenderit250\": \"<string>\",\n\t\t\"ullamco80\": \"<string>\",\n\t\t\"cupidatat_720\": \"<string>\",\n\t\t\"voluptated7\": \"<string>\",\n\t\t\"autef5d\": \"<string>\",\n\t\t\"commodo_8\": \"<string>\",\n\t\t\"minim9\": \"<string>\",\n\t\t\"laborum_65\": \"<string>\",\n\t\t\"incididunt_bf1\": \"<string>\",\n\t\t\"culpa_0c\": \"<string>\",\n\t\t\"officia_cb\": \"<string>\",\n\t\t\"irurea2e\": \"<string>\",\n\t\t\"consequat_b3\": \"<string>\",\n\t\t\"culpa_c\": \"<string>\",\n\t\t\"tempor_2a\": \"<string>\",\n\t\t\"euc\": \"<string>\",\n\t\t\"nulla7\": \"<string>\",\n\t\t\"nisi_425\": \"<string>\",\n\t\t\"in192\": \"<string>\",\n\t\t\"pariatur3\": \"<string>\",\n\t\t\"adipisicing7\": \"<string>\",\n\t\t\"amet3_7\": \"<string>\",\n\t\t\"pariatur_2_b\": \"<string>\",\n\t\t\"ut6f\": \"<string>\",\n\t\t\"non1\": \"<string>\",\n\t\t\"sed_31\": \"<string>\",\n\t\t\"enim1\": \"<string>\",\n\t\t\"sint_da4\": \"<string>\",\n\t\t\"voluptate_b\": \"<string>\",\n\t\t\"ad7e9\": \"<string>\",\n\t\t\"pariatur_93\": \"<string>\",\n\t\t\"enim_c\": \"<string>\",\n\t\t\"Excepteur_ac7\": \"<string>\",\n\t\t\"eiusmod_a9\": \"<string>\",\n\t\t\"dolore_ef\": \"<string>\",\n\t\t\"incididunte7\": \"<string>\",\n\t\t\"sed_e7\": \"<string>\",\n\t\t\"est_ce5\": \"<string>\",\n\t\t\"ind1\": \"<string>\",\n\t\t\"sunt_07\": \"<string>\",\n\t\t\"dolore_9\": \"<string>\",\n\t\t\"sit_6\": \"<string>\",\n\t\t\"incididunt_0d\": \"<string>\",\n\t\t\"officia0b1\": \"<string>\",\n\t\t\"labore6\": \"<string>\",\n\t\t\"sed_536\": \"<string>\",\n\t\t\"Ut_3\": \"<string>\",\n\t\t\"est_3\": \"<string>\",\n\t\t\"reprehenderit8e\": \"<string>\",\n\t\t\"Excepteur__2d\": \"<string>\",\n\t\t\"sunt5ec\": \"<string>\",\n\t\t\"reprehenderit_33\": \"<string>\",\n\t\t\"velit_b8d\": \"<string>\",\n\t\t\"eiusmod5\": \"<string>\",\n\t\t\"consectetur_7\": \"<string>\",\n\t\t\"nulla_baa\": \"<string>\",\n\t\t\"officia_4b1\": \"<string>\",\n\t\t\"ex_6e4\": \"<string>\",\n\t\t\"doc\": \"<string>\",\n\t\t\"exercitationc\": \"<string>\",\n\t\t\"doloree34\": \"<string>\",\n\t\t\"dof7\": \"<string>\",\n\t\t\"magnaddb\": \"<string>\",\n\t\t\"sunt_a\": \"<string>\",\n\t\t\"in_a5\": \"<string>\",\n\t\t\"aliquip_fb\": \"<string>\",\n\t\t\"Utf4\": \"<string>\",\n\t\t\"ipsum_eb\": \"<string>\",\n\t\t\"dolor_fa\": \"<string>\",\n\t\t\"ind\": \"<string>\",\n\t\t\"nulla_1\": \"<string>\",\n\t\t\"in_d_9\": \"<string>\",\n\t\t\"Duis_382\": \"<string>\",\n\t\t\"nulla_3\": \"<string>\",\n\t\t\"sunt_a1\": \"<string>\",\n\t\t\"irure75\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"ad_72\": \"<string>\",\n\t\t\"Lorem_ee\": \"<string>\",\n\t\t\"dolor_b_\": \"<string>\",\n\t\t\"et908\": \"<string>\",\n\t\t\"qui2\": \"<string>\",\n\t\t\"adipisicing0e3\": \"<string>\",\n\t\t\"Duis_735\": \"<string>\",\n\t\t\"elit_3cb\": \"<string>\",\n\t\t\"adipisicing5\": \"<string>\",\n\t\t\"Duis8\": \"<string>\",\n\t\t\"esse_7\": \"<string>\",\n\t\t\"ullamco2\": \"<string>\",\n\t\t\"enim69\": \"<string>\",\n\t\t\"fugiat_7\": \"<string>\",\n\t\t\"deserunt1\": \"<string>\",\n\t\t\"adipisicing_44\": \"<string>\",\n\t\t\"enim_09e\": \"<string>\",\n\t\t\"ullamco83\": \"<string>\",\n\t\t\"Duis21c\": \"<string>\",\n\t\t\"ine\": \"<string>\",\n\t\t\"in_5_\": \"<string>\",\n\t\t\"esse793\": \"<string>\",\n\t\t\"labore_9e\": \"<string>\",\n\t\t\"esse_87\": \"<string>\",\n\t\t\"eteb8\": \"<string>\",\n\t\t\"eac\": \"<string>\",\n\t\t\"consectetur75\": \"<string>\",\n\t\t\"in_5f\": \"<string>\",\n\t\t\"minim_6a\": \"<string>\",\n\t\t\"elit3a5\": \"<string>\",\n\t\t\"eu_3_3\": \"<string>\",\n\t\t\"in8\": \"<string>\",\n\t\t\"veniam0\": \"<string>\",\n\t\t\"amet_05\": \"<string>\",\n\t\t\"mollitf\": \"<string>\",\n\t\t\"Duis5\": \"<string>\",\n\t\t\"velit_2\": \"<string>\",\n\t\t\"aliquip5\": \"<string>\",\n\t\t\"sed7\": \"<string>\",\n\t\t\"occaecat_394\": \"<string>\",\n\t\t\"Lorem_1_\": \"<string>\",\n\t\t\"adipisicing66a\": \"<string>\",\n\t\t\"labore_ba\": \"<string>\",\n\t\t\"culpa_35\": \"<string>\",\n\t\t\"labore_5d\": \"<string>\",\n\t\t\"do_98\": \"<string>\",\n\t\t\"eu0f\": \"<string>\",\n\t\t\"aliquip_7\": \"<string>\",\n\t\t\"nullac5\": \"<string>\",\n\t\t\"elit__3\": \"<string>\",\n\t\t\"dolor_52f\": \"<string>\",\n\t\t\"enim__8_\": \"<string>\",\n\t\t\"sunt_4be\": \"<string>\",\n\t\t\"dolore_05\": \"<string>\",\n\t\t\"officia9f\": \"<string>\",\n\t\t\"consequatf54\": \"<string>\",\n\t\t\"consecteturc28\": \"<string>\",\n\t\t\"deserunt7\": \"<string>\",\n\t\t\"nostrud_7\": \"<string>\",\n\t\t\"auteeb2\": \"<string>\",\n\t\t\"in_25\": \"<string>\",\n\t\t\"aliquip_4_\": \"<string>\",\n\t\t\"Excepteur3d\": \"<string>\",\n\t\t\"Ut6e\": \"<string>\",\n\t\t\"veniam_925\": \"<string>\",\n\t\t\"est_c9c\": \"<string>\",\n\t\t\"consectetur_9a5\": \"<string>\",\n\t\t\"non_2\": \"<string>\",\n\t\t\"qui_127\": \"<string>\",\n\t\t\"Duis1c1\": \"<string>\",\n\t\t\"culpa_4ff\": \"<string>\",\n\t\t\"sunt_40\": \"<string>\",\n\t\t\"commododf\": \"<string>\",\n\t\t\"in_82\": \"<string>\",\n\t\t\"nonfa\": \"<string>\",\n\t\t\"dolor_b\": \"<string>\",\n\t\t\"quis_1\": \"<string>\",\n\t\t\"in738\": \"<string>\",\n\t\t\"cupidatat_30_\": \"<string>\",\n\t\t\"velita\": \"<string>\",\n\t\t\"culpa_8dc\": \"<string>\",\n\t\t\"mollitcf\": \"<string>\",\n\t\t\"sunt2\": \"<string>\",\n\t\t\"ea6\": \"<string>\",\n\t\t\"esse_d8\": \"<string>\",\n\t\t\"in_fe\": \"<string>\",\n\t\t\"sit_\": \"<string>\",\n\t\t\"exercitatione\": \"<string>\",\n\t\t\"in_1_\": \"<string>\",\n\t\t\"incididunt5\": \"<string>\",\n\t\t\"id_9\": \"<string>\",\n\t\t\"irure_6\": \"<string>\",\n\t\t\"nisi168\": \"<string>\",\n\t\t\"deserunt_\": \"<string>\",\n\t\t\"reprehenderit53\": \"<string>\",\n\t\t\"ad_e\": \"<string>\",\n\t\t\"nullaa\": \"<string>\",\n\t\t\"qui3\": \"<string>\",\n\t\t\"fugiata73\": \"<string>\",\n\t\t\"animd5\": \"<string>\",\n\t\t\"sunt659\": \"<string>\",\n\t\t\"dolore_6a\": \"<string>\",\n\t\t\"ut_ef7\": \"<string>\",\n\t\t\"exercitation_6\": \"<string>\",\n\t\t\"quis_0\": \"<string>\",\n\t\t\"ullamco33\": \"<string>\",\n\t\t\"culpa_2\": \"<string>\",\n\t\t\"consectetur_590\": \"<string>\",\n\t\t\"officia_e23\": \"<string>\",\n\t\t\"est_c\": \"<string>\",\n\t\t\"velit0ac\": \"<string>\",\n\t\t\"consequat_4d9\": \"<string>\",\n\t\t\"sint__\": \"<string>\",\n\t\t\"velitad\": \"<string>\",\n\t\t\"eu_57\": \"<string>\",\n\t\t\"cupidatat__b4\": \"<string>\",\n\t\t\"cupidatat_109\": \"<string>\",\n\t\t\"enim_6f4\": \"<string>\",\n\t\t\"nulla3e1\": \"<string>\",\n\t\t\"nisi48\": \"<string>\",\n\t\t\"cilluma\": \"<string>\",\n\t\t\"voluptate6\": \"<string>\",\n\t\t\"voluptate_e35\": \"<string>\",\n\t\t\"Excepteur6\": \"<string>\",\n\t\t\"eiusmod_168\": \"<string>\",\n\t\t\"doc08\": \"<string>\",\n\t\t\"do_a40\": \"<string>\",\n\t\t\"in_7b\": \"<string>\",\n\t\t\"qui_4d\": \"<string>\",\n\t\t\"aliquaa\": \"<string>\",\n\t\t\"in_7c\": \"<string>\",\n\t\t\"occaecat6\": \"<string>\",\n\t\t\"incididunt__7\": \"<string>\",\n\t\t\"dolore_359\": \"<string>\",\n\t\t\"deserunt68f\": \"<string>\",\n\t\t\"qui_76_\": \"<string>\",\n\t\t\"occaecata0a\": \"<string>\",\n\t\t\"minim_1_a\": \"<string>\",\n\t\t\"ut_02\": \"<string>\",\n\t\t\"deserunt_e\": \"<string>\",\n\t\t\"in__\": \"<string>\",\n\t\t\"sinte\": \"<string>\",\n\t\t\"consectetur_42c\": \"<string>\",\n\t\t\"qui_d\": \"<string>\",\n\t\t\"occaecat_4\": \"<string>\",\n\t\t\"commodo70e\": \"<string>\",\n\t\t\"mollitf1c\": \"<string>\",\n\t\t\"labore2\": \"<string>\",\n\t\t\"nostrud_2\": \"<string>\",\n\t\t\"eu__0\": \"<string>\",\n\t\t\"fugiat02\": \"<string>\",\n\t\t\"dolore__2\": \"<string>\",\n\t\t\"dolor841\": \"<string>\",\n\t\t\"pariatur863\": \"<string>\",\n\t\t\"dolore4\": \"<string>\",\n\t\t\"laborum_71_\": \"<string>\",\n\t\t\"incididunt0\": \"<string>\",\n\t\t\"doloref\": \"<string>\",\n\t\t\"aute_2\": \"<string>\",\n\t\t\"dolore_8d2\": \"<string>\",\n\t\t\"quis_e94\": \"<string>\",\n\t\t\"voluptatec\": \"<string>\",\n\t\t\"et0\": \"<string>\",\n\t\t\"in_55\": \"<string>\",\n\t\t\"Lorem_44_\": \"<string>\",\n\t\t\"nostrud_c6\": \"<string>\",\n\t\t\"Loremae\": \"<string>\",\n\t\t\"minim_7\": \"<string>\",\n\t\t\"sed06\": \"<string>\",\n\t\t\"ipsum6\": \"<string>\",\n\t\t\"dof3a\": \"<string>\",\n\t\t\"laboris73\": \"<string>\",\n\t\t\"magna_0c_\": \"<string>\",\n\t\t\"pariatur_edb\": \"<string>\",\n\t\t\"sunt_b77\": \"<string>\",\n\t\t\"cillum_78\": \"<string>\",\n\t\t\"reprehenderit_5\": \"<string>\",\n\t\t\"do_182\": \"<string>\",\n\t\t\"voluptate_9\": \"<string>\",\n\t\t\"tempor_48\": \"<string>\",\n\t\t\"aute2e5\": \"<string>\",\n\t\t\"sedb7b\": \"<string>\",\n\t\t\"consectetur6\": \"<string>\",\n\t\t\"in_6af\": \"<string>\",\n\t\t\"laboris_f2d\": \"<string>\",\n\t\t\"incididunt9\": \"<string>\",\n\t\t\"ad63\": \"<string>\",\n\t\t\"tempor_2ab\": \"<string>\",\n\t\t\"sunt09\": \"<string>\",\n\t\t\"eu5f\": \"<string>\",\n\t\t\"qui__\": \"<string>\",\n\t\t\"ullamco4\": \"<string>\",\n\t\t\"reprehenderit77\": \"<string>\",\n\t\t\"incididuntb\": \"<string>\",\n\t\t\"ex52a\": \"<string>\",\n\t\t\"ut_b\": \"<string>\",\n\t\t\"consecteturb\": \"<string>\",\n\t\t\"voluptated0\": \"<string>\",\n\t\t\"laborum_a_\": \"<string>\",\n\t\t\"laboris87\": \"<string>\",\n\t\t\"irure03\": \"<string>\",\n\t\t\"reprehenderit1\": \"<string>\",\n\t\t\"eiusmod_4\": \"<string>\",\n\t\t\"voluptated5e\": \"<string>\",\n\t\t\"dolor02\": \"<string>\",\n\t\t\"dolor1e1\": \"<string>\",\n\t\t\"cupidatat83\": \"<string>\",\n\t\t\"nulla_a\": \"<string>\",\n\t\t\"irure_851\": \"<string>\",\n\t\t\"deserunt06\": \"<string>\",\n\t\t\"labore7\": \"<string>\",\n\t\t\"adipisicingd4\": \"<string>\",\n\t\t\"esse_1\": \"<string>\",\n\t\t\"officia_032\": \"<string>\",\n\t\t\"ine1\": \"<string>\",\n\t\t\"nulla_dd\": \"<string>\",\n\t\t\"esse8\": \"<string>\",\n\t\t\"dolor_5f\": \"<string>\",\n\t\t\"in7\": \"<string>\",\n\t\t\"animc34\": \"<string>\",\n\t\t\"occaecatc\": \"<string>\",\n\t\t\"reprehenderit_7cc\": \"<string>\",\n\t\t\"qui_c51\": \"<string>\",\n\t\t\"consectetura\": \"<string>\",\n\t\t\"nisi7c2\": \"<string>\",\n\t\t\"velitd2b\": \"<string>\",\n\t\t\"aliqua_86\": \"<string>\",\n\t\t\"cupidatat25\": \"<string>\",\n\t\t\"Duis_c1\": \"<string>\",\n\t\t\"consectetur_ef2\": \"<string>\",\n\t\t\"fugiat_5be\": \"<string>\",\n\t\t\"deserunt7aa\": \"<string>\",\n\t\t\"velit_65\": \"<string>\",\n\t\t\"sit04\": \"<string>\",\n\t\t\"sint_c9\": \"<string>\",\n\t\t\"aliquab\": \"<string>\",\n\t\t\"dolore_97\": \"<string>\",\n\t\t\"dolorec9\": \"<string>\",\n\t\t\"culpa_70\": \"<string>\",\n\t\t\"esse_f8c\": \"<string>\",\n\t\t\"dolore2_\": \"<string>\",\n\t\t\"etbe\": \"<string>\",\n\t\t\"commodo70\": \"<string>\",\n\t\t\"laborum06\": \"<string>\",\n\t\t\"ea_b\": \"<string>\",\n\t\t\"proident42\": \"<string>\",\n\t\t\"dolore6\": \"<string>\",\n\t\t\"esse3ac\": \"<string>\",\n\t\t\"ad_39d\": \"<string>\",\n\t\t\"ine15\": \"<string>\",\n\t\t\"ut_4_\": \"<string>\",\n\t\t\"dolore74\": \"<string>\",\n\t\t\"laboris_43\": \"<string>\",\n\t\t\"dolore__eb\": \"<string>\",\n\t\t\"laborum_0bb\": \"<string>\",\n\t\t\"elit_5f\": \"<string>\",\n\t\t\"aute7\": \"<string>\",\n\t\t\"sit_3d\": \"<string>\",\n\t\t\"adipisicing_78\": \"<string>\",\n\t\t\"esse94\": \"<string>\",\n\t\t\"voluptate_421\": \"<string>\",\n\t\t\"ullamcofa\": \"<string>\",\n\t\t\"eu_b5\": \"<string>\",\n\t\t\"pariatur801\": \"<string>\",\n\t\t\"nostrud_94\": \"<string>\",\n\t\t\"eiusmodb\": \"<string>\",\n\t\t\"ullamco_f7\": \"<string>\",\n\t\t\"elit5d6\": \"<string>\",\n\t\t\"ina\": \"<string>\",\n\t\t\"Ut0\": \"<string>\",\n\t\t\"nisi_a_\": \"<string>\",\n\t\t\"officia9_\": \"<string>\",\n\t\t\"eu_4\": \"<string>\",\n\t\t\"deserunt5\": \"<string>\",\n\t\t\"velit3\": \"<string>\",\n\t\t\"aliquip985\": \"<string>\",\n\t\t\"non4e2\": \"<string>\",\n\t\t\"consequat_f72\": \"<string>\",\n\t\t\"enim_4\": \"<string>\",\n\t\t\"anim9f6\": \"<string>\",\n\t\t\"in_4\": \"<string>\",\n\t\t\"magna_49a\": \"<string>\",\n\t\t\"ipsum314\": \"<string>\",\n\t\t\"aliquip_f\": \"<string>\",\n\t\t\"veniam_7b\": \"<string>\",\n\t\t\"cillum_34\": \"<string>\",\n\t\t\"dolor4b\": \"<string>\",\n\t\t\"in_e87\": \"<string>\",\n\t\t\"consequat91\": \"<string>\",\n\t\t\"elit_1\": \"<string>\",\n\t\t\"autedc\": \"<string>\",\n\t\t\"amet_3\": \"<string>\",\n\t\t\"in_d0\": \"<string>\",\n\t\t\"consectetur_b4\": \"<string>\",\n\t\t\"voluptate2b\": \"<string>\",\n\t\t\"proident_e\": \"<string>\",\n\t\t\"occaecate\": \"<string>\",\n\t\t\"dolore_\": \"<string>\",\n\t\t\"dolor_8\": \"<string>\",\n\t\t\"do90\": \"<string>\",\n\t\t\"voluptatedf1\": \"<string>\",\n\t\t\"mollit_\": \"<string>\",\n\t\t\"nulla_4\": \"<string>\",\n\t\t\"ut5\": \"<string>\",\n\t\t\"sed_2\": \"<string>\",\n\t\t\"veniam_71e\": \"<string>\",\n\t\t\"ad4\": \"<string>\",\n\t\t\"consequat091\": \"<string>\",\n\t\t\"in_c6\": \"<string>\",\n\t\t\"ex_1c\": \"<string>\",\n\t\t\"ut_486\": \"<string>\",\n\t\t\"nostrud8\": \"<string>\",\n\t\t\"minim24b\": \"<string>\",\n\t\t\"dolore_7\": \"<string>\",\n\t\t\"est96\": \"<string>\",\n\t\t\"sint_1\": \"<string>\",\n\t\t\"amet_5_\": \"<string>\",\n\t\t\"eiusmod6_\": \"<string>\",\n\t\t\"sed_26\": \"<string>\",\n\t\t\"ipsum_1d\": \"<string>\",\n\t\t\"consequat__\": \"<string>\",\n\t\t\"commodo3\": \"<string>\",\n\t\t\"consequat6a\": \"<string>\",\n\t\t\"eu_3\": \"<string>\",\n\t\t\"voluptate_ba\": \"<string>\",\n\t\t\"dolore_7_0\": \"<string>\",\n\t\t\"Excepteur2\": \"<string>\",\n\t\t\"Excepteurc1\": \"<string>\",\n\t\t\"ad8_5\": \"<string>\",\n\t\t\"exercitation_0\": \"<string>\",\n\t\t\"idf\": \"<string>\",\n\t\t\"irure_be\": \"<string>\",\n\t\t\"dolore9\": \"<string>\",\n\t\t\"magna751\": \"<string>\",\n\t\t\"mollit7\": \"<string>\",\n\t\t\"ullamco_69e\": \"<string>\",\n\t\t\"voluptate13\": \"<string>\",\n\t\t\"Ut6a_\": \"<string>\",\n\t\t\"enim_ef\": \"<string>\",\n\t\t\"enim_1ec\": \"<string>\",\n\t\t\"commodo__5\": \"<string>\",\n\t\t\"estba2\": \"<string>\",\n\t\t\"aute7b3\": \"<string>\",\n\t\t\"proident_4\": \"<string>\",\n\t\t\"ad330\": \"<string>\",\n\t\t\"magna4\": \"<string>\",\n\t\t\"cillumfa\": \"<string>\",\n\t\t\"dolore_59\": \"<string>\",\n\t\t\"adipisicing8\": \"<string>\",\n\t\t\"dolor_0\": \"<string>\",\n\t\t\"cupidatat75\": \"<string>\",\n\t\t\"amet3_\": \"<string>\",\n\t\t\"pariatur_375\": \"<string>\",\n\t\t\"culpa_c5\": \"<string>\",\n\t\t\"ut_e\": \"<string>\",\n\t\t\"Ut_9\": \"<string>\",\n\t\t\"exercitation_60d\": \"<string>\",\n\t\t\"pariatur_2\": \"<string>\",\n\t\t\"Ute7\": \"<string>\",\n\t\t\"quis2b\": \"<string>\",\n\t\t\"sintf3\": \"<string>\",\n\t\t\"culpa_896\": \"<string>\",\n\t\t\"dolor39d\": \"<string>\",\n\t\t\"elit_9\": \"<string>\",\n\t\t\"sit_595\": \"<string>\",\n\t\t\"magna91\": \"<string>\",\n\t\t\"commodo_8a\": \"<string>\",\n\t\t\"aute075\": \"<string>\",\n\t\t\"mollitd19\": \"<string>\",\n\t\t\"ada27\": \"<string>\",\n\t\t\"enim_19\": \"<string>\",\n\t\t\"sedc\": \"<string>\",\n\t\t\"ut74\": \"<string>\",\n\t\t\"ullamco_7\": \"<string>\",\n\t\t\"eta2b\": \"<string>\",\n\t\t\"sit92\": \"<string>\",\n\t\t\"Lorema1\": \"<string>\",\n\t\t\"consequatc\": \"<string>\",\n\t\t\"ipsum_\": \"<string>\",\n\t\t\"cillum_8\": \"<string>\",\n\t\t\"labore7d7\": \"<string>\",\n\t\t\"velit_7\": \"<string>\",\n\t\t\"cupidatat_d_\": \"<string>\",\n\t\t\"quis_e82\": \"<string>\",\n\t\t\"occaecat18b\": \"<string>\",\n\t\t\"voluptatee19\": \"<string>\",\n\t\t\"est_8a\": \"<string>\",\n\t\t\"adipisicingcf9\": \"<string>\",\n\t\t\"esse_2bf\": \"<string>\",\n\t\t\"laboris_9d\": \"<string>\",\n\t\t\"aute_b_8\": \"<string>\",\n\t\t\"ex_5\": \"<string>\",\n\t\t\"dolor4\": \"<string>\",\n\t\t\"Excepteur_7e9\": \"<string>\",\n\t\t\"consequat381\": \"<string>\",\n\t\t\"aliqua0\": \"<string>\",\n\t\t\"voluptate_89\": \"<string>\",\n\t\t\"nisi_9_7\": \"<string>\",\n\t\t\"tempor5\": \"<string>\",\n\t\t\"et_25\": \"<string>\",\n\t\t\"laborum_6ce\": \"<string>\",\n\t\t\"aliquip6c\": \"<string>\",\n\t\t\"ipsumac\": \"<string>\",\n\t\t\"aute__\": \"<string>\",\n\t\t\"mollit97c\": \"<string>\",\n\t\t\"nisi_77d\": \"<string>\",\n\t\t\"ipsumcd4\": \"<string>\",\n\t\t\"anim87_\": \"<string>\",\n\t\t\"ipsum_3\": \"<string>\",\n\t\t\"quis1\": \"<string>\",\n\t\t\"Duis_6a5\": \"<string>\",\n\t\t\"minim__\": \"<string>\",\n\t\t\"occaecat46f\": \"<string>\",\n\t\t\"dolorf85\": \"<string>\",\n\t\t\"ut_3ef\": \"<string>\",\n\t\t\"fugiat_dd\": \"<string>\",\n\t\t\"pariatur6cb\": \"<string>\",\n\t\t\"aliquip_152\": \"<string>\",\n\t\t\"occaecat7\": \"<string>\",\n\t\t\"ad_4\": \"<string>\",\n\t\t\"sunt_d11\": \"<string>\",\n\t\t\"nonb\": \"<string>\",\n\t\t\"incididunt_7_\": \"<string>\",\n\t\t\"incididunt_9e\": \"<string>\",\n\t\t\"enimc2a\": \"<string>\",\n\t\t\"et_7\": \"<string>\",\n\t\t\"magna72\": \"<string>\",\n\t\t\"Excepteur_\": \"<string>\",\n\t\t\"elit_459\": \"<string>\",\n\t\t\"adipisicing296\": \"<string>\",\n\t\t\"sint8\": \"<string>\",\n\t\t\"ut0\": \"<string>\",\n\t\t\"aliqua_333\": \"<string>\",\n\t\t\"fugiat253\": \"<string>\",\n\t\t\"nostrud_99\": \"<string>\",\n\t\t\"occaecat_06\": \"<string>\",\n\t\t\"amete_7\": \"<string>\",\n\t\t\"voluptate_e8\": \"<string>\",\n\t\t\"ullamcof\": \"<string>\",\n\t\t\"eu_9\": \"<string>\",\n\t\t\"Excepteur_52\": \"<string>\",\n\t\t\"dolor43\": \"<string>\",\n\t\t\"qui7\": \"<string>\",\n\t\t\"officia__c6\": \"<string>\",\n\t\t\"est1\": \"<string>\",\n\t\t\"irure1f\": \"<string>\",\n\t\t\"tempor_0\": \"<string>\",\n\t\t\"est41\": \"<string>\",\n\t\t\"eiusmod97e\": \"<string>\",\n\t\t\"ut_3\": \"<string>\",\n\t\t\"adf\": \"<string>\",\n\t\t\"est_5c\": \"<string>\",\n\t\t\"adipisicing_02e\": \"<string>\",\n\t\t\"consectetur__\": \"<string>\",\n\t\t\"aute33\": \"<string>\",\n\t\t\"reprehenderit03\": \"<string>\",\n\t\t\"laborum_2f\": \"<string>\",\n\t\t\"magna8\": \"<string>\",\n\t\t\"elit21\": \"<string>\",\n\t\t\"cupidatat_3d\": \"<string>\",\n\t\t\"sint_3e6\": \"<string>\",\n\t\t\"et_b\": \"<string>\",\n\t\t\"culpa_3b4\": \"<string>\",\n\t\t\"ipsum__5a\": \"<string>\",\n\t\t\"in_dcb\": \"<string>\",\n\t\t\"Lorem_a\": \"<string>\",\n\t\t\"eaab\": \"<string>\",\n\t\t\"Duis_b\": \"<string>\",\n\t\t\"velit_5\": \"<string>\",\n\t\t\"laborum_fe9\": \"<string>\",\n\t\t\"tempor69\": \"<string>\",\n\t\t\"laborisb\": \"<string>\",\n\t\t\"eiusmod96\": \"<string>\",\n\t\t\"fugiat_\": \"<string>\",\n\t\t\"velit1\": \"<string>\",\n\t\t\"enimae3\": \"<string>\",\n\t\t\"eiusmod_be\": \"<string>\",\n\t\t\"proidenta\": \"<string>\",\n\t\t\"enim805\": \"<string>\",\n\t\t\"anim_f\": \"<string>\",\n\t\t\"eu_f7\": \"<string>\",\n\t\t\"velit23\": \"<string>\",\n\t\t\"eiusmodd_\": \"<string>\",\n\t\t\"adipisicingebc\": \"<string>\",\n\t\t\"aliquip_21\": \"<string>\",\n\t\t\"consecteturfa\": \"<string>\",\n\t\t\"et3__\": \"<string>\",\n\t\t\"Duis_818\": \"<string>\",\n\t\t\"Excepteur_2\": \"<string>\",\n\t\t\"consecteture\": \"<string>\",\n\t\t\"culpa72\": \"<string>\",\n\t\t\"incididunt_f5c\": \"<string>\",\n\t\t\"veniam_667\": \"<string>\",\n\t\t\"fugiata\": \"<string>\",\n\t\t\"quis_486\": \"<string>\",\n\t\t\"Excepteur_96\": \"<string>\",\n\t\t\"proident__0\": \"<string>\",\n\t\t\"do_f0b\": \"<string>\",\n\t\t\"docc\": \"<string>\",\n\t\t\"est_6af\": \"<string>\",\n\t\t\"eaf8d\": \"<string>\",\n\t\t\"enim7\": \"<string>\",\n\t\t\"sit_8\": \"<string>\",\n\t\t\"exercitation1\": \"<string>\",\n\t\t\"minim3\": \"<string>\",\n\t\t\"cillum_3c3\": \"<string>\",\n\t\t\"incididunt6ef\": \"<string>\",\n\t\t\"minim4b\": \"<string>\",\n\t\t\"in1_\": \"<string>\",\n\t\t\"exercitation6\": \"<string>\",\n\t\t\"commodo_5a9\": \"<string>\",\n\t\t\"enim9a\": \"<string>\",\n\t\t\"dolor9_\": \"<string>\",\n\t\t\"suntc\": \"<string>\",\n\t\t\"aliquip_01\": \"<string>\",\n\t\t\"quis_8\": \"<string>\",\n\t\t\"commodo_ae\": \"<string>\",\n\t\t\"non1e\": \"<string>\",\n\t\t\"magna56f\": \"<string>\",\n\t\t\"dolorc\": \"<string>\",\n\t\t\"nisi__\": \"<string>\",\n\t\t\"dolor_d_\": \"<string>\",\n\t\t\"eu5\": \"<string>\",\n\t\t\"nulla_f\": \"<string>\",\n\t\t\"utb3a\": \"<string>\",\n\t\t\"adipisicing_4\": \"<string>\",\n\t\t\"anim_6e5\": \"<string>\",\n\t\t\"mollit54\": \"<string>\",\n\t\t\"Excepteur_58\": \"<string>\",\n\t\t\"aliquip_63\": \"<string>\",\n\t\t\"Ut1\": \"<string>\",\n\t\t\"exercitation_1\": \"<string>\",\n\t\t\"dolor_0_\": \"<string>\",\n\t\t\"aliqua_e\": \"<string>\",\n\t\t\"quisd91\": \"<string>\",\n\t\t\"quisb\": \"<string>\",\n\t\t\"exb\": \"<string>\",\n\t\t\"fugiat4e6\": \"<string>\",\n\t\t\"minim_2ff\": \"<string>\",\n\t\t\"ut78d\": \"<string>\",\n\t\t\"in6\": \"<string>\",\n\t\t\"irure_84\": \"<string>\",\n\t\t\"Lorem_59\": \"<string>\",\n\t\t\"sit1\": \"<string>\",\n\t\t\"quis_932\": \"<string>\",\n\t\t\"occaecat_2\": \"<string>\",\n\t\t\"reprehenderit_d3\": \"<string>\",\n\t\t\"aute0\": \"<string>\",\n\t\t\"anim__5e\": \"<string>\",\n\t\t\"magna_2e4\": \"<string>\",\n\t\t\"ipsum_b_5\": \"<string>\",\n\t\t\"irure51\": \"<string>\",\n\t\t\"Duis5e3\": \"<string>\",\n\t\t\"adipisicing_c49\": \"<string>\",\n\t\t\"officia4_\": \"<string>\",\n\t\t\"reprehenderit_fc0\": \"<string>\",\n\t\t\"anim_2\": \"<string>\",\n\t\t\"aliqua_\": \"<string>\",\n\t\t\"ea24\": \"<string>\",\n\t\t\"Excepteurbd8\": \"<string>\",\n\t\t\"occaecat_d9f\": \"<string>\",\n\t\t\"enim0a\": \"<string>\",\n\t\t\"eud\": \"<string>\",\n\t\t\"inf\": \"<string>\",\n\t\t\"amet_c__\": \"<string>\",\n\t\t\"deseruntf\": \"<string>\",\n\t\t\"ad17\": \"<string>\",\n\t\t\"Excepteur_3ff\": \"<string>\",\n\t\t\"aute_4\": \"<string>\",\n\t\t\"ipsum_daa\": \"<string>\",\n\t\t\"qui_8\": \"<string>\",\n\t\t\"laborebc3\": \"<string>\",\n\t\t\"ipsum_6\": \"<string>\",\n\t\t\"Duiscb\": \"<string>\",\n\t\t\"dolore2\": \"<string>\",\n\t\t\"adipisicing72c\": \"<string>\",\n\t\t\"mollit53f\": \"<string>\",\n\t\t\"sunt_9\": \"<string>\",\n\t\t\"non__f\": \"<string>\",\n\t\t\"ex3\": \"<string>\",\n\t\t\"ullamco_b94\": \"<string>\",\n\t\t\"eiusmod_dc\": \"<string>\",\n\t\t\"exercitation_4\": \"<string>\",\n\t\t\"occaecat_384\": \"<string>\",\n\t\t\"minime\": \"<string>\",\n\t\t\"anim37c\": \"<string>\",\n\t\t\"reprehenderit_7a\": \"<string>\",\n\t\t\"consectetur_f\": \"<string>\",\n\t\t\"ullamco6\": \"<string>\",\n\t\t\"veniam_933\": \"<string>\",\n\t\t\"sintb4\": \"<string>\",\n\t\t\"aliqua_d9\": \"<string>\",\n\t\t\"officiaa\": \"<string>\",\n\t\t\"commodo_a\": \"<string>\",\n\t\t\"dob\": \"<string>\",\n\t\t\"aliqua_20b\": \"<string>\",\n\t\t\"reprehenderit_3e\": \"<string>\",\n\t\t\"aliqua_d85\": \"<string>\",\n\t\t\"ut_23\": \"<string>\",\n\t\t\"dolor_d51\": \"<string>\",\n\t\t\"eu_58d\": \"<string>\",\n\t\t\"deserunt_6\": \"<string>\",\n\t\t\"et__\": \"<string>\",\n\t\t\"quis_081\": \"<string>\",\n\t\t\"Ut_4\": \"<string>\",\n\t\t\"inb7\": \"<string>\",\n\t\t\"est_72\": \"<string>\",\n\t\t\"occaecat_6\": \"<string>\",\n\t\t\"Duis_5c5\": \"<string>\",\n\t\t\"consequat_44f\": \"<string>\",\n\t\t\"Ut0b2\": \"<string>\",\n\t\t\"nostrud_0\": \"<string>\",\n\t\t\"aute9\": \"<string>\",\n\t\t\"cupidatat92b\": \"<string>\",\n\t\t\"ipsum_d\": \"<string>\",\n\t\t\"amet8\": \"<string>\",\n\t\t\"elit__d9\": \"<string>\",\n\t\t\"qui8c\": \"<string>\",\n\t\t\"nostrud_cd\": \"<string>\",\n\t\t\"aliquip_88\": \"<string>\",\n\t\t\"id_7c\": \"<string>\",\n\t\t\"sita5\": \"<string>\",\n\t\t\"doa\": \"<string>\",\n\t\t\"pariatur_73e\": \"<string>\",\n\t\t\"sitec\": \"<string>\",\n\t\t\"in_346\": \"<string>\",\n\t\t\"velite8e\": \"<string>\",\n\t\t\"sed_7\": \"<string>\",\n\t\t\"proident__\": \"<string>\",\n\t\t\"ipsum_2f\": \"<string>\",\n\t\t\"nulla43\": \"<string>\",\n\t\t\"nulla_746\": \"<string>\",\n\t\t\"velitbbf\": \"<string>\",\n\t\t\"dolore67\": \"<string>\",\n\t\t\"irure_9f7\": \"<string>\",\n\t\t\"dolor_12\": \"<string>\",\n\t\t\"commodocd2\": \"<string>\",\n\t\t\"id_0aa\": \"<string>\",\n\t\t\"nulla186\": \"<string>\",\n\t\t\"est_45\": \"<string>\",\n\t\t\"veniam_c8_\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all Authentication Providers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/authentication-providers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												"authentication-providers"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of entries",
													"disabled": true
												}
											]
										},
										"description": "Returns a list of all Authentication Providers on your tenant.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_START\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "Authentication Providers retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"clientId\": \"<string>\",\n\t\t\t\"clientSecret\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"redirectUrl\": \"<uri>\",\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"scope\": [\n\t\t\t\t\"openid\",\n\t\t\t\t\"profile\",\n\t\t\t\t\"email\"\n\t\t\t],\n\t\t\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\t\t\"staticRequestParameters\": {\n\t\t\t\t\"deserunt_f\": \"<string>\",\n\t\t\t\t\"non13\": \"<string>\",\n\t\t\t\t\"voluptate_ed\": \"<string>\",\n\t\t\t\t\"elit_f\": \"<string>\",\n\t\t\t\t\"Ut_8\": \"<string>\",\n\t\t\t\t\"deserunt_572\": \"<string>\",\n\t\t\t\t\"ut_\": \"<string>\",\n\t\t\t\t\"qui6\": \"<string>\",\n\t\t\t\t\"aliqua_20\": \"<string>\",\n\t\t\t\t\"quis__\": \"<string>\",\n\t\t\t\t\"do_e4\": \"<string>\",\n\t\t\t\t\"nisidd6\": \"<string>\",\n\t\t\t\t\"irure_f\": \"<string>\",\n\t\t\t\t\"sitd6f\": \"<string>\",\n\t\t\t\t\"dolor74\": \"<string>\",\n\t\t\t\t\"amet748\": \"<string>\",\n\t\t\t\t\"elit83\": \"<string>\",\n\t\t\t\t\"eu_a0e\": \"<string>\",\n\t\t\t\t\"Duis8\": \"<string>\",\n\t\t\t\t\"quie6\": \"<string>\",\n\t\t\t\t\"sint35\": \"<string>\",\n\t\t\t\t\"consectetur7\": \"<string>\",\n\t\t\t\t\"est_768\": \"<string>\",\n\t\t\t\t\"reprehenderit_0c\": \"<string>\",\n\t\t\t\t\"do_9\": \"<string>\",\n\t\t\t\t\"mollit_c\": \"<string>\",\n\t\t\t\t\"etd8\": \"<string>\",\n\t\t\t\t\"Ut_85\": \"<string>\",\n\t\t\t\t\"magna8\": \"<string>\",\n\t\t\t\t\"quis_c\": \"<string>\",\n\t\t\t\t\"Ut_05\": \"<string>\",\n\t\t\t\t\"Excepteur_5\": \"<string>\",\n\t\t\t\t\"eu_405\": \"<string>\",\n\t\t\t\t\"mollit352\": \"<string>\",\n\t\t\t\t\"incididuntf\": \"<string>\",\n\t\t\t\t\"in_33e\": \"<string>\",\n\t\t\t\t\"aliqua45a\": \"<string>\",\n\t\t\t\t\"adipisicing27d\": \"<string>\",\n\t\t\t\t\"Duis_5\": \"<string>\",\n\t\t\t\t\"non3\": \"<string>\",\n\t\t\t\t\"in_e_\": \"<string>\",\n\t\t\t\t\"Excepteur6\": \"<string>\",\n\t\t\t\t\"est_8\": \"<string>\",\n\t\t\t\t\"fugiat0fa\": \"<string>\",\n\t\t\t\t\"ea_8\": \"<string>\",\n\t\t\t\t\"quis5d\": \"<string>\",\n\t\t\t\t\"labore_0e3\": \"<string>\",\n\t\t\t\t\"cupidatat5\": \"<string>\",\n\t\t\t\t\"labore_d\": \"<string>\",\n\t\t\t\t\"sunt36\": \"<string>\",\n\t\t\t\t\"officiad0\": \"<string>\",\n\t\t\t\t\"cillum_b\": \"<string>\",\n\t\t\t\t\"officiab\": \"<string>\",\n\t\t\t\t\"cupidatatc\": \"<string>\",\n\t\t\t\t\"dolore_1\": \"<string>\",\n\t\t\t\t\"officia_bc8\": \"<string>\",\n\t\t\t\t\"magna_0\": \"<string>\",\n\t\t\t\t\"Excepteur7\": \"<string>\",\n\t\t\t\t\"ada_0\": \"<string>\",\n\t\t\t\t\"cupidatat_84f\": \"<string>\",\n\t\t\t\t\"ut_5f\": \"<string>\",\n\t\t\t\t\"dolore_9\": \"<string>\",\n\t\t\t\t\"ut_e_\": \"<string>\",\n\t\t\t\t\"Duis_b\": \"<string>\",\n\t\t\t\t\"et982\": \"<string>\",\n\t\t\t\t\"sed_79\": \"<string>\",\n\t\t\t\t\"amet_2\": \"<string>\",\n\t\t\t\t\"adipisicing_e90\": \"<string>\",\n\t\t\t\t\"inc38\": \"<string>\",\n\t\t\t\t\"dolore__a\": \"<string>\",\n\t\t\t\t\"velita3\": \"<string>\",\n\t\t\t\t\"nisi_b\": \"<string>\",\n\t\t\t\t\"exercitation_d\": \"<string>\",\n\t\t\t\t\"elit782\": \"<string>\",\n\t\t\t\t\"enim_82\": \"<string>\",\n\t\t\t\t\"sunt_9\": \"<string>\",\n\t\t\t\t\"aute8b\": \"<string>\",\n\t\t\t\t\"sed_b\": \"<string>\",\n\t\t\t\t\"in_c\": \"<string>\",\n\t\t\t\t\"sit8e\": \"<string>\",\n\t\t\t\t\"laboreff\": \"<string>\",\n\t\t\t\t\"officia_ebb\": \"<string>\",\n\t\t\t\t\"anim0ae\": \"<string>\",\n\t\t\t\t\"dolor7\": \"<string>\",\n\t\t\t\t\"reprehenderitd_\": \"<string>\",\n\t\t\t\t\"utc\": \"<string>\",\n\t\t\t\t\"culpacb\": \"<string>\",\n\t\t\t\t\"dolord60\": \"<string>\",\n\t\t\t\t\"do_d15\": \"<string>\",\n\t\t\t\t\"consequat_f5\": \"<string>\",\n\t\t\t\t\"in_0dd\": \"<string>\",\n\t\t\t\t\"consequat_8_\": \"<string>\",\n\t\t\t\t\"est_56\": \"<string>\",\n\t\t\t\t\"in_270\": \"<string>\",\n\t\t\t\t\"pariatur__0b\": \"<string>\",\n\t\t\t\t\"eiusmodb\": \"<string>\",\n\t\t\t\t\"id_74\": \"<string>\",\n\t\t\t\t\"nulla_1a\": \"<string>\",\n\t\t\t\t\"elit_6\": \"<string>\",\n\t\t\t\t\"Ut_3\": \"<string>\",\n\t\t\t\t\"sit_d17\": \"<string>\",\n\t\t\t\t\"sed_d\": \"<string>\",\n\t\t\t\t\"ullamco__d\": \"<string>\",\n\t\t\t\t\"est_c\": \"<string>\",\n\t\t\t\t\"id63\": \"<string>\",\n\t\t\t\t\"incididunt_77\": \"<string>\",\n\t\t\t\t\"do2b7\": \"<string>\",\n\t\t\t\t\"Utf\": \"<string>\",\n\t\t\t\t\"voluptate_f8f\": \"<string>\",\n\t\t\t\t\"dolor_2\": \"<string>\",\n\t\t\t\t\"est_2ed\": \"<string>\",\n\t\t\t\t\"nostrud_01\": \"<string>\",\n\t\t\t\t\"ut_2fb\": \"<string>\",\n\t\t\t\t\"velit_f\": \"<string>\",\n\t\t\t\t\"nisi_34c\": \"<string>\",\n\t\t\t\t\"anim_6\": \"<string>\",\n\t\t\t\t\"ipsum_aae\": \"<string>\",\n\t\t\t\t\"minim_15f\": \"<string>\",\n\t\t\t\t\"ea1d1\": \"<string>\",\n\t\t\t\t\"do_1_7\": \"<string>\",\n\t\t\t\t\"dolor_1\": \"<string>\",\n\t\t\t\t\"id_c\": \"<string>\",\n\t\t\t\t\"esse__f9\": \"<string>\",\n\t\t\t\t\"in1\": \"<string>\",\n\t\t\t\t\"Excepteur381\": \"<string>\",\n\t\t\t\t\"nisi5\": \"<string>\",\n\t\t\t\t\"aliqua5\": \"<string>\",\n\t\t\t\t\"consequat_2\": \"<string>\",\n\t\t\t\t\"ea__71\": \"<string>\",\n\t\t\t\t\"Excepteur_ee\": \"<string>\",\n\t\t\t\t\"aliquab5\": \"<string>\",\n\t\t\t\t\"deserunt_1cf\": \"<string>\",\n\t\t\t\t\"in_c2_\": \"<string>\",\n\t\t\t\t\"ad_0\": \"<string>\",\n\t\t\t\t\"proident_4\": \"<string>\",\n\t\t\t\t\"nulla677\": \"<string>\",\n\t\t\t\t\"ullamco_2\": \"<string>\",\n\t\t\t\t\"laborum4\": \"<string>\",\n\t\t\t\t\"nostrud9\": \"<string>\",\n\t\t\t\t\"velit9c\": \"<string>\",\n\t\t\t\t\"deserunt_d_d\": \"<string>\",\n\t\t\t\t\"ad7e\": \"<string>\",\n\t\t\t\t\"ipsum_2\": \"<string>\",\n\t\t\t\t\"do17d\": \"<string>\",\n\t\t\t\t\"Lorem_b_f\": \"<string>\",\n\t\t\t\t\"ipsum_f\": \"<string>\",\n\t\t\t\t\"nulla43\": \"<string>\",\n\t\t\t\t\"ex_6e2\": \"<string>\",\n\t\t\t\t\"ullamco7\": \"<string>\",\n\t\t\t\t\"do_4e\": \"<string>\",\n\t\t\t\t\"nisi_a\": \"<string>\",\n\t\t\t\t\"laboris30a\": \"<string>\",\n\t\t\t\t\"occaecata\": \"<string>\",\n\t\t\t\t\"consectetur5f\": \"<string>\",\n\t\t\t\t\"ut9\": \"<string>\",\n\t\t\t\t\"nulla_f7\": \"<string>\",\n\t\t\t\t\"cillum__\": \"<string>\",\n\t\t\t\t\"amet_3\": \"<string>\",\n\t\t\t\t\"utda\": \"<string>\",\n\t\t\t\t\"ex0f\": \"<string>\",\n\t\t\t\t\"ullamco_937\": \"<string>\",\n\t\t\t\t\"ullamco23\": \"<string>\",\n\t\t\t\t\"aliquip_\": \"<string>\",\n\t\t\t\t\"eu_30\": \"<string>\",\n\t\t\t\t\"ad_e\": \"<string>\",\n\t\t\t\t\"eu__5\": \"<string>\",\n\t\t\t\t\"ex_4d3\": \"<string>\",\n\t\t\t\t\"voluptate8\": \"<string>\",\n\t\t\t\t\"dolore2d\": \"<string>\",\n\t\t\t\t\"occaecat9\": \"<string>\",\n\t\t\t\t\"reprehenderite\": \"<string>\",\n\t\t\t\t\"Excepteur_34\": \"<string>\",\n\t\t\t\t\"proident_cb0\": \"<string>\",\n\t\t\t\t\"in2f1\": \"<string>\",\n\t\t\t\t\"nostrud_b\": \"<string>\",\n\t\t\t\t\"ad_75\": \"<string>\",\n\t\t\t\t\"in_\": \"<string>\",\n\t\t\t\t\"noncc\": \"<string>\",\n\t\t\t\t\"eiusmod_cd7\": \"<string>\",\n\t\t\t\t\"sunt_ec\": \"<string>\",\n\t\t\t\t\"deserunt_31\": \"<string>\",\n\t\t\t\t\"incididunt7\": \"<string>\",\n\t\t\t\t\"eiusmodd\": \"<string>\",\n\t\t\t\t\"in_c5\": \"<string>\",\n\t\t\t\t\"ut_7\": \"<string>\",\n\t\t\t\t\"labore3\": \"<string>\",\n\t\t\t\t\"do5e\": \"<string>\",\n\t\t\t\t\"reprehenderita8\": \"<string>\",\n\t\t\t\t\"nostrud_f\": \"<string>\",\n\t\t\t\t\"consequatcc\": \"<string>\",\n\t\t\t\t\"Loremb4\": \"<string>\",\n\t\t\t\t\"ipsumd\": \"<string>\",\n\t\t\t\t\"aliquipef\": \"<string>\",\n\t\t\t\t\"sed_e\": \"<string>\",\n\t\t\t\t\"sit__f\": \"<string>\",\n\t\t\t\t\"doloread\": \"<string>\",\n\t\t\t\t\"sed_f\": \"<string>\",\n\t\t\t\t\"in_17\": \"<string>\",\n\t\t\t\t\"esse_6_e\": \"<string>\",\n\t\t\t\t\"magna_3\": \"<string>\",\n\t\t\t\t\"in_685\": \"<string>\",\n\t\t\t\t\"consequatf\": \"<string>\",\n\t\t\t\t\"ut_5c\": \"<string>\",\n\t\t\t\t\"velit5d\": \"<string>\",\n\t\t\t\t\"dolor92\": \"<string>\",\n\t\t\t\t\"ut_f\": \"<string>\",\n\t\t\t\t\"irure_a0\": \"<string>\",\n\t\t\t\t\"tempor2ee\": \"<string>\",\n\t\t\t\t\"do655\": \"<string>\",\n\t\t\t\t\"ut1a7\": \"<string>\",\n\t\t\t\t\"sit869\": \"<string>\",\n\t\t\t\t\"exercitationb20\": \"<string>\",\n\t\t\t\t\"Ut_6fd\": \"<string>\",\n\t\t\t\t\"incididunt9\": \"<string>\",\n\t\t\t\t\"voluptate__\": \"<string>\",\n\t\t\t\t\"do_e\": \"<string>\",\n\t\t\t\t\"sunt12c\": \"<string>\",\n\t\t\t\t\"sit_942\": \"<string>\",\n\t\t\t\t\"doloreb\": \"<string>\",\n\t\t\t\t\"laboris619\": \"<string>\",\n\t\t\t\t\"nostrud_6d\": \"<string>\",\n\t\t\t\t\"dolore_77\": \"<string>\",\n\t\t\t\t\"cupidatatf\": \"<string>\",\n\t\t\t\t\"labore75\": \"<string>\",\n\t\t\t\t\"fugiat_0\": \"<string>\",\n\t\t\t\t\"anim_51\": \"<string>\",\n\t\t\t\t\"id_b53\": \"<string>\",\n\t\t\t\t\"est_d\": \"<string>\",\n\t\t\t\t\"in_31b\": \"<string>\",\n\t\t\t\t\"irure_ba\": \"<string>\",\n\t\t\t\t\"utd7_\": \"<string>\",\n\t\t\t\t\"nonbf\": \"<string>\",\n\t\t\t\t\"labore_9\": \"<string>\",\n\t\t\t\t\"officia_cd\": \"<string>\",\n\t\t\t\t\"Duis0\": \"<string>\",\n\t\t\t\t\"dolor273\": \"<string>\",\n\t\t\t\t\"mollit_7cd\": \"<string>\",\n\t\t\t\t\"velit233\": \"<string>\",\n\t\t\t\t\"utf4\": \"<string>\",\n\t\t\t\t\"cupidatat_7c8\": \"<string>\",\n\t\t\t\t\"eu1\": \"<string>\",\n\t\t\t\t\"dolore_ab5\": \"<string>\",\n\t\t\t\t\"consequat3\": \"<string>\",\n\t\t\t\t\"dolor663\": \"<string>\",\n\t\t\t\t\"in92\": \"<string>\",\n\t\t\t\t\"eu8d9\": \"<string>\",\n\t\t\t\t\"Duis_95\": \"<string>\",\n\t\t\t\t\"sunt_bd\": \"<string>\",\n\t\t\t\t\"Duis_7c\": \"<string>\",\n\t\t\t\t\"dolore_\": \"<string>\",\n\t\t\t\t\"aute1c\": \"<string>\",\n\t\t\t\t\"laborisa99\": \"<string>\",\n\t\t\t\t\"in_e\": \"<string>\",\n\t\t\t\t\"aliquip__5f\": \"<string>\",\n\t\t\t\t\"aliqua_\": \"<string>\",\n\t\t\t\t\"voluptate_45c\": \"<string>\",\n\t\t\t\t\"tempor4f\": \"<string>\",\n\t\t\t\t\"nond\": \"<string>\",\n\t\t\t\t\"occaecat2\": \"<string>\",\n\t\t\t\t\"occaecat_141\": \"<string>\",\n\t\t\t\t\"ut49\": \"<string>\",\n\t\t\t\t\"quis4\": \"<string>\",\n\t\t\t\t\"occaecat5\": \"<string>\",\n\t\t\t\t\"do__e\": \"<string>\",\n\t\t\t\t\"veniam2_a\": \"<string>\",\n\t\t\t\t\"magnaf7\": \"<string>\",\n\t\t\t\t\"none6\": \"<string>\",\n\t\t\t\t\"commodo_e\": \"<string>\",\n\t\t\t\t\"ad_d0\": \"<string>\",\n\t\t\t\t\"Lorem23\": \"<string>\",\n\t\t\t\t\"reprehenderit_6c\": \"<string>\",\n\t\t\t\t\"irure_1b\": \"<string>\",\n\t\t\t\t\"elit_df\": \"<string>\",\n\t\t\t\t\"ea_60\": \"<string>\",\n\t\t\t\t\"amet__2\": \"<string>\",\n\t\t\t\t\"occaecat_2fd\": \"<string>\",\n\t\t\t\t\"id_1\": \"<string>\",\n\t\t\t\t\"minim234\": \"<string>\",\n\t\t\t\t\"Excepteur_b00\": \"<string>\",\n\t\t\t\t\"doloref\": \"<string>\",\n\t\t\t\t\"magna_e5\": \"<string>\",\n\t\t\t\t\"exercitation0\": \"<string>\",\n\t\t\t\t\"non_010\": \"<string>\",\n\t\t\t\t\"do9\": \"<string>\",\n\t\t\t\t\"mollitb\": \"<string>\",\n\t\t\t\t\"ad_7ca\": \"<string>\",\n\t\t\t\t\"ex_3\": \"<string>\",\n\t\t\t\t\"ullamco27\": \"<string>\",\n\t\t\t\t\"esse_a80\": \"<string>\",\n\t\t\t\t\"sit_5\": \"<string>\",\n\t\t\t\t\"aliquip_3\": \"<string>\",\n\t\t\t\t\"cupidatat52\": \"<string>\",\n\t\t\t\t\"irure__e\": \"<string>\",\n\t\t\t\t\"officia_1c\": \"<string>\",\n\t\t\t\t\"etd\": \"<string>\",\n\t\t\t\t\"dolor_c\": \"<string>\",\n\t\t\t\t\"sint4b2\": \"<string>\",\n\t\t\t\t\"minime5a\": \"<string>\",\n\t\t\t\t\"esse8\": \"<string>\",\n\t\t\t\t\"Lorem5dd\": \"<string>\",\n\t\t\t\t\"id_9\": \"<string>\",\n\t\t\t\t\"aute_c\": \"<string>\",\n\t\t\t\t\"occaecat_1\": \"<string>\",\n\t\t\t\t\"aliquip09\": \"<string>\",\n\t\t\t\t\"eu7d\": \"<string>\",\n\t\t\t\t\"dolor_1c\": \"<string>\",\n\t\t\t\t\"aliquip16a\": \"<string>\",\n\t\t\t\t\"sit_52\": \"<string>\",\n\t\t\t\t\"dolor_3\": \"<string>\",\n\t\t\t\t\"veniam_6_\": \"<string>\",\n\t\t\t\t\"adipisicing__\": \"<string>\",\n\t\t\t\t\"enim_a16\": \"<string>\",\n\t\t\t\t\"culpa8\": \"<string>\",\n\t\t\t\t\"dolorb77\": \"<string>\",\n\t\t\t\t\"culpa_54\": \"<string>\",\n\t\t\t\t\"id_2ef\": \"<string>\",\n\t\t\t\t\"eiusmod_6e_\": \"<string>\",\n\t\t\t\t\"aliquip_bde\": \"<string>\",\n\t\t\t\t\"in_692\": \"<string>\",\n\t\t\t\t\"enimf\": \"<string>\",\n\t\t\t\t\"aliquaa1\": \"<string>\",\n\t\t\t\t\"amet7\": \"<string>\",\n\t\t\t\t\"esseba\": \"<string>\",\n\t\t\t\t\"eu_7\": \"<string>\",\n\t\t\t\t\"ut_da3\": \"<string>\",\n\t\t\t\t\"tempor_4\": \"<string>\",\n\t\t\t\t\"Duis_1_f\": \"<string>\",\n\t\t\t\t\"ea52e\": \"<string>\",\n\t\t\t\t\"Excepteur_c\": \"<string>\",\n\t\t\t\t\"cupidatat_a7\": \"<string>\",\n\t\t\t\t\"deseruntc\": \"<string>\",\n\t\t\t\t\"deserunt_e9\": \"<string>\",\n\t\t\t\t\"amet_b\": \"<string>\",\n\t\t\t\t\"fugiat8bb\": \"<string>\",\n\t\t\t\t\"Duisd_\": \"<string>\",\n\t\t\t\t\"nulla6c3\": \"<string>\",\n\t\t\t\t\"incididunt_2\": \"<string>\",\n\t\t\t\t\"ad72\": \"<string>\",\n\t\t\t\t\"quie\": \"<string>\",\n\t\t\t\t\"nostrud_35\": \"<string>\",\n\t\t\t\t\"Lorem_d\": \"<string>\",\n\t\t\t\t\"dolor_a2\": \"<string>\",\n\t\t\t\t\"quis__d\": \"<string>\",\n\t\t\t\t\"animeb_\": \"<string>\",\n\t\t\t\t\"cillum460\": \"<string>\",\n\t\t\t\t\"ut3\": \"<string>\",\n\t\t\t\t\"enim_\": \"<string>\",\n\t\t\t\t\"anim5\": \"<string>\",\n\t\t\t\t\"non36_\": \"<string>\",\n\t\t\t\t\"Lorem0_\": \"<string>\",\n\t\t\t\t\"id72\": \"<string>\",\n\t\t\t\t\"eiusmod_bd7\": \"<string>\",\n\t\t\t\t\"consectetur_39c\": \"<string>\",\n\t\t\t\t\"ex6\": \"<string>\",\n\t\t\t\t\"magna_c7\": \"<string>\",\n\t\t\t\t\"nulla31\": \"<string>\",\n\t\t\t\t\"dolor__d\": \"<string>\",\n\t\t\t\t\"laboris_9f\": \"<string>\",\n\t\t\t\t\"elit_3b5\": \"<string>\",\n\t\t\t\t\"dolore_03b\": \"<string>\",\n\t\t\t\t\"adipisicing__7\": \"<string>\",\n\t\t\t\t\"sit2\": \"<string>\",\n\t\t\t\t\"dolore_2d_\": \"<string>\",\n\t\t\t\t\"dolorc4\": \"<string>\",\n\t\t\t\t\"quis_e\": \"<string>\",\n\t\t\t\t\"labore_24\": \"<string>\",\n\t\t\t\t\"nostrud_5f\": \"<string>\",\n\t\t\t\t\"sit7f4\": \"<string>\",\n\t\t\t\t\"esse265\": \"<string>\",\n\t\t\t\t\"in_adf\": \"<string>\",\n\t\t\t\t\"voluptate_1\": \"<string>\",\n\t\t\t\t\"utd\": \"<string>\",\n\t\t\t\t\"aliquip_6\": \"<string>\",\n\t\t\t\t\"sintc\": \"<string>\",\n\t\t\t\t\"occaecat434\": \"<string>\",\n\t\t\t\t\"aliquip_b\": \"<string>\",\n\t\t\t\t\"ad_4\": \"<string>\",\n\t\t\t\t\"id3c_\": \"<string>\",\n\t\t\t\t\"voluptate0c4\": \"<string>\",\n\t\t\t\t\"Excepteur_a\": \"<string>\",\n\t\t\t\t\"ad_3\": \"<string>\",\n\t\t\t\t\"deserunt7\": \"<string>\",\n\t\t\t\t\"anim_d74\": \"<string>\",\n\t\t\t\t\"aute_e\": \"<string>\",\n\t\t\t\t\"sunte7\": \"<string>\",\n\t\t\t\t\"aute_b3f\": \"<string>\",\n\t\t\t\t\"eu_87\": \"<string>\",\n\t\t\t\t\"veniam_0\": \"<string>\",\n\t\t\t\t\"quife\": \"<string>\",\n\t\t\t\t\"ex_68\": \"<string>\",\n\t\t\t\t\"incididunt_ab0\": \"<string>\",\n\t\t\t\t\"aliquipc\": \"<string>\",\n\t\t\t\t\"id372\": \"<string>\",\n\t\t\t\t\"nostrud_5eb\": \"<string>\",\n\t\t\t\t\"officia7\": \"<string>\",\n\t\t\t\t\"dolore517\": \"<string>\",\n\t\t\t\t\"consectetur136\": \"<string>\",\n\t\t\t\t\"incididuntd\": \"<string>\",\n\t\t\t\t\"laborumd9\": \"<string>\",\n\t\t\t\t\"mollit3_\": \"<string>\",\n\t\t\t\t\"laborum3\": \"<string>\",\n\t\t\t\t\"ipsum_30\": \"<string>\",\n\t\t\t\t\"exercitation_c10\": \"<string>\",\n\t\t\t\t\"qui_0\": \"<string>\",\n\t\t\t\t\"consequatb0\": \"<string>\",\n\t\t\t\t\"aliquip84\": \"<string>\",\n\t\t\t\t\"dolorb2f\": \"<string>\",\n\t\t\t\t\"tempor__b\": \"<string>\",\n\t\t\t\t\"adipisicing_f\": \"<string>\",\n\t\t\t\t\"anima4b\": \"<string>\",\n\t\t\t\t\"irure_68d\": \"<string>\",\n\t\t\t\t\"ametca\": \"<string>\",\n\t\t\t\t\"in_699\": \"<string>\",\n\t\t\t\t\"aliquip_8\": \"<string>\",\n\t\t\t\t\"sint_496\": \"<string>\",\n\t\t\t\t\"qui435\": \"<string>\",\n\t\t\t\t\"sit_6\": \"<string>\",\n\t\t\t\t\"non_b\": \"<string>\",\n\t\t\t\t\"non_230\": \"<string>\",\n\t\t\t\t\"proident5c\": \"<string>\",\n\t\t\t\t\"Lorem7\": \"<string>\",\n\t\t\t\t\"nonba\": \"<string>\",\n\t\t\t\t\"estec\": \"<string>\",\n\t\t\t\t\"fugiat16\": \"<string>\",\n\t\t\t\t\"occaecat_1b3\": \"<string>\",\n\t\t\t\t\"culpa5\": \"<string>\",\n\t\t\t\t\"elit0b9\": \"<string>\",\n\t\t\t\t\"cillumfe\": \"<string>\",\n\t\t\t\t\"in_6\": \"<string>\",\n\t\t\t\t\"voluptate_6d\": \"<string>\",\n\t\t\t\t\"irure18\": \"<string>\",\n\t\t\t\t\"amete\": \"<string>\",\n\t\t\t\t\"ina\": \"<string>\",\n\t\t\t\t\"Duis15\": \"<string>\",\n\t\t\t\t\"esseb\": \"<string>\",\n\t\t\t\t\"elit_1\": \"<string>\",\n\t\t\t\t\"labore_d7\": \"<string>\",\n\t\t\t\t\"velit_034\": \"<string>\",\n\t\t\t\t\"ullamcod\": \"<string>\",\n\t\t\t\t\"ut944\": \"<string>\",\n\t\t\t\t\"voluptate1\": \"<string>\",\n\t\t\t\t\"eu_7c2\": \"<string>\",\n\t\t\t\t\"occaecat9a2\": \"<string>\",\n\t\t\t\t\"autec\": \"<string>\",\n\t\t\t\t\"esse863\": \"<string>\",\n\t\t\t\t\"Lorem_5\": \"<string>\",\n\t\t\t\t\"ad_03a\": \"<string>\",\n\t\t\t\t\"anim7\": \"<string>\",\n\t\t\t\t\"Lorem6\": \"<string>\",\n\t\t\t\t\"veniam_9\": \"<string>\",\n\t\t\t\t\"Excepteur_8_\": \"<string>\",\n\t\t\t\t\"reprehenderit_b\": \"<string>\",\n\t\t\t\t\"exercitation_e9\": \"<string>\",\n\t\t\t\t\"sit12\": \"<string>\",\n\t\t\t\t\"Uta8\": \"<string>\",\n\t\t\t\t\"sunt6c\": \"<string>\",\n\t\t\t\t\"est88\": \"<string>\",\n\t\t\t\t\"magna_6d\": \"<string>\",\n\t\t\t\t\"ullamco7a\": \"<string>\",\n\t\t\t\t\"minim_6\": \"<string>\",\n\t\t\t\t\"tempor_1a\": \"<string>\",\n\t\t\t\t\"dolore_8c\": \"<string>\",\n\t\t\t\t\"ipsum3ed\": \"<string>\",\n\t\t\t\t\"elit9\": \"<string>\",\n\t\t\t\t\"dolor2\": \"<string>\",\n\t\t\t\t\"cupidatat227\": \"<string>\",\n\t\t\t\t\"in_15\": \"<string>\",\n\t\t\t\t\"sed_7df\": \"<string>\",\n\t\t\t\t\"officia1c\": \"<string>\",\n\t\t\t\t\"nulla_a4\": \"<string>\",\n\t\t\t\t\"dolor_b73\": \"<string>\",\n\t\t\t\t\"proident_b\": \"<string>\",\n\t\t\t\t\"temporeb\": \"<string>\",\n\t\t\t\t\"id_a5\": \"<string>\",\n\t\t\t\t\"magna_b3e\": \"<string>\",\n\t\t\t\t\"ametd5\": \"<string>\",\n\t\t\t\t\"aliquip8f\": \"<string>\",\n\t\t\t\t\"deseruntdbb\": \"<string>\",\n\t\t\t\t\"ut78\": \"<string>\",\n\t\t\t\t\"adipisicing_1_\": \"<string>\",\n\t\t\t\t\"id__df\": \"<string>\",\n\t\t\t\t\"proident_5c\": \"<string>\",\n\t\t\t\t\"elit14\": \"<string>\",\n\t\t\t\t\"ea0be\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"clientId\": \"<string>\",\n\t\t\t\"clientSecret\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"redirectUrl\": \"<uri>\",\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"scope\": [\n\t\t\t\t\"openid\",\n\t\t\t\t\"profile\",\n\t\t\t\t\"email\"\n\t\t\t],\n\t\t\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\t\t\"staticRequestParameters\": {\n\t\t\t\t\"qui_b4\": \"<string>\",\n\t\t\t\t\"cupidatat4bd\": \"<string>\",\n\t\t\t\t\"amet_6\": \"<string>\",\n\t\t\t\t\"ipsum3\": \"<string>\",\n\t\t\t\t\"cillumea\": \"<string>\",\n\t\t\t\t\"amet749\": \"<string>\",\n\t\t\t\t\"sint_af\": \"<string>\",\n\t\t\t\t\"aliqua6_b\": \"<string>\",\n\t\t\t\t\"sed7\": \"<string>\",\n\t\t\t\t\"aliquip_05\": \"<string>\",\n\t\t\t\t\"qui5\": \"<string>\",\n\t\t\t\t\"quis_b\": \"<string>\",\n\t\t\t\t\"voluptate305\": \"<string>\",\n\t\t\t\t\"minim_47d\": \"<string>\",\n\t\t\t\t\"aliqua_65\": \"<string>\",\n\t\t\t\t\"quisd37\": \"<string>\",\n\t\t\t\t\"minime58\": \"<string>\",\n\t\t\t\t\"et582\": \"<string>\",\n\t\t\t\t\"voluptate_4\": \"<string>\",\n\t\t\t\t\"incididunta5\": \"<string>\",\n\t\t\t\t\"dolore3\": \"<string>\",\n\t\t\t\t\"ina\": \"<string>\",\n\t\t\t\t\"inf\": \"<string>\",\n\t\t\t\t\"magna_b\": \"<string>\",\n\t\t\t\t\"commodod6\": \"<string>\",\n\t\t\t\t\"culpa_ccb\": \"<string>\",\n\t\t\t\t\"ea5a\": \"<string>\",\n\t\t\t\t\"irure_f1\": \"<string>\",\n\t\t\t\t\"et_a\": \"<string>\",\n\t\t\t\t\"fugiat_e05\": \"<string>\",\n\t\t\t\t\"doloref7f\": \"<string>\",\n\t\t\t\t\"irure_b\": \"<string>\",\n\t\t\t\t\"dolorb\": \"<string>\",\n\t\t\t\t\"cilluma9\": \"<string>\",\n\t\t\t\t\"est_67\": \"<string>\",\n\t\t\t\t\"id622\": \"<string>\",\n\t\t\t\t\"cupidatat_dc1\": \"<string>\",\n\t\t\t\t\"Lorem_e\": \"<string>\",\n\t\t\t\t\"fugiat_b\": \"<string>\",\n\t\t\t\t\"cillum__f\": \"<string>\",\n\t\t\t\t\"eiusmod_55\": \"<string>\",\n\t\t\t\t\"nisi_5\": \"<string>\",\n\t\t\t\t\"enim_c_2\": \"<string>\",\n\t\t\t\t\"esseb68\": \"<string>\",\n\t\t\t\t\"animd08\": \"<string>\",\n\t\t\t\t\"consectetur_37\": \"<string>\",\n\t\t\t\t\"consecteturf4\": \"<string>\",\n\t\t\t\t\"exercitation283\": \"<string>\",\n\t\t\t\t\"exercitation_7c\": \"<string>\",\n\t\t\t\t\"cillum38\": \"<string>\",\n\t\t\t\t\"ullamco2f\": \"<string>\",\n\t\t\t\t\"veniam459\": \"<string>\",\n\t\t\t\t\"sit94\": \"<string>\",\n\t\t\t\t\"Excepteur_aec\": \"<string>\",\n\t\t\t\t\"ex2\": \"<string>\",\n\t\t\t\t\"laborumcad\": \"<string>\",\n\t\t\t\t\"nostrudc\": \"<string>\",\n\t\t\t\t\"commodobd5\": \"<string>\",\n\t\t\t\t\"suntd3\": \"<string>\",\n\t\t\t\t\"inffa\": \"<string>\",\n\t\t\t\t\"elitf\": \"<string>\",\n\t\t\t\t\"id3\": \"<string>\",\n\t\t\t\t\"Excepteur_9\": \"<string>\",\n\t\t\t\t\"dolor1e2\": \"<string>\",\n\t\t\t\t\"amet__f7\": \"<string>\",\n\t\t\t\t\"nisi_1\": \"<string>\",\n\t\t\t\t\"dolore_e4\": \"<string>\",\n\t\t\t\t\"incididunt_41b\": \"<string>\",\n\t\t\t\t\"ullamco4b\": \"<string>\",\n\t\t\t\t\"esse__4_\": \"<string>\",\n\t\t\t\t\"proident_3c7\": \"<string>\",\n\t\t\t\t\"consequat_ae\": \"<string>\",\n\t\t\t\t\"dolor_82_\": \"<string>\",\n\t\t\t\t\"labore_a7\": \"<string>\",\n\t\t\t\t\"ullamcoa8\": \"<string>\",\n\t\t\t\t\"esse_f47\": \"<string>\",\n\t\t\t\t\"in__\": \"<string>\",\n\t\t\t\t\"Loremec\": \"<string>\",\n\t\t\t\t\"adipisicing4\": \"<string>\",\n\t\t\t\t\"reprehenderit887\": \"<string>\",\n\t\t\t\t\"Ut_64d\": \"<string>\",\n\t\t\t\t\"Ut3c\": \"<string>\",\n\t\t\t\t\"dolor2b\": \"<string>\",\n\t\t\t\t\"idbb1\": \"<string>\",\n\t\t\t\t\"dolor_b\": \"<string>\",\n\t\t\t\t\"Ut0ee\": \"<string>\",\n\t\t\t\t\"aliquipab9\": \"<string>\",\n\t\t\t\t\"adipisicingcba\": \"<string>\",\n\t\t\t\t\"esse5a\": \"<string>\",\n\t\t\t\t\"laborum_f65\": \"<string>\",\n\t\t\t\t\"eiusmod_f\": \"<string>\",\n\t\t\t\t\"dolor_731\": \"<string>\",\n\t\t\t\t\"aliqua3ac\": \"<string>\",\n\t\t\t\t\"suntc0\": \"<string>\",\n\t\t\t\t\"officia_9b0\": \"<string>\",\n\t\t\t\t\"aute_1\": \"<string>\",\n\t\t\t\t\"velit_e92\": \"<string>\",\n\t\t\t\t\"fugiatbac\": \"<string>\",\n\t\t\t\t\"nostrud_8b0\": \"<string>\",\n\t\t\t\t\"in9\": \"<string>\",\n\t\t\t\t\"eu3\": \"<string>\",\n\t\t\t\t\"pariatur7\": \"<string>\",\n\t\t\t\t\"veniamcd6\": \"<string>\",\n\t\t\t\t\"exercitation07\": \"<string>\",\n\t\t\t\t\"exercitation_e72\": \"<string>\",\n\t\t\t\t\"Duis_2\": \"<string>\",\n\t\t\t\t\"Lorem8\": \"<string>\",\n\t\t\t\t\"enim_1a\": \"<string>\",\n\t\t\t\t\"labore_311\": \"<string>\",\n\t\t\t\t\"minim4\": \"<string>\",\n\t\t\t\t\"ametf0\": \"<string>\",\n\t\t\t\t\"Lorem__d\": \"<string>\",\n\t\t\t\t\"veniam52\": \"<string>\",\n\t\t\t\t\"in164\": \"<string>\",\n\t\t\t\t\"laborec\": \"<string>\",\n\t\t\t\t\"culpa31\": \"<string>\",\n\t\t\t\t\"proident5\": \"<string>\",\n\t\t\t\t\"do_0ff\": \"<string>\",\n\t\t\t\t\"cillum72\": \"<string>\",\n\t\t\t\t\"Ut_1b0\": \"<string>\",\n\t\t\t\t\"cillum8\": \"<string>\",\n\t\t\t\t\"Loremb_\": \"<string>\",\n\t\t\t\t\"cillumd\": \"<string>\",\n\t\t\t\t\"adipisicing8d0\": \"<string>\",\n\t\t\t\t\"et6_5\": \"<string>\",\n\t\t\t\t\"dolore_21\": \"<string>\",\n\t\t\t\t\"suntf\": \"<string>\",\n\t\t\t\t\"tempor5\": \"<string>\",\n\t\t\t\t\"consectetur_23\": \"<string>\",\n\t\t\t\t\"elit_7dc\": \"<string>\",\n\t\t\t\t\"culpa_004\": \"<string>\",\n\t\t\t\t\"elit_0\": \"<string>\",\n\t\t\t\t\"in3\": \"<string>\",\n\t\t\t\t\"enim93\": \"<string>\",\n\t\t\t\t\"laboris_99\": \"<string>\",\n\t\t\t\t\"in_8d_\": \"<string>\",\n\t\t\t\t\"adipisicing_630\": \"<string>\",\n\t\t\t\t\"nisi__74\": \"<string>\",\n\t\t\t\t\"veniam_3\": \"<string>\",\n\t\t\t\t\"minim_c9\": \"<string>\",\n\t\t\t\t\"reprehenderit_20\": \"<string>\",\n\t\t\t\t\"qui_81\": \"<string>\",\n\t\t\t\t\"nisi_9\": \"<string>\",\n\t\t\t\t\"tempor_18\": \"<string>\",\n\t\t\t\t\"dolorc3\": \"<string>\",\n\t\t\t\t\"nisi9_0\": \"<string>\",\n\t\t\t\t\"Lorema33\": \"<string>\",\n\t\t\t\t\"irure_3a1\": \"<string>\",\n\t\t\t\t\"consectetura9e\": \"<string>\",\n\t\t\t\t\"et5\": \"<string>\",\n\t\t\t\t\"in_b\": \"<string>\",\n\t\t\t\t\"quis_c\": \"<string>\",\n\t\t\t\t\"cupidatat5\": \"<string>\",\n\t\t\t\t\"eiusmod_b\": \"<string>\",\n\t\t\t\t\"exercitationdb8\": \"<string>\",\n\t\t\t\t\"exercitation_1\": \"<string>\",\n\t\t\t\t\"amet8\": \"<string>\",\n\t\t\t\t\"ea_f\": \"<string>\",\n\t\t\t\t\"laborum_3\": \"<string>\",\n\t\t\t\t\"magna_8\": \"<string>\",\n\t\t\t\t\"Ut_8e0\": \"<string>\",\n\t\t\t\t\"anim_4\": \"<string>\",\n\t\t\t\t\"ea2f\": \"<string>\",\n\t\t\t\t\"ipsuma5\": \"<string>\",\n\t\t\t\t\"eiusmode64\": \"<string>\",\n\t\t\t\t\"officia__9\": \"<string>\",\n\t\t\t\t\"cillum_d\": \"<string>\",\n\t\t\t\t\"Excepteur305\": \"<string>\",\n\t\t\t\t\"id_15a\": \"<string>\",\n\t\t\t\t\"ine31\": \"<string>\",\n\t\t\t\t\"nisi_4\": \"<string>\",\n\t\t\t\t\"ullamcodf6\": \"<string>\",\n\t\t\t\t\"in40\": \"<string>\",\n\t\t\t\t\"enim2b2\": \"<string>\",\n\t\t\t\t\"ut84\": \"<string>\",\n\t\t\t\t\"fugiat_4e2\": \"<string>\",\n\t\t\t\t\"est_42\": \"<string>\",\n\t\t\t\t\"cupidatat_f\": \"<string>\",\n\t\t\t\t\"commodo_fc\": \"<string>\",\n\t\t\t\t\"id4e\": \"<string>\",\n\t\t\t\t\"do_4c\": \"<string>\",\n\t\t\t\t\"Excepteur3_\": \"<string>\",\n\t\t\t\t\"aliquipf6\": \"<string>\",\n\t\t\t\t\"consequat98\": \"<string>\",\n\t\t\t\t\"eiusmod30b\": \"<string>\",\n\t\t\t\t\"est_b\": \"<string>\",\n\t\t\t\t\"fugiat22\": \"<string>\",\n\t\t\t\t\"cillum_daf\": \"<string>\",\n\t\t\t\t\"quisa4\": \"<string>\",\n\t\t\t\t\"mollitd\": \"<string>\",\n\t\t\t\t\"elit_6_\": \"<string>\",\n\t\t\t\t\"elit6\": \"<string>\",\n\t\t\t\t\"in_5\": \"<string>\",\n\t\t\t\t\"consequat75\": \"<string>\",\n\t\t\t\t\"dolor_03\": \"<string>\",\n\t\t\t\t\"qui_627\": \"<string>\",\n\t\t\t\t\"nullaf35\": \"<string>\",\n\t\t\t\t\"eiusmod_7\": \"<string>\",\n\t\t\t\t\"mollit_01d\": \"<string>\",\n\t\t\t\t\"proident_cc\": \"<string>\",\n\t\t\t\t\"sint66b\": \"<string>\",\n\t\t\t\t\"sit_be3\": \"<string>\",\n\t\t\t\t\"laboris_4\": \"<string>\",\n\t\t\t\t\"magna3cf\": \"<string>\",\n\t\t\t\t\"consectetur8d\": \"<string>\",\n\t\t\t\t\"voluptate_dda\": \"<string>\",\n\t\t\t\t\"eiusmod_b4_\": \"<string>\",\n\t\t\t\t\"irure_12\": \"<string>\",\n\t\t\t\t\"ullamco_43\": \"<string>\",\n\t\t\t\t\"dolor0c\": \"<string>\",\n\t\t\t\t\"deserunt_a83\": \"<string>\",\n\t\t\t\t\"laboris_293\": \"<string>\",\n\t\t\t\t\"dolore46\": \"<string>\",\n\t\t\t\t\"dolorf\": \"<string>\",\n\t\t\t\t\"dolore11\": \"<string>\",\n\t\t\t\t\"fugiat_990\": \"<string>\",\n\t\t\t\t\"laboris53\": \"<string>\",\n\t\t\t\t\"laborum_e\": \"<string>\",\n\t\t\t\t\"adipisicingecb\": \"<string>\",\n\t\t\t\t\"utb7\": \"<string>\",\n\t\t\t\t\"minim__8f\": \"<string>\",\n\t\t\t\t\"magna_7f\": \"<string>\",\n\t\t\t\t\"incididuntf60\": \"<string>\",\n\t\t\t\t\"anim_1\": \"<string>\",\n\t\t\t\t\"do1a\": \"<string>\",\n\t\t\t\t\"elit_5_8\": \"<string>\",\n\t\t\t\t\"commodoe1\": \"<string>\",\n\t\t\t\t\"mollit_474\": \"<string>\",\n\t\t\t\t\"Lorem_d\": \"<string>\",\n\t\t\t\t\"aliqua_56\": \"<string>\",\n\t\t\t\t\"exercitation_f\": \"<string>\",\n\t\t\t\t\"aute__0\": \"<string>\",\n\t\t\t\t\"tempor_3a\": \"<string>\",\n\t\t\t\t\"sunt40c\": \"<string>\",\n\t\t\t\t\"magna_3a\": \"<string>\",\n\t\t\t\t\"dolore_4b\": \"<string>\",\n\t\t\t\t\"enim0\": \"<string>\",\n\t\t\t\t\"eiusmod_4_\": \"<string>\",\n\t\t\t\t\"ipsum36\": \"<string>\",\n\t\t\t\t\"sitf\": \"<string>\",\n\t\t\t\t\"anim_fa7\": \"<string>\",\n\t\t\t\t\"et_5\": \"<string>\",\n\t\t\t\t\"pariatur_73\": \"<string>\",\n\t\t\t\t\"nisi_7\": \"<string>\",\n\t\t\t\t\"amet563\": \"<string>\",\n\t\t\t\t\"qui_10\": \"<string>\",\n\t\t\t\t\"enimf2a\": \"<string>\",\n\t\t\t\t\"cillum_7\": \"<string>\",\n\t\t\t\t\"dof\": \"<string>\",\n\t\t\t\t\"tempor_\": \"<string>\",\n\t\t\t\t\"velit_a2\": \"<string>\",\n\t\t\t\t\"quis_b3\": \"<string>\",\n\t\t\t\t\"ind1a\": \"<string>\",\n\t\t\t\t\"in_ce_\": \"<string>\",\n\t\t\t\t\"tempor_4f9\": \"<string>\",\n\t\t\t\t\"est_65\": \"<string>\",\n\t\t\t\t\"sed_acb\": \"<string>\",\n\t\t\t\t\"doa\": \"<string>\",\n\t\t\t\t\"laborum__2\": \"<string>\",\n\t\t\t\t\"elit2b\": \"<string>\",\n\t\t\t\t\"sed738\": \"<string>\",\n\t\t\t\t\"est4c\": \"<string>\",\n\t\t\t\t\"Excepteur7\": \"<string>\",\n\t\t\t\t\"velit_42\": \"<string>\",\n\t\t\t\t\"do8f\": \"<string>\",\n\t\t\t\t\"sunt__c\": \"<string>\",\n\t\t\t\t\"Ut_0\": \"<string>\",\n\t\t\t\t\"ad6d\": \"<string>\",\n\t\t\t\t\"occaecatc7d\": \"<string>\",\n\t\t\t\t\"esse_8a\": \"<string>\",\n\t\t\t\t\"minime\": \"<string>\",\n\t\t\t\t\"sed5c\": \"<string>\",\n\t\t\t\t\"ullamco68e\": \"<string>\",\n\t\t\t\t\"adipisicing_45\": \"<string>\",\n\t\t\t\t\"ut_5\": \"<string>\",\n\t\t\t\t\"consectetur_d\": \"<string>\",\n\t\t\t\t\"cupidatat8b2\": \"<string>\",\n\t\t\t\t\"culpadc\": \"<string>\",\n\t\t\t\t\"ullamco_70\": \"<string>\",\n\t\t\t\t\"dolor__f4\": \"<string>\",\n\t\t\t\t\"cillum262\": \"<string>\",\n\t\t\t\t\"ipsum80\": \"<string>\",\n\t\t\t\t\"culpa3b\": \"<string>\",\n\t\t\t\t\"laboris_f_2\": \"<string>\",\n\t\t\t\t\"nisie\": \"<string>\",\n\t\t\t\t\"nisi56\": \"<string>\",\n\t\t\t\t\"consectetur_62\": \"<string>\",\n\t\t\t\t\"anim_7\": \"<string>\",\n\t\t\t\t\"Ut_346\": \"<string>\",\n\t\t\t\t\"velit_9e\": \"<string>\",\n\t\t\t\t\"commodo667\": \"<string>\",\n\t\t\t\t\"minim_9c\": \"<string>\",\n\t\t\t\t\"dolor_e_\": \"<string>\",\n\t\t\t\t\"voluptate_0\": \"<string>\",\n\t\t\t\t\"officia_7\": \"<string>\",\n\t\t\t\t\"officiacf\": \"<string>\",\n\t\t\t\t\"in_9\": \"<string>\",\n\t\t\t\t\"ina1a\": \"<string>\",\n\t\t\t\t\"voluptate4ae\": \"<string>\",\n\t\t\t\t\"in177\": \"<string>\",\n\t\t\t\t\"sunt_d9c\": \"<string>\",\n\t\t\t\t\"dolore_f\": \"<string>\",\n\t\t\t\t\"ut_1\": \"<string>\",\n\t\t\t\t\"adipisicinga8\": \"<string>\",\n\t\t\t\t\"cillum_b63\": \"<string>\",\n\t\t\t\t\"culpa2d\": \"<string>\",\n\t\t\t\t\"pariaturf\": \"<string>\",\n\t\t\t\t\"cillum0_\": \"<string>\",\n\t\t\t\t\"ut9\": \"<string>\",\n\t\t\t\t\"magna_0\": \"<string>\",\n\t\t\t\t\"enim_0\": \"<string>\",\n\t\t\t\t\"esse422\": \"<string>\",\n\t\t\t\t\"Excepteur5a\": \"<string>\",\n\t\t\t\t\"laborum_c\": \"<string>\",\n\t\t\t\t\"nisi5\": \"<string>\",\n\t\t\t\t\"occaecat_4\": \"<string>\",\n\t\t\t\t\"proident7f\": \"<string>\",\n\t\t\t\t\"minim_6b\": \"<string>\",\n\t\t\t\t\"Loremc\": \"<string>\",\n\t\t\t\t\"sunt_7\": \"<string>\",\n\t\t\t\t\"do_4\": \"<string>\",\n\t\t\t\t\"id_0\": \"<string>\",\n\t\t\t\t\"deserunt77\": \"<string>\",\n\t\t\t\t\"id_7_\": \"<string>\",\n\t\t\t\t\"adb\": \"<string>\",\n\t\t\t\t\"sit6e\": \"<string>\",\n\t\t\t\t\"idbb5\": \"<string>\",\n\t\t\t\t\"fugiat_38\": \"<string>\",\n\t\t\t\t\"mollit198\": \"<string>\",\n\t\t\t\t\"occaecatc\": \"<string>\",\n\t\t\t\t\"cillum_ed\": \"<string>\",\n\t\t\t\t\"dolore1_c\": \"<string>\",\n\t\t\t\t\"sunt_b9\": \"<string>\",\n\t\t\t\t\"Duis8a\": \"<string>\",\n\t\t\t\t\"sed8\": \"<string>\",\n\t\t\t\t\"eiusmod_507\": \"<string>\",\n\t\t\t\t\"proidentb3b\": \"<string>\",\n\t\t\t\t\"occaecat0\": \"<string>\",\n\t\t\t\t\"commodo065\": \"<string>\",\n\t\t\t\t\"anim_ef\": \"<string>\",\n\t\t\t\t\"veniam_69\": \"<string>\",\n\t\t\t\t\"mollit_aa\": \"<string>\",\n\t\t\t\t\"cillum_a67\": \"<string>\",\n\t\t\t\t\"dolor_4\": \"<string>\",\n\t\t\t\t\"quid\": \"<string>\",\n\t\t\t\t\"enim_9\": \"<string>\",\n\t\t\t\t\"enim3f\": \"<string>\",\n\t\t\t\t\"irure4fd\": \"<string>\",\n\t\t\t\t\"ut_1b\": \"<string>\",\n\t\t\t\t\"sed_b0\": \"<string>\",\n\t\t\t\t\"ipsum_6\": \"<string>\",\n\t\t\t\t\"voluptatef\": \"<string>\",\n\t\t\t\t\"in84\": \"<string>\",\n\t\t\t\t\"sit_\": \"<string>\",\n\t\t\t\t\"aliquipb\": \"<string>\",\n\t\t\t\t\"Excepteur_6\": \"<string>\",\n\t\t\t\t\"velit7\": \"<string>\",\n\t\t\t\t\"est7_\": \"<string>\",\n\t\t\t\t\"ullamco_ad\": \"<string>\",\n\t\t\t\t\"ut_3\": \"<string>\",\n\t\t\t\t\"cillum_6\": \"<string>\",\n\t\t\t\t\"laborum_c0_\": \"<string>\",\n\t\t\t\t\"velit10\": \"<string>\",\n\t\t\t\t\"Lorem_8\": \"<string>\",\n\t\t\t\t\"sed735\": \"<string>\",\n\t\t\t\t\"consecteturdda\": \"<string>\",\n\t\t\t\t\"aliqua8c\": \"<string>\",\n\t\t\t\t\"anim01\": \"<string>\",\n\t\t\t\t\"commodo92\": \"<string>\",\n\t\t\t\t\"commodo217\": \"<string>\",\n\t\t\t\t\"amet5\": \"<string>\",\n\t\t\t\t\"sunt3cb\": \"<string>\",\n\t\t\t\t\"cupidatat_9cd\": \"<string>\",\n\t\t\t\t\"inc1\": \"<string>\",\n\t\t\t\t\"in2\": \"<string>\",\n\t\t\t\t\"et__\": \"<string>\",\n\t\t\t\t\"laborisea\": \"<string>\",\n\t\t\t\t\"in90a\": \"<string>\",\n\t\t\t\t\"dolorec7\": \"<string>\",\n\t\t\t\t\"officia86\": \"<string>\",\n\t\t\t\t\"cupidatat30\": \"<string>\",\n\t\t\t\t\"reprehenderit_3\": \"<string>\",\n\t\t\t\t\"voluptate_f\": \"<string>\",\n\t\t\t\t\"laborum_e69\": \"<string>\",\n\t\t\t\t\"doba\": \"<string>\",\n\t\t\t\t\"sed47\": \"<string>\",\n\t\t\t\t\"Ut_45\": \"<string>\",\n\t\t\t\t\"Excepteur330\": \"<string>\",\n\t\t\t\t\"eu_0a5\": \"<string>\",\n\t\t\t\t\"dolore1\": \"<string>\",\n\t\t\t\t\"cupidatat_bf\": \"<string>\",\n\t\t\t\t\"consequat_e2\": \"<string>\",\n\t\t\t\t\"consectetur_96e\": \"<string>\",\n\t\t\t\t\"cupidatat_6\": \"<string>\",\n\t\t\t\t\"ete\": \"<string>\",\n\t\t\t\t\"Lorem_62\": \"<string>\",\n\t\t\t\t\"sit674\": \"<string>\",\n\t\t\t\t\"ut__f7\": \"<string>\",\n\t\t\t\t\"ex_64e\": \"<string>\",\n\t\t\t\t\"anim35\": \"<string>\",\n\t\t\t\t\"reprehenderit_76\": \"<string>\",\n\t\t\t\t\"estd0\": \"<string>\",\n\t\t\t\t\"occaecat_6e\": \"<string>\",\n\t\t\t\t\"exercitation15b\": \"<string>\",\n\t\t\t\t\"ut9de\": \"<string>\",\n\t\t\t\t\"consequat_f8\": \"<string>\",\n\t\t\t\t\"magnae2\": \"<string>\",\n\t\t\t\t\"veniamd\": \"<string>\",\n\t\t\t\t\"etfd\": \"<string>\",\n\t\t\t\t\"eiusmod_a2\": \"<string>\",\n\t\t\t\t\"esse_7fc\": \"<string>\",\n\t\t\t\t\"sunt_4\": \"<string>\",\n\t\t\t\t\"eiusmod_6da\": \"<string>\",\n\t\t\t\t\"aliquae93\": \"<string>\",\n\t\t\t\t\"nostrud_d\": \"<string>\",\n\t\t\t\t\"in_db\": \"<string>\",\n\t\t\t\t\"Excepteur3e4\": \"<string>\",\n\t\t\t\t\"non99e\": \"<string>\",\n\t\t\t\t\"ad_6\": \"<string>\",\n\t\t\t\t\"ipsum4\": \"<string>\",\n\t\t\t\t\"dolore339\": \"<string>\",\n\t\t\t\t\"ut1\": \"<string>\",\n\t\t\t\t\"sed7e3\": \"<string>\",\n\t\t\t\t\"Excepteur_7e\": \"<string>\",\n\t\t\t\t\"ut_a37\": \"<string>\",\n\t\t\t\t\"enim5d\": \"<string>\",\n\t\t\t\t\"nostrud_af3\": \"<string>\",\n\t\t\t\t\"exercitation_14\": \"<string>\",\n\t\t\t\t\"proident0\": \"<string>\",\n\t\t\t\t\"magnae5\": \"<string>\",\n\t\t\t\t\"adipisicing__d\": \"<string>\",\n\t\t\t\t\"aute_b\": \"<string>\",\n\t\t\t\t\"sint_3_\": \"<string>\",\n\t\t\t\t\"sint_\": \"<string>\",\n\t\t\t\t\"velit_12\": \"<string>\",\n\t\t\t\t\"est_f45\": \"<string>\",\n\t\t\t\t\"consequat3e\": \"<string>\",\n\t\t\t\t\"adipisicing_5\": \"<string>\",\n\t\t\t\t\"pariatur_26\": \"<string>\",\n\t\t\t\t\"elit_14\": \"<string>\",\n\t\t\t\t\"ut_909\": \"<string>\",\n\t\t\t\t\"do_5b7\": \"<string>\",\n\t\t\t\t\"ad_c0\": \"<string>\",\n\t\t\t\t\"laboris_0\": \"<string>\",\n\t\t\t\t\"do_a\": \"<string>\",\n\t\t\t\t\"sit_41\": \"<string>\",\n\t\t\t\t\"laboris9\": \"<string>\",\n\t\t\t\t\"proident_0\": \"<string>\",\n\t\t\t\t\"id_46\": \"<string>\",\n\t\t\t\t\"adaf\": \"<string>\",\n\t\t\t\t\"ea__\": \"<string>\",\n\t\t\t\t\"magna_\": \"<string>\",\n\t\t\t\t\"eta82\": \"<string>\",\n\t\t\t\t\"nisi_2b\": \"<string>\",\n\t\t\t\t\"magna_40d\": \"<string>\",\n\t\t\t\t\"enim306\": \"<string>\",\n\t\t\t\t\"Lorem_a\": \"<string>\",\n\t\t\t\t\"anim_3_2\": \"<string>\",\n\t\t\t\t\"et_5e\": \"<string>\",\n\t\t\t\t\"exercitation_2\": \"<string>\",\n\t\t\t\t\"exercitationb6\": \"<string>\",\n\t\t\t\t\"enim_f\": \"<string>\",\n\t\t\t\t\"in_a5\": \"<string>\",\n\t\t\t\t\"cillum_34\": \"<string>\",\n\t\t\t\t\"irure_9\": \"<string>\",\n\t\t\t\t\"Duisa\": \"<string>\",\n\t\t\t\t\"labore_\": \"<string>\",\n\t\t\t\t\"consectetur_d5\": \"<string>\",\n\t\t\t\t\"Lorem_133\": \"<string>\",\n\t\t\t\t\"culpa_6\": \"<string>\",\n\t\t\t\t\"Lorem_db1\": \"<string>\",\n\t\t\t\t\"fugiatf\": \"<string>\",\n\t\t\t\t\"nostrud_5_\": \"<string>\",\n\t\t\t\t\"consectetur6\": \"<string>\",\n\t\t\t\t\"sunt_f50\": \"<string>\",\n\t\t\t\t\"sit29\": \"<string>\",\n\t\t\t\t\"ullamco_1_\": \"<string>\",\n\t\t\t\t\"consecteturba\": \"<string>\",\n\t\t\t\t\"commodo_5_5\": \"<string>\",\n\t\t\t\t\"laborum97\": \"<string>\",\n\t\t\t\t\"qui_4\": \"<string>\",\n\t\t\t\t\"occaecatf0\": \"<string>\",\n\t\t\t\t\"do_29f\": \"<string>\",\n\t\t\t\t\"elite5\": \"<string>\",\n\t\t\t\t\"aliquip6\": \"<string>\",\n\t\t\t\t\"irure967\": \"<string>\",\n\t\t\t\t\"tempor0\": \"<string>\",\n\t\t\t\t\"sit_f0\": \"<string>\",\n\t\t\t\t\"ipsum1c\": \"<string>\",\n\t\t\t\t\"id_cd\": \"<string>\",\n\t\t\t\t\"nisi_45\": \"<string>\",\n\t\t\t\t\"veniam_5b8\": \"<string>\",\n\t\t\t\t\"dolor67\": \"<string>\",\n\t\t\t\t\"ullamco_9\": \"<string>\",\n\t\t\t\t\"ea302\": \"<string>\",\n\t\t\t\t\"nostrud_c1\": \"<string>\",\n\t\t\t\t\"laboris0_4\": \"<string>\",\n\t\t\t\t\"aliquip3a\": \"<string>\",\n\t\t\t\t\"sit_06\": \"<string>\",\n\t\t\t\t\"occaecat_7\": \"<string>\",\n\t\t\t\t\"sed_f6\": \"<string>\",\n\t\t\t\t\"ut_db4\": \"<string>\",\n\t\t\t\t\"minim_3\": \"<string>\",\n\t\t\t\t\"Duisf8\": \"<string>\",\n\t\t\t\t\"et7e\": \"<string>\",\n\t\t\t\t\"est_bb6\": \"<string>\",\n\t\t\t\t\"quis_9\": \"<string>\",\n\t\t\t\t\"in_ec\": \"<string>\",\n\t\t\t\t\"Duis_e05\": \"<string>\",\n\t\t\t\t\"ut_72\": \"<string>\",\n\t\t\t\t\"Duis_4d\": \"<string>\",\n\t\t\t\t\"aliquip_f8\": \"<string>\",\n\t\t\t\t\"sit3\": \"<string>\",\n\t\t\t\t\"Excepteurded\": \"<string>\",\n\t\t\t\t\"do_d\": \"<string>\",\n\t\t\t\t\"officia_612\": \"<string>\",\n\t\t\t\t\"velit_8\": \"<string>\",\n\t\t\t\t\"pariatur_\": \"<string>\",\n\t\t\t\t\"exf6\": \"<string>\",\n\t\t\t\t\"cupidatat__\": \"<string>\",\n\t\t\t\t\"dolore_82a\": \"<string>\",\n\t\t\t\t\"Excepteur_4\": \"<string>\",\n\t\t\t\t\"laborum_d6e\": \"<string>\",\n\t\t\t\t\"elit1\": \"<string>\",\n\t\t\t\t\"elitbdd\": \"<string>\",\n\t\t\t\t\"ut_15e\": \"<string>\",\n\t\t\t\t\"et_a7\": \"<string>\",\n\t\t\t\t\"ullamcob\": \"<string>\",\n\t\t\t\t\"sed50\": \"<string>\",\n\t\t\t\t\"ine\": \"<string>\",\n\t\t\t\t\"eiusmod_1d\": \"<string>\",\n\t\t\t\t\"dolorea5\": \"<string>\",\n\t\t\t\t\"fugiat8b4\": \"<string>\",\n\t\t\t\t\"fugiat_cb2\": \"<string>\",\n\t\t\t\t\"quis_4de\": \"<string>\",\n\t\t\t\t\"dolor1\": \"<string>\",\n\t\t\t\t\"exercitation_5b\": \"<string>\",\n\t\t\t\t\"sed6\": \"<string>\",\n\t\t\t\t\"reprehenderit2\": \"<string>\",\n\t\t\t\t\"commodob\": \"<string>\",\n\t\t\t\t\"aute5\": \"<string>\",\n\t\t\t\t\"sed_12\": \"<string>\",\n\t\t\t\t\"anim4_e\": \"<string>\",\n\t\t\t\t\"quis_0a6\": \"<string>\",\n\t\t\t\t\"culpa97\": \"<string>\",\n\t\t\t\t\"cillum_74\": \"<string>\",\n\t\t\t\t\"consequat717\": \"<string>\",\n\t\t\t\t\"incididunt_5df\": \"<string>\",\n\t\t\t\t\"temporeb2\": \"<string>\",\n\t\t\t\t\"mollit_d19\": \"<string>\",\n\t\t\t\t\"dolor_a\": \"<string>\",\n\t\t\t\t\"seda\": \"<string>\",\n\t\t\t\t\"exercitationc54\": \"<string>\",\n\t\t\t\t\"est50\": \"<string>\",\n\t\t\t\t\"adf\": \"<string>\",\n\t\t\t\t\"aliquip47_\": \"<string>\",\n\t\t\t\t\"in_11\": \"<string>\",\n\t\t\t\t\"estd\": \"<string>\",\n\t\t\t\t\"non1c\": \"<string>\",\n\t\t\t\t\"dolore_b4d\": \"<string>\",\n\t\t\t\t\"quis_8a4\": \"<string>\",\n\t\t\t\t\"culpaf\": \"<string>\",\n\t\t\t\t\"Duis_4\": \"<string>\",\n\t\t\t\t\"ex_8f4\": \"<string>\",\n\t\t\t\t\"nostrud1\": \"<string>\",\n\t\t\t\t\"ut_cd\": \"<string>\",\n\t\t\t\t\"nisi_b\": \"<string>\",\n\t\t\t\t\"consectetur_abf\": \"<string>\",\n\t\t\t\t\"velitd1\": \"<string>\",\n\t\t\t\t\"in_27f\": \"<string>\",\n\t\t\t\t\"ex0_\": \"<string>\",\n\t\t\t\t\"proident8\": \"<string>\",\n\t\t\t\t\"ut_77\": \"<string>\",\n\t\t\t\t\"velit_2\": \"<string>\",\n\t\t\t\t\"id_379\": \"<string>\",\n\t\t\t\t\"pariaturf64\": \"<string>\",\n\t\t\t\t\"culpae1e\": \"<string>\",\n\t\t\t\t\"id60\": \"<string>\",\n\t\t\t\t\"ad_3\": \"<string>\",\n\t\t\t\t\"cupidatat_60\": \"<string>\",\n\t\t\t\t\"officia_cfb\": \"<string>\",\n\t\t\t\t\"magna_7\": \"<string>\",\n\t\t\t\t\"id_92\": \"<string>\",\n\t\t\t\t\"magna_43c\": \"<string>\",\n\t\t\t\t\"sunt3\": \"<string>\",\n\t\t\t\t\"esse86d\": \"<string>\",\n\t\t\t\t\"sint2c6\": \"<string>\",\n\t\t\t\t\"veniam_dd8\": \"<string>\",\n\t\t\t\t\"ind\": \"<string>\",\n\t\t\t\t\"nostrud7a\": \"<string>\",\n\t\t\t\t\"irure1\": \"<string>\",\n\t\t\t\t\"tempor_6a\": \"<string>\",\n\t\t\t\t\"exercitation_5\": \"<string>\",\n\t\t\t\t\"in__ca\": \"<string>\",\n\t\t\t\t\"ullamco07\": \"<string>\",\n\t\t\t\t\"fugiat13e\": \"<string>\",\n\t\t\t\t\"nisi_cf_\": \"<string>\",\n\t\t\t\t\"pariatur_2\": \"<string>\",\n\t\t\t\t\"esseb8\": \"<string>\",\n\t\t\t\t\"dolore_6\": \"<string>\",\n\t\t\t\t\"eu_dc\": \"<string>\",\n\t\t\t\t\"laborum_b\": \"<string>\",\n\t\t\t\t\"eu9e5\": \"<string>\",\n\t\t\t\t\"in965\": \"<string>\",\n\t\t\t\t\"elit_c\": \"<string>\",\n\t\t\t\t\"aliqua11f\": \"<string>\",\n\t\t\t\t\"anim8e\": \"<string>\",\n\t\t\t\t\"dolore5_d\": \"<string>\",\n\t\t\t\t\"quis_f4\": \"<string>\",\n\t\t\t\t\"minim_8\": \"<string>\",\n\t\t\t\t\"irure_c\": \"<string>\",\n\t\t\t\t\"occaecat_9\": \"<string>\",\n\t\t\t\t\"minim0aa\": \"<string>\",\n\t\t\t\t\"consequat_c6\": \"<string>\",\n\t\t\t\t\"magna_60\": \"<string>\",\n\t\t\t\t\"ut75\": \"<string>\",\n\t\t\t\t\"tempor_26\": \"<string>\",\n\t\t\t\t\"nulla82\": \"<string>\",\n\t\t\t\t\"amet_c2f\": \"<string>\",\n\t\t\t\t\"dolorebbc\": \"<string>\",\n\t\t\t\t\"reprehenderit_b29\": \"<string>\",\n\t\t\t\t\"ut_ac\": \"<string>\",\n\t\t\t\t\"anima\": \"<string>\",\n\t\t\t\t\"laborum_4d\": \"<string>\",\n\t\t\t\t\"est_337\": \"<string>\",\n\t\t\t\t\"labore_94\": \"<string>\",\n\t\t\t\t\"magna9ba\": \"<string>\",\n\t\t\t\t\"consequat01c\": \"<string>\",\n\t\t\t\t\"velit_19\": \"<string>\",\n\t\t\t\t\"Excepteur_8_2\": \"<string>\",\n\t\t\t\t\"proident0fd\": \"<string>\",\n\t\t\t\t\"non_8\": \"<string>\",\n\t\t\t\t\"inc\": \"<string>\",\n\t\t\t\t\"labore_2\": \"<string>\",\n\t\t\t\t\"pariatur_110\": \"<string>\",\n\t\t\t\t\"irure_08b\": \"<string>\",\n\t\t\t\t\"officia16_\": \"<string>\",\n\t\t\t\t\"euf95\": \"<string>\",\n\t\t\t\t\"in_2a7\": \"<string>\",\n\t\t\t\t\"adipisicing_af\": \"<string>\",\n\t\t\t\t\"etbe0\": \"<string>\",\n\t\t\t\t\"in_212\": \"<string>\",\n\t\t\t\t\"nostrudff_\": \"<string>\",\n\t\t\t\t\"dolore7\": \"<string>\",\n\t\t\t\t\"consectetur_5\": \"<string>\",\n\t\t\t\t\"nisi7a\": \"<string>\",\n\t\t\t\t\"cupidatat_71\": \"<string>\",\n\t\t\t\t\"amet_08\": \"<string>\",\n\t\t\t\t\"ipsumc9a\": \"<string>\",\n\t\t\t\t\"qui7\": \"<string>\",\n\t\t\t\t\"anima54\": \"<string>\",\n\t\t\t\t\"elit_85e\": \"<string>\",\n\t\t\t\t\"exercitation71\": \"<string>\",\n\t\t\t\t\"aliquip_9\": \"<string>\",\n\t\t\t\t\"adipisicing_fb\": \"<string>\",\n\t\t\t\t\"adipisicing800\": \"<string>\",\n\t\t\t\t\"dolore_b90\": \"<string>\",\n\t\t\t\t\"veniam_33\": \"<string>\",\n\t\t\t\t\"commodo8\": \"<string>\",\n\t\t\t\t\"eiusmoda\": \"<string>\",\n\t\t\t\t\"sunt7\": \"<string>\",\n\t\t\t\t\"amet16\": \"<string>\",\n\t\t\t\t\"ex05\": \"<string>\",\n\t\t\t\t\"consectetur_728\": \"<string>\",\n\t\t\t\t\"commodo__b\": \"<string>\",\n\t\t\t\t\"dolor_9ba\": \"<string>\",\n\t\t\t\t\"tempor_16f\": \"<string>\",\n\t\t\t\t\"cillum_1_\": \"<string>\",\n\t\t\t\t\"commodo65\": \"<string>\",\n\t\t\t\t\"officiaa0_\": \"<string>\",\n\t\t\t\t\"nostrud_432\": \"<string>\",\n\t\t\t\t\"dolor_591\": \"<string>\",\n\t\t\t\t\"nostrud5\": \"<string>\",\n\t\t\t\t\"non3\": \"<string>\",\n\t\t\t\t\"labore_f\": \"<string>\",\n\t\t\t\t\"aliquip_f_a\": \"<string>\",\n\t\t\t\t\"laborum_3_\": \"<string>\",\n\t\t\t\t\"amet_6bc\": \"<string>\",\n\t\t\t\t\"officia_2\": \"<string>\",\n\t\t\t\t\"anim_475\": \"<string>\",\n\t\t\t\t\"consecteturb\": \"<string>\",\n\t\t\t\t\"ut_ba\": \"<string>\",\n\t\t\t\t\"quiba6\": \"<string>\",\n\t\t\t\t\"fugiat_\": \"<string>\",\n\t\t\t\t\"quis357\": \"<string>\",\n\t\t\t\t\"qui_945\": \"<string>\",\n\t\t\t\t\"occaecat5\": \"<string>\",\n\t\t\t\t\"Ut_f\": \"<string>\",\n\t\t\t\t\"est5\": \"<string>\",\n\t\t\t\t\"laborum_6b_\": \"<string>\",\n\t\t\t\t\"non_75\": \"<string>\",\n\t\t\t\t\"est_ee\": \"<string>\",\n\t\t\t\t\"irure7\": \"<string>\",\n\t\t\t\t\"aliquipf\": \"<string>\",\n\t\t\t\t\"deseruntb7\": \"<string>\",\n\t\t\t\t\"in00\": \"<string>\",\n\t\t\t\t\"sed_25\": \"<string>\",\n\t\t\t\t\"irure_2\": \"<string>\",\n\t\t\t\t\"idc5\": \"<string>\",\n\t\t\t\t\"fugiat_0\": \"<string>\",\n\t\t\t\t\"anim_9ff\": \"<string>\",\n\t\t\t\t\"commodo_0\": \"<string>\",\n\t\t\t\t\"nostrude\": \"<string>\",\n\t\t\t\t\"commodo70\": \"<string>\",\n\t\t\t\t\"laborum__\": \"<string>\",\n\t\t\t\t\"dolor_cd3\": \"<string>\",\n\t\t\t\t\"magna_abb\": \"<string>\",\n\t\t\t\t\"pariature\": \"<string>\",\n\t\t\t\t\"cupidatatb30\": \"<string>\",\n\t\t\t\t\"non0\": \"<string>\",\n\t\t\t\t\"minim_4b\": \"<string>\",\n\t\t\t\t\"eiusmod7\": \"<string>\",\n\t\t\t\t\"in44\": \"<string>\",\n\t\t\t\t\"ex_1\": \"<string>\",\n\t\t\t\t\"cupidatat_a7\": \"<string>\",\n\t\t\t\t\"ipsuma\": \"<string>\",\n\t\t\t\t\"deserunt_1\": \"<string>\",\n\t\t\t\t\"pariatur_ab\": \"<string>\",\n\t\t\t\t\"quis5\": \"<string>\",\n\t\t\t\t\"Excepteur_fa\": \"<string>\",\n\t\t\t\t\"ipsumd9\": \"<string>\",\n\t\t\t\t\"adipisicing_c6\": \"<string>\",\n\t\t\t\t\"ullamcof_9\": \"<string>\",\n\t\t\t\t\"laboris_89e\": \"<string>\",\n\t\t\t\t\"animda2\": \"<string>\",\n\t\t\t\t\"quib\": \"<string>\",\n\t\t\t\t\"Loremb9\": \"<string>\",\n\t\t\t\t\"dolore0c\": \"<string>\",\n\t\t\t\t\"voluptate_9b\": \"<string>\",\n\t\t\t\t\"eiusmode12\": \"<string>\",\n\t\t\t\t\"consectetur_eb\": \"<string>\",\n\t\t\t\t\"nostrud_72c\": \"<string>\",\n\t\t\t\t\"labore_e1b\": \"<string>\",\n\t\t\t\t\"aute_918\": \"<string>\",\n\t\t\t\t\"ex_a3\": \"<string>\",\n\t\t\t\t\"sed07\": \"<string>\",\n\t\t\t\t\"eu2\": \"<string>\",\n\t\t\t\t\"ipsum7\": \"<string>\",\n\t\t\t\t\"pariatur_e\": \"<string>\",\n\t\t\t\t\"adipisicingaef\": \"<string>\",\n\t\t\t\t\"in_e8a\": \"<string>\",\n\t\t\t\t\"officia_ea_\": \"<string>\",\n\t\t\t\t\"tempor3a8\": \"<string>\",\n\t\t\t\t\"sit_fad\": \"<string>\",\n\t\t\t\t\"qui872\": \"<string>\",\n\t\t\t\t\"ea3\": \"<string>\",\n\t\t\t\t\"dolor_e62\": \"<string>\",\n\t\t\t\t\"aute0c\": \"<string>\",\n\t\t\t\t\"exercitation77\": \"<string>\",\n\t\t\t\t\"cupidatat5ff\": \"<string>\",\n\t\t\t\t\"enimbf\": \"<string>\",\n\t\t\t\t\"aliqua_3\": \"<string>\",\n\t\t\t\t\"Lorem718\": \"<string>\",\n\t\t\t\t\"dolore_11\": \"<string>\",\n\t\t\t\t\"eiusmod83b\": \"<string>\",\n\t\t\t\t\"proident9\": \"<string>\",\n\t\t\t\t\"velit440\": \"<string>\",\n\t\t\t\t\"laboris_3\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve an Authentication Provider",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												"authentication-providers",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Authentication Provider ID"
												}
											]
										},
										"description": "Retrieve an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_START\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_FAIL"
									},
									"response": [
										{
											"name": "Authentication Provider retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"redirectUrl\": \"<uri>\",\n\t\"url\": \"<uri>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"sit_64\": \"<string>\",\n\t\t\"ex_c\": \"<string>\",\n\t\t\"qui_a1f\": \"<string>\",\n\t\t\"nisi1\": \"<string>\",\n\t\t\"deserunt3f\": \"<string>\",\n\t\t\"est_aa\": \"<string>\",\n\t\t\"laboris_\": \"<string>\",\n\t\t\"eac\": \"<string>\",\n\t\t\"anim8b\": \"<string>\",\n\t\t\"aute3\": \"<string>\",\n\t\t\"mollitb1\": \"<string>\",\n\t\t\"ad_8\": \"<string>\",\n\t\t\"voluptate_62\": \"<string>\",\n\t\t\"ut5_6\": \"<string>\",\n\t\t\"iruree\": \"<string>\",\n\t\t\"cillum0\": \"<string>\",\n\t\t\"nulla_a6\": \"<string>\",\n\t\t\"cillum7\": \"<string>\",\n\t\t\"irure4\": \"<string>\",\n\t\t\"sed9\": \"<string>\",\n\t\t\"doloreb11\": \"<string>\",\n\t\t\"ex_96\": \"<string>\",\n\t\t\"este76\": \"<string>\",\n\t\t\"est_b\": \"<string>\",\n\t\t\"eae9\": \"<string>\",\n\t\t\"Excepteur6\": \"<string>\",\n\t\t\"consectetur3b\": \"<string>\",\n\t\t\"velitf3\": \"<string>\",\n\t\t\"Lorem3cc\": \"<string>\",\n\t\t\"aliqua6c\": \"<string>\",\n\t\t\"officia6\": \"<string>\",\n\t\t\"aliqua2\": \"<string>\",\n\t\t\"et_b55\": \"<string>\",\n\t\t\"non60f\": \"<string>\",\n\t\t\"aliqua_b8\": \"<string>\",\n\t\t\"velit_0\": \"<string>\",\n\t\t\"tempor_5cc\": \"<string>\",\n\t\t\"ut_39e\": \"<string>\",\n\t\t\"mollit_6\": \"<string>\",\n\t\t\"tempor0a\": \"<string>\",\n\t\t\"exercitation_ae8\": \"<string>\",\n\t\t\"enim8c0\": \"<string>\",\n\t\t\"ut_\": \"<string>\",\n\t\t\"Duis5b\": \"<string>\",\n\t\t\"inc\": \"<string>\",\n\t\t\"irure_40a\": \"<string>\",\n\t\t\"in_653\": \"<string>\",\n\t\t\"sunt_c0\": \"<string>\",\n\t\t\"pariatur8\": \"<string>\",\n\t\t\"reprehenderit_b\": \"<string>\",\n\t\t\"aliquip_e5\": \"<string>\",\n\t\t\"doloree2e\": \"<string>\",\n\t\t\"consequat__\": \"<string>\",\n\t\t\"reprehenderit8_\": \"<string>\",\n\t\t\"dolor0\": \"<string>\",\n\t\t\"ad_55\": \"<string>\",\n\t\t\"exe0_\": \"<string>\",\n\t\t\"aute_d5\": \"<string>\",\n\t\t\"incididunt06c\": \"<string>\",\n\t\t\"aliqua_9\": \"<string>\",\n\t\t\"est_b38\": \"<string>\",\n\t\t\"velit_8a_\": \"<string>\",\n\t\t\"dolore_e\": \"<string>\",\n\t\t\"ipsum_b\": \"<string>\",\n\t\t\"adipisicing_f\": \"<string>\",\n\t\t\"tempor85e\": \"<string>\",\n\t\t\"eiusmod_61\": \"<string>\",\n\t\t\"exercitation_e4d\": \"<string>\",\n\t\t\"aliquip_2\": \"<string>\",\n\t\t\"aute_0a\": \"<string>\",\n\t\t\"in_5b9\": \"<string>\",\n\t\t\"consequat890\": \"<string>\",\n\t\t\"non_fd\": \"<string>\",\n\t\t\"cupidatat_15\": \"<string>\",\n\t\t\"cupidatat_0\": \"<string>\",\n\t\t\"magna7\": \"<string>\",\n\t\t\"eu_7\": \"<string>\",\n\t\t\"in17\": \"<string>\",\n\t\t\"laborisa\": \"<string>\",\n\t\t\"ut_25\": \"<string>\",\n\t\t\"in_4\": \"<string>\",\n\t\t\"ullamcoc\": \"<string>\",\n\t\t\"Duis_c\": \"<string>\",\n\t\t\"aliqua_ac\": \"<string>\",\n\t\t\"occaecat_ee0\": \"<string>\",\n\t\t\"laborum1d\": \"<string>\",\n\t\t\"ida\": \"<string>\",\n\t\t\"sed_a5c\": \"<string>\",\n\t\t\"Excepteur_1c\": \"<string>\",\n\t\t\"consectetur_fa_\": \"<string>\",\n\t\t\"amet35_\": \"<string>\",\n\t\t\"consectetur4\": \"<string>\",\n\t\t\"labored98\": \"<string>\",\n\t\t\"velit3\": \"<string>\",\n\t\t\"commodo__\": \"<string>\",\n\t\t\"Ut4\": \"<string>\",\n\t\t\"exfc\": \"<string>\",\n\t\t\"sed_4c2\": \"<string>\",\n\t\t\"veniam_7\": \"<string>\",\n\t\t\"dolore_\": \"<string>\",\n\t\t\"cillum8\": \"<string>\",\n\t\t\"incididunt_b\": \"<string>\",\n\t\t\"Duis_49\": \"<string>\",\n\t\t\"quis_5\": \"<string>\",\n\t\t\"commodo_d5\": \"<string>\",\n\t\t\"culpa9\": \"<string>\",\n\t\t\"amet__\": \"<string>\",\n\t\t\"mollit_c1_\": \"<string>\",\n\t\t\"aliquaee2\": \"<string>\",\n\t\t\"Excepteur_1\": \"<string>\",\n\t\t\"deserunt39\": \"<string>\",\n\t\t\"occaecat_c3\": \"<string>\",\n\t\t\"amet3c4\": \"<string>\",\n\t\t\"aute8b\": \"<string>\",\n\t\t\"et_71d\": \"<string>\",\n\t\t\"non3\": \"<string>\",\n\t\t\"ut_b07\": \"<string>\",\n\t\t\"utd7\": \"<string>\",\n\t\t\"ex_1d\": \"<string>\",\n\t\t\"laboris13d\": \"<string>\",\n\t\t\"do_51\": \"<string>\",\n\t\t\"nostrud_0a7\": \"<string>\",\n\t\t\"sit_20e\": \"<string>\",\n\t\t\"adipisicing_696\": \"<string>\",\n\t\t\"sunt__\": \"<string>\",\n\t\t\"occaecat_ca4\": \"<string>\",\n\t\t\"veniambf\": \"<string>\",\n\t\t\"dolore7\": \"<string>\",\n\t\t\"reprehenderit_1_3\": \"<string>\",\n\t\t\"fugiat_\": \"<string>\",\n\t\t\"tempor3f5\": \"<string>\",\n\t\t\"sit_1\": \"<string>\",\n\t\t\"eudb\": \"<string>\",\n\t\t\"aute_a\": \"<string>\",\n\t\t\"consequat_08\": \"<string>\",\n\t\t\"reprehenderit3a\": \"<string>\",\n\t\t\"consectetur65_\": \"<string>\",\n\t\t\"aliquip2\": \"<string>\",\n\t\t\"velit_1b\": \"<string>\",\n\t\t\"elit_7b5\": \"<string>\",\n\t\t\"elit__\": \"<string>\",\n\t\t\"adipisicing_\": \"<string>\",\n\t\t\"laborumb\": \"<string>\",\n\t\t\"labore5aa\": \"<string>\",\n\t\t\"laboris0\": \"<string>\",\n\t\t\"incb\": \"<string>\",\n\t\t\"siteee\": \"<string>\",\n\t\t\"et_a7\": \"<string>\",\n\t\t\"sit75f\": \"<string>\",\n\t\t\"officia_a\": \"<string>\",\n\t\t\"consectetur_e4c\": \"<string>\",\n\t\t\"aute_e\": \"<string>\",\n\t\t\"Duis8c\": \"<string>\",\n\t\t\"nisied\": \"<string>\",\n\t\t\"temporfa\": \"<string>\",\n\t\t\"id3\": \"<string>\",\n\t\t\"temporf05\": \"<string>\",\n\t\t\"velit2\": \"<string>\",\n\t\t\"elit0\": \"<string>\",\n\t\t\"deserunt5\": \"<string>\",\n\t\t\"Ut_90a\": \"<string>\",\n\t\t\"ea7_a\": \"<string>\",\n\t\t\"in57\": \"<string>\",\n\t\t\"deserunt_4\": \"<string>\",\n\t\t\"ullamco__\": \"<string>\",\n\t\t\"dolorea\": \"<string>\",\n\t\t\"quis_15\": \"<string>\",\n\t\t\"consectetur6ae\": \"<string>\",\n\t\t\"exercitation59_\": \"<string>\",\n\t\t\"dolordd\": \"<string>\",\n\t\t\"in948\": \"<string>\",\n\t\t\"officiac1b\": \"<string>\",\n\t\t\"magna_63\": \"<string>\",\n\t\t\"labore_620\": \"<string>\",\n\t\t\"dolor_99\": \"<string>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Authentication Provider not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update an Authentication Provider",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"amet_85\": \"<string>\",\n\t\t\"Duis_768\": \"<string>\",\n\t\t\"Duis7\": \"<string>\",\n\t\t\"laborum_aa\": \"<string>\",\n\t\t\"amet5c\": \"<string>\",\n\t\t\"tempor7e5\": \"<string>\",\n\t\t\"laborum_8\": \"<string>\",\n\t\t\"ex3_3\": \"<string>\",\n\t\t\"ut6\": \"<string>\",\n\t\t\"sit_03\": \"<string>\",\n\t\t\"exercitation_9\": \"<string>\",\n\t\t\"nullad9\": \"<string>\",\n\t\t\"eu_48\": \"<string>\",\n\t\t\"Loremef\": \"<string>\",\n\t\t\"occaecat8\": \"<string>\",\n\t\t\"Excepteur_66\": \"<string>\",\n\t\t\"dolore_98c\": \"<string>\",\n\t\t\"incididunt_5\": \"<string>\",\n\t\t\"occaecat45\": \"<string>\",\n\t\t\"anim_3c3\": \"<string>\",\n\t\t\"sitae\": \"<string>\",\n\t\t\"sunt12\": \"<string>\",\n\t\t\"esse8\": \"<string>\",\n\t\t\"ipsumc\": \"<string>\",\n\t\t\"eu_3db\": \"<string>\",\n\t\t\"cillum_4d\": \"<string>\",\n\t\t\"cupidatat_f_7\": \"<string>\",\n\t\t\"laborum_40\": \"<string>\",\n\t\t\"sed_304\": \"<string>\",\n\t\t\"sunt_e73\": \"<string>\",\n\t\t\"deserunt_7\": \"<string>\",\n\t\t\"ipsumd\": \"<string>\",\n\t\t\"magna__2\": \"<string>\",\n\t\t\"dolore9e\": \"<string>\",\n\t\t\"ad8f\": \"<string>\",\n\t\t\"quisf9\": \"<string>\",\n\t\t\"occaecat1bc\": \"<string>\",\n\t\t\"do_a\": \"<string>\",\n\t\t\"quis_b\": \"<string>\",\n\t\t\"sint643\": \"<string>\",\n\t\t\"consequat5\": \"<string>\",\n\t\t\"commodo1\": \"<string>\",\n\t\t\"labore84\": \"<string>\",\n\t\t\"fugiatb27\": \"<string>\",\n\t\t\"ipsum0\": \"<string>\",\n\t\t\"ute\": \"<string>\",\n\t\t\"dolore_1f\": \"<string>\",\n\t\t\"veniam740\": \"<string>\",\n\t\t\"cupidatat__\": \"<string>\",\n\t\t\"labore79e\": \"<string>\",\n\t\t\"dolor_b\": \"<string>\",\n\t\t\"ullamcoa35\": \"<string>\",\n\t\t\"ute85\": \"<string>\",\n\t\t\"nulla27_\": \"<string>\",\n\t\t\"reprehenderitd\": \"<string>\",\n\t\t\"non_22\": \"<string>\",\n\t\t\"sede44\": \"<string>\",\n\t\t\"proident24\": \"<string>\",\n\t\t\"dolore_a\": \"<string>\",\n\t\t\"elit_4\": \"<string>\",\n\t\t\"mollit2d\": \"<string>\",\n\t\t\"dolore_cf\": \"<string>\",\n\t\t\"dolore_d7d\": \"<string>\",\n\t\t\"elit_cf4\": \"<string>\",\n\t\t\"add\": \"<string>\",\n\t\t\"sint3df\": \"<string>\",\n\t\t\"deserunt_4b\": \"<string>\",\n\t\t\"Excepteur_c\": \"<string>\",\n\t\t\"officia82\": \"<string>\",\n\t\t\"ut_33\": \"<string>\",\n\t\t\"Duisb\": \"<string>\",\n\t\t\"estc2c\": \"<string>\",\n\t\t\"voluptate21\": \"<string>\",\n\t\t\"exe\": \"<string>\",\n\t\t\"ead03\": \"<string>\",\n\t\t\"fugiat_52\": \"<string>\",\n\t\t\"laborum_0\": \"<string>\",\n\t\t\"fugiat_eb\": \"<string>\",\n\t\t\"dolore_f\": \"<string>\",\n\t\t\"laboris_8\": \"<string>\",\n\t\t\"fugiat14\": \"<string>\",\n\t\t\"sunt57d\": \"<string>\",\n\t\t\"aute5\": \"<string>\",\n\t\t\"dolor_b2\": \"<string>\",\n\t\t\"exercitation56_\": \"<string>\",\n\t\t\"pariatur7\": \"<string>\",\n\t\t\"deserunt_0_a\": \"<string>\",\n\t\t\"laborum3\": \"<string>\",\n\t\t\"dolorb0\": \"<string>\",\n\t\t\"exercitation477\": \"<string>\",\n\t\t\"Duis_5a\": \"<string>\",\n\t\t\"id_f50\": \"<string>\",\n\t\t\"est_4e6\": \"<string>\",\n\t\t\"sunt_8\": \"<string>\",\n\t\t\"nisi_e1\": \"<string>\",\n\t\t\"dolor_24\": \"<string>\",\n\t\t\"fugiat_0\": \"<string>\",\n\t\t\"nullaa3\": \"<string>\",\n\t\t\"velit_4\": \"<string>\",\n\t\t\"non_2\": \"<string>\",\n\t\t\"consectetur_58f\": \"<string>\",\n\t\t\"nulla2c\": \"<string>\",\n\t\t\"anim_\": \"<string>\",\n\t\t\"nulla__dd\": \"<string>\",\n\t\t\"do_293\": \"<string>\",\n\t\t\"amet_0af\": \"<string>\",\n\t\t\"ex_d\": \"<string>\",\n\t\t\"amet_e\": \"<string>\",\n\t\t\"voluptate_c\": \"<string>\",\n\t\t\"enim_d3\": \"<string>\",\n\t\t\"pariatur0b2\": \"<string>\",\n\t\t\"ea_6c1\": \"<string>\",\n\t\t\"eiusmod_5ec\": \"<string>\",\n\t\t\"consequat_eb\": \"<string>\",\n\t\t\"anim47f\": \"<string>\",\n\t\t\"cillum_54\": \"<string>\",\n\t\t\"exercitationec_\": \"<string>\",\n\t\t\"laborea5b\": \"<string>\",\n\t\t\"ea_2\": \"<string>\",\n\t\t\"et_8_a\": \"<string>\",\n\t\t\"suntb\": \"<string>\",\n\t\t\"Ut7_e\": \"<string>\",\n\t\t\"essed3\": \"<string>\",\n\t\t\"dof\": \"<string>\",\n\t\t\"mollit31\": \"<string>\",\n\t\t\"dolor_d6_\": \"<string>\",\n\t\t\"eu_579\": \"<string>\",\n\t\t\"ut_8\": \"<string>\",\n\t\t\"Excepteur29\": \"<string>\",\n\t\t\"ullamco37\": \"<string>\",\n\t\t\"ad_73b\": \"<string>\",\n\t\t\"velitb67\": \"<string>\",\n\t\t\"in_e\": \"<string>\",\n\t\t\"Ut_fa\": \"<string>\",\n\t\t\"eae\": \"<string>\",\n\t\t\"veniam_1d3\": \"<string>\",\n\t\t\"exercitation4\": \"<string>\",\n\t\t\"proident_8e\": \"<string>\",\n\t\t\"non46c\": \"<string>\",\n\t\t\"Excepteur_ae\": \"<string>\",\n\t\t\"Loremc3\": \"<string>\",\n\t\t\"in_b41\": \"<string>\",\n\t\t\"eiusmod41c\": \"<string>\",\n\t\t\"tempor_f\": \"<string>\",\n\t\t\"qui92\": \"<string>\",\n\t\t\"est_8_\": \"<string>\",\n\t\t\"nisi3\": \"<string>\",\n\t\t\"enimf47\": \"<string>\",\n\t\t\"eu_8\": \"<string>\",\n\t\t\"sunte\": \"<string>\",\n\t\t\"eiusmod_ed\": \"<string>\",\n\t\t\"reprehenderit_485\": \"<string>\",\n\t\t\"cupidatat_a\": \"<string>\",\n\t\t\"sed_81_\": \"<string>\",\n\t\t\"deserunt_da1\": \"<string>\",\n\t\t\"exercitation_b24\": \"<string>\",\n\t\t\"sit_a\": \"<string>\",\n\t\t\"qui_8\": \"<string>\",\n\t\t\"est_2\": \"<string>\",\n\t\t\"irure_\": \"<string>\",\n\t\t\"nisi_270\": \"<string>\",\n\t\t\"occaecat_47\": \"<string>\",\n\t\t\"dolor8\": \"<string>\",\n\t\t\"exercitationf2\": \"<string>\",\n\t\t\"Uta\": \"<string>\",\n\t\t\"fugiat_58d\": \"<string>\",\n\t\t\"dolor1\": \"<string>\",\n\t\t\"ipsum_4\": \"<string>\",\n\t\t\"et_\": \"<string>\",\n\t\t\"qui982\": \"<string>\",\n\t\t\"laborum0\": \"<string>\",\n\t\t\"proidentbc3\": \"<string>\",\n\t\t\"anim1\": \"<string>\",\n\t\t\"culpa_c\": \"<string>\",\n\t\t\"pariatur54b\": \"<string>\",\n\t\t\"laborisf\": \"<string>\",\n\t\t\"qui_623\": \"<string>\",\n\t\t\"culpa_b_\": \"<string>\",\n\t\t\"ea_0\": \"<string>\",\n\t\t\"culpa_8e\": \"<string>\",\n\t\t\"in_2_\": \"<string>\",\n\t\t\"esse95a\": \"<string>\",\n\t\t\"non44\": \"<string>\",\n\t\t\"Duis_85\": \"<string>\",\n\t\t\"ullamcoe\": \"<string>\",\n\t\t\"consectetur1d\": \"<string>\",\n\t\t\"culpa_6\": \"<string>\",\n\t\t\"suntb6\": \"<string>\",\n\t\t\"labore76\": \"<string>\",\n\t\t\"fugiat4\": \"<string>\",\n\t\t\"cillum74\": \"<string>\",\n\t\t\"commodoc4\": \"<string>\",\n\t\t\"laboris8\": \"<string>\",\n\t\t\"eiusmod_5e\": \"<string>\",\n\t\t\"irurefca\": \"<string>\",\n\t\t\"minima8c\": \"<string>\",\n\t\t\"doloraa7\": \"<string>\",\n\t\t\"voluptate024\": \"<string>\",\n\t\t\"magna_1\": \"<string>\",\n\t\t\"ea0\": \"<string>\",\n\t\t\"ut_62c\": \"<string>\",\n\t\t\"voluptate_f\": \"<string>\",\n\t\t\"fugiat_986\": \"<string>\",\n\t\t\"eiusmod_5b\": \"<string>\",\n\t\t\"quis_8_7\": \"<string>\",\n\t\t\"exercitation_d\": \"<string>\",\n\t\t\"ad31\": \"<string>\",\n\t\t\"laborisc04\": \"<string>\",\n\t\t\"voluptate_27f\": \"<string>\",\n\t\t\"Duis_f3f\": \"<string>\",\n\t\t\"ullamcod\": \"<string>\",\n\t\t\"magna_60\": \"<string>\",\n\t\t\"culpa_09\": \"<string>\",\n\t\t\"dolore5\": \"<string>\",\n\t\t\"exercitation_c4c\": \"<string>\",\n\t\t\"in_88\": \"<string>\",\n\t\t\"Lorem_10d\": \"<string>\",\n\t\t\"minimc2\": \"<string>\",\n\t\t\"irure_6\": \"<string>\",\n\t\t\"reprehenderitbaf\": \"<string>\",\n\t\t\"aute__3\": \"<string>\",\n\t\t\"sed_f68\": \"<string>\",\n\t\t\"sit_8a6\": \"<string>\",\n\t\t\"adipisicing_6b5\": \"<string>\",\n\t\t\"est05\": \"<string>\",\n\t\t\"sintf6\": \"<string>\",\n\t\t\"nisi_f1_\": \"<string>\",\n\t\t\"pariatur_0\": \"<string>\",\n\t\t\"quis_11\": \"<string>\",\n\t\t\"nonc7\": \"<string>\",\n\t\t\"consectetur_10\": \"<string>\",\n\t\t\"cillumf1\": \"<string>\",\n\t\t\"laborumd8f\": \"<string>\",\n\t\t\"fugiat8cf\": \"<string>\",\n\t\t\"reprehenderitf77\": \"<string>\",\n\t\t\"adf\": \"<string>\",\n\t\t\"aliquip__\": \"<string>\",\n\t\t\"veniamda\": \"<string>\",\n\t\t\"qui_e5d\": \"<string>\",\n\t\t\"irure796\": \"<string>\",\n\t\t\"enim_\": \"<string>\",\n\t\t\"ut_4f7\": \"<string>\",\n\t\t\"consequat_b\": \"<string>\",\n\t\t\"eu_0\": \"<string>\",\n\t\t\"consequat4\": \"<string>\",\n\t\t\"dolor9\": \"<string>\",\n\t\t\"sed484\": \"<string>\",\n\t\t\"pariatur19\": \"<string>\",\n\t\t\"velitf40\": \"<string>\",\n\t\t\"Ut_f3\": \"<string>\",\n\t\t\"esse_521\": \"<string>\",\n\t\t\"quis_489\": \"<string>\",\n\t\t\"eiusmod_c\": \"<string>\",\n\t\t\"laboris_2\": \"<string>\",\n\t\t\"mollit_8\": \"<string>\",\n\t\t\"nulla1\": \"<string>\",\n\t\t\"consectetur_bc\": \"<string>\",\n\t\t\"ad452\": \"<string>\",\n\t\t\"consecteturc\": \"<string>\",\n\t\t\"in_a\": \"<string>\",\n\t\t\"veniam_2\": \"<string>\",\n\t\t\"nisi7ac\": \"<string>\",\n\t\t\"estc\": \"<string>\",\n\t\t\"cillum8\": \"<string>\",\n\t\t\"dolor8d\": \"<string>\",\n\t\t\"sint2e\": \"<string>\",\n\t\t\"eiusmod_36\": \"<string>\",\n\t\t\"eiusmod_78\": \"<string>\",\n\t\t\"aliqua_6cd\": \"<string>\",\n\t\t\"ipsum_3\": \"<string>\",\n\t\t\"sint27b\": \"<string>\",\n\t\t\"amet4\": \"<string>\",\n\t\t\"magna_cfb\": \"<string>\",\n\t\t\"aliquip_c_\": \"<string>\",\n\t\t\"qui_d\": \"<string>\",\n\t\t\"deserunt_c3\": \"<string>\",\n\t\t\"ut_0\": \"<string>\",\n\t\t\"elit_d\": \"<string>\",\n\t\t\"enim_190\": \"<string>\",\n\t\t\"in22\": \"<string>\",\n\t\t\"Excepteur_00c\": \"<string>\",\n\t\t\"et_6fa\": \"<string>\",\n\t\t\"voluptate8\": \"<string>\",\n\t\t\"qui_16\": \"<string>\",\n\t\t\"dolor4_\": \"<string>\",\n\t\t\"fugiat25\": \"<string>\",\n\t\t\"exercitation_fe\": \"<string>\",\n\t\t\"non_3d5\": \"<string>\",\n\t\t\"sint8\": \"<string>\",\n\t\t\"commodofa2\": \"<string>\",\n\t\t\"laborum_6\": \"<string>\",\n\t\t\"nostrud_d1\": \"<string>\",\n\t\t\"in4a8\": \"<string>\",\n\t\t\"amet_a5\": \"<string>\",\n\t\t\"in_84\": \"<string>\",\n\t\t\"minim_82\": \"<string>\",\n\t\t\"magna84f\": \"<string>\",\n\t\t\"irure_c\": \"<string>\",\n\t\t\"qui__\": \"<string>\",\n\t\t\"sunt_81d\": \"<string>\",\n\t\t\"quic\": \"<string>\",\n\t\t\"Duis_ba_\": \"<string>\",\n\t\t\"Duisd7\": \"<string>\",\n\t\t\"sintec5\": \"<string>\",\n\t\t\"incididunt02_\": \"<string>\",\n\t\t\"nonb6\": \"<string>\",\n\t\t\"quisb7\": \"<string>\",\n\t\t\"quisbd\": \"<string>\",\n\t\t\"est_5\": \"<string>\",\n\t\t\"reprehenderita22\": \"<string>\",\n\t\t\"dolord51\": \"<string>\",\n\t\t\"anim641\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"elita_8\": \"<string>\",\n\t\t\"fugiat_29\": \"<string>\",\n\t\t\"aliquad\": \"<string>\",\n\t\t\"sunt_da\": \"<string>\",\n\t\t\"mollit_85\": \"<string>\",\n\t\t\"Ut4\": \"<string>\",\n\t\t\"quis06\": \"<string>\",\n\t\t\"laborum_97\": \"<string>\",\n\t\t\"pariatur57e\": \"<string>\",\n\t\t\"proidente1d\": \"<string>\",\n\t\t\"non126\": \"<string>\",\n\t\t\"aliquip_248\": \"<string>\",\n\t\t\"incididunt_a\": \"<string>\",\n\t\t\"proident224\": \"<string>\",\n\t\t\"cupidatat_72e\": \"<string>\",\n\t\t\"anime\": \"<string>\",\n\t\t\"doloreda\": \"<string>\",\n\t\t\"aute_e\": \"<string>\",\n\t\t\"Duisa7a\": \"<string>\",\n\t\t\"officia299\": \"<string>\",\n\t\t\"mollit_4\": \"<string>\",\n\t\t\"in502\": \"<string>\",\n\t\t\"id_6\": \"<string>\",\n\t\t\"occaecat_27\": \"<string>\",\n\t\t\"enim7\": \"<string>\",\n\t\t\"consequat8\": \"<string>\",\n\t\t\"deserunt_b\": \"<string>\",\n\t\t\"deserunt_5\": \"<string>\",\n\t\t\"ex37\": \"<string>\",\n\t\t\"dolor_e2\": \"<string>\",\n\t\t\"eiusmod_2\": \"<string>\",\n\t\t\"fugiatec\": \"<string>\",\n\t\t\"pariatur_57\": \"<string>\",\n\t\t\"adipisicing_cbc\": \"<string>\",\n\t\t\"incididunt5\": \"<string>\",\n\t\t\"qui_29_\": \"<string>\",\n\t\t\"deserunt_e\": \"<string>\",\n\t\t\"inb\": \"<string>\",\n\t\t\"qui_183\": \"<string>\",\n\t\t\"dolore_c44\": \"<string>\",\n\t\t\"Excepteur_bf\": \"<string>\",\n\t\t\"elit_e\": \"<string>\",\n\t\t\"aliqua76\": \"<string>\",\n\t\t\"laboris_b_\": \"<string>\",\n\t\t\"ipsum_6_0\": \"<string>\",\n\t\t\"cillum_233\": \"<string>\",\n\t\t\"in_895\": \"<string>\",\n\t\t\"in_7\": \"<string>\",\n\t\t\"in_e8b\": \"<string>\",\n\t\t\"officia_bc\": \"<string>\",\n\t\t\"reprehenderit_3\": \"<string>\",\n\t\t\"id_978\": \"<string>\",\n\t\t\"sitf\": \"<string>\",\n\t\t\"enim1f4\": \"<string>\",\n\t\t\"id45\": \"<string>\",\n\t\t\"elitf10\": \"<string>\",\n\t\t\"in_971\": \"<string>\",\n\t\t\"eaa\": \"<string>\",\n\t\t\"anim_c01\": \"<string>\",\n\t\t\"deseruntd40\": \"<string>\",\n\t\t\"in42\": \"<string>\",\n\t\t\"officia6fd\": \"<string>\",\n\t\t\"nonb7b\": \"<string>\",\n\t\t\"sitb1\": \"<string>\",\n\t\t\"consequat_3\": \"<string>\",\n\t\t\"do6\": \"<string>\",\n\t\t\"pariatur_3\": \"<string>\",\n\t\t\"esse6e\": \"<string>\",\n\t\t\"ea_ce\": \"<string>\",\n\t\t\"consequat2\": \"<string>\",\n\t\t\"Excepteur_2b6\": \"<string>\",\n\t\t\"adipisicing_3d5\": \"<string>\",\n\t\t\"utf\": \"<string>\",\n\t\t\"Duis0e\": \"<string>\",\n\t\t\"non_3\": \"<string>\",\n\t\t\"velit_a8\": \"<string>\",\n\t\t\"ut_48\": \"<string>\",\n\t\t\"aliquip_445\": \"<string>\",\n\t\t\"occaecat_f\": \"<string>\",\n\t\t\"labore6\": \"<string>\",\n\t\t\"magnaf5\": \"<string>\",\n\t\t\"eiusmoda\": \"<string>\",\n\t\t\"animc_\": \"<string>\",\n\t\t\"dolore29a\": \"<string>\",\n\t\t\"aute4b9\": \"<string>\",\n\t\t\"ut_c5\": \"<string>\",\n\t\t\"incididuntdd\": \"<string>\",\n\t\t\"in_3\": \"<string>\",\n\t\t\"velitef\": \"<string>\",\n\t\t\"quis_eb1\": \"<string>\",\n\t\t\"idc\": \"<string>\",\n\t\t\"amet_a\": \"<string>\",\n\t\t\"Lorem_3\": \"<string>\",\n\t\t\"reprehenderit4d8\": \"<string>\",\n\t\t\"sit_ff7\": \"<string>\",\n\t\t\"deserunt_83e\": \"<string>\",\n\t\t\"pariatur_d\": \"<string>\",\n\t\t\"Duisd\": \"<string>\",\n\t\t\"anim_33\": \"<string>\",\n\t\t\"elit_933\": \"<string>\",\n\t\t\"dolor_68\": \"<string>\",\n\t\t\"ut_0e\": \"<string>\",\n\t\t\"in_ea5\": \"<string>\",\n\t\t\"dolore29\": \"<string>\",\n\t\t\"commodo34\": \"<string>\",\n\t\t\"ex60\": \"<string>\",\n\t\t\"sedae6\": \"<string>\",\n\t\t\"ullamco_80\": \"<string>\",\n\t\t\"ex32e\": \"<string>\",\n\t\t\"ida7a\": \"<string>\",\n\t\t\"in_b\": \"<string>\",\n\t\t\"adipisicing_021\": \"<string>\",\n\t\t\"reprehenderit_46e\": \"<string>\",\n\t\t\"esse3\": \"<string>\",\n\t\t\"fugiatcb\": \"<string>\",\n\t\t\"exercitation_b3\": \"<string>\",\n\t\t\"sunt_42\": \"<string>\",\n\t\t\"ad_012\": \"<string>\",\n\t\t\"esse_6\": \"<string>\",\n\t\t\"sint_c\": \"<string>\",\n\t\t\"animd1f\": \"<string>\",\n\t\t\"aliquip_\": \"<string>\",\n\t\t\"aliqua8f8\": \"<string>\",\n\t\t\"adipisicing18\": \"<string>\",\n\t\t\"dolore_65\": \"<string>\",\n\t\t\"ullamco_7\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												"authentication-providers",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Authentication Provider ID"
												}
											]
										},
										"description": "Updates an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_UPDATE_START\n* USER_AUTHENTICATION_PROVIDER_UPDATE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_UPDATE_FAIL\n"
									},
									"response": [
										{
											"name": "Authentication Provider updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"amet_85\": \"<string>\",\n\t\t\"Duis_768\": \"<string>\",\n\t\t\"Duis7\": \"<string>\",\n\t\t\"laborum_aa\": \"<string>\",\n\t\t\"amet5c\": \"<string>\",\n\t\t\"tempor7e5\": \"<string>\",\n\t\t\"laborum_8\": \"<string>\",\n\t\t\"ex3_3\": \"<string>\",\n\t\t\"ut6\": \"<string>\",\n\t\t\"sit_03\": \"<string>\",\n\t\t\"exercitation_9\": \"<string>\",\n\t\t\"nullad9\": \"<string>\",\n\t\t\"eu_48\": \"<string>\",\n\t\t\"Loremef\": \"<string>\",\n\t\t\"occaecat8\": \"<string>\",\n\t\t\"Excepteur_66\": \"<string>\",\n\t\t\"dolore_98c\": \"<string>\",\n\t\t\"incididunt_5\": \"<string>\",\n\t\t\"occaecat45\": \"<string>\",\n\t\t\"anim_3c3\": \"<string>\",\n\t\t\"sitae\": \"<string>\",\n\t\t\"sunt12\": \"<string>\",\n\t\t\"esse8\": \"<string>\",\n\t\t\"ipsumc\": \"<string>\",\n\t\t\"eu_3db\": \"<string>\",\n\t\t\"cillum_4d\": \"<string>\",\n\t\t\"cupidatat_f_7\": \"<string>\",\n\t\t\"laborum_40\": \"<string>\",\n\t\t\"sed_304\": \"<string>\",\n\t\t\"sunt_e73\": \"<string>\",\n\t\t\"deserunt_7\": \"<string>\",\n\t\t\"ipsumd\": \"<string>\",\n\t\t\"magna__2\": \"<string>\",\n\t\t\"dolore9e\": \"<string>\",\n\t\t\"ad8f\": \"<string>\",\n\t\t\"quisf9\": \"<string>\",\n\t\t\"occaecat1bc\": \"<string>\",\n\t\t\"do_a\": \"<string>\",\n\t\t\"quis_b\": \"<string>\",\n\t\t\"sint643\": \"<string>\",\n\t\t\"consequat5\": \"<string>\",\n\t\t\"commodo1\": \"<string>\",\n\t\t\"labore84\": \"<string>\",\n\t\t\"fugiatb27\": \"<string>\",\n\t\t\"ipsum0\": \"<string>\",\n\t\t\"ute\": \"<string>\",\n\t\t\"dolore_1f\": \"<string>\",\n\t\t\"veniam740\": \"<string>\",\n\t\t\"cupidatat__\": \"<string>\",\n\t\t\"labore79e\": \"<string>\",\n\t\t\"dolor_b\": \"<string>\",\n\t\t\"ullamcoa35\": \"<string>\",\n\t\t\"ute85\": \"<string>\",\n\t\t\"nulla27_\": \"<string>\",\n\t\t\"reprehenderitd\": \"<string>\",\n\t\t\"non_22\": \"<string>\",\n\t\t\"sede44\": \"<string>\",\n\t\t\"proident24\": \"<string>\",\n\t\t\"dolore_a\": \"<string>\",\n\t\t\"elit_4\": \"<string>\",\n\t\t\"mollit2d\": \"<string>\",\n\t\t\"dolore_cf\": \"<string>\",\n\t\t\"dolore_d7d\": \"<string>\",\n\t\t\"elit_cf4\": \"<string>\",\n\t\t\"add\": \"<string>\",\n\t\t\"sint3df\": \"<string>\",\n\t\t\"deserunt_4b\": \"<string>\",\n\t\t\"Excepteur_c\": \"<string>\",\n\t\t\"officia82\": \"<string>\",\n\t\t\"ut_33\": \"<string>\",\n\t\t\"Duisb\": \"<string>\",\n\t\t\"estc2c\": \"<string>\",\n\t\t\"voluptate21\": \"<string>\",\n\t\t\"exe\": \"<string>\",\n\t\t\"ead03\": \"<string>\",\n\t\t\"fugiat_52\": \"<string>\",\n\t\t\"laborum_0\": \"<string>\",\n\t\t\"fugiat_eb\": \"<string>\",\n\t\t\"dolore_f\": \"<string>\",\n\t\t\"laboris_8\": \"<string>\",\n\t\t\"fugiat14\": \"<string>\",\n\t\t\"sunt57d\": \"<string>\",\n\t\t\"aute5\": \"<string>\",\n\t\t\"dolor_b2\": \"<string>\",\n\t\t\"exercitation56_\": \"<string>\",\n\t\t\"pariatur7\": \"<string>\",\n\t\t\"deserunt_0_a\": \"<string>\",\n\t\t\"laborum3\": \"<string>\",\n\t\t\"dolorb0\": \"<string>\",\n\t\t\"exercitation477\": \"<string>\",\n\t\t\"Duis_5a\": \"<string>\",\n\t\t\"id_f50\": \"<string>\",\n\t\t\"est_4e6\": \"<string>\",\n\t\t\"sunt_8\": \"<string>\",\n\t\t\"nisi_e1\": \"<string>\",\n\t\t\"dolor_24\": \"<string>\",\n\t\t\"fugiat_0\": \"<string>\",\n\t\t\"nullaa3\": \"<string>\",\n\t\t\"velit_4\": \"<string>\",\n\t\t\"non_2\": \"<string>\",\n\t\t\"consectetur_58f\": \"<string>\",\n\t\t\"nulla2c\": \"<string>\",\n\t\t\"anim_\": \"<string>\",\n\t\t\"nulla__dd\": \"<string>\",\n\t\t\"do_293\": \"<string>\",\n\t\t\"amet_0af\": \"<string>\",\n\t\t\"ex_d\": \"<string>\",\n\t\t\"amet_e\": \"<string>\",\n\t\t\"voluptate_c\": \"<string>\",\n\t\t\"enim_d3\": \"<string>\",\n\t\t\"pariatur0b2\": \"<string>\",\n\t\t\"ea_6c1\": \"<string>\",\n\t\t\"eiusmod_5ec\": \"<string>\",\n\t\t\"consequat_eb\": \"<string>\",\n\t\t\"anim47f\": \"<string>\",\n\t\t\"cillum_54\": \"<string>\",\n\t\t\"exercitationec_\": \"<string>\",\n\t\t\"laborea5b\": \"<string>\",\n\t\t\"ea_2\": \"<string>\",\n\t\t\"et_8_a\": \"<string>\",\n\t\t\"suntb\": \"<string>\",\n\t\t\"Ut7_e\": \"<string>\",\n\t\t\"essed3\": \"<string>\",\n\t\t\"dof\": \"<string>\",\n\t\t\"mollit31\": \"<string>\",\n\t\t\"dolor_d6_\": \"<string>\",\n\t\t\"eu_579\": \"<string>\",\n\t\t\"ut_8\": \"<string>\",\n\t\t\"Excepteur29\": \"<string>\",\n\t\t\"ullamco37\": \"<string>\",\n\t\t\"ad_73b\": \"<string>\",\n\t\t\"velitb67\": \"<string>\",\n\t\t\"in_e\": \"<string>\",\n\t\t\"Ut_fa\": \"<string>\",\n\t\t\"eae\": \"<string>\",\n\t\t\"veniam_1d3\": \"<string>\",\n\t\t\"exercitation4\": \"<string>\",\n\t\t\"proident_8e\": \"<string>\",\n\t\t\"non46c\": \"<string>\",\n\t\t\"Excepteur_ae\": \"<string>\",\n\t\t\"Loremc3\": \"<string>\",\n\t\t\"in_b41\": \"<string>\",\n\t\t\"eiusmod41c\": \"<string>\",\n\t\t\"tempor_f\": \"<string>\",\n\t\t\"qui92\": \"<string>\",\n\t\t\"est_8_\": \"<string>\",\n\t\t\"nisi3\": \"<string>\",\n\t\t\"enimf47\": \"<string>\",\n\t\t\"eu_8\": \"<string>\",\n\t\t\"sunte\": \"<string>\",\n\t\t\"eiusmod_ed\": \"<string>\",\n\t\t\"reprehenderit_485\": \"<string>\",\n\t\t\"cupidatat_a\": \"<string>\",\n\t\t\"sed_81_\": \"<string>\",\n\t\t\"deserunt_da1\": \"<string>\",\n\t\t\"exercitation_b24\": \"<string>\",\n\t\t\"sit_a\": \"<string>\",\n\t\t\"qui_8\": \"<string>\",\n\t\t\"est_2\": \"<string>\",\n\t\t\"irure_\": \"<string>\",\n\t\t\"nisi_270\": \"<string>\",\n\t\t\"occaecat_47\": \"<string>\",\n\t\t\"dolor8\": \"<string>\",\n\t\t\"exercitationf2\": \"<string>\",\n\t\t\"Uta\": \"<string>\",\n\t\t\"fugiat_58d\": \"<string>\",\n\t\t\"dolor1\": \"<string>\",\n\t\t\"ipsum_4\": \"<string>\",\n\t\t\"et_\": \"<string>\",\n\t\t\"qui982\": \"<string>\",\n\t\t\"laborum0\": \"<string>\",\n\t\t\"proidentbc3\": \"<string>\",\n\t\t\"anim1\": \"<string>\",\n\t\t\"culpa_c\": \"<string>\",\n\t\t\"pariatur54b\": \"<string>\",\n\t\t\"laborisf\": \"<string>\",\n\t\t\"qui_623\": \"<string>\",\n\t\t\"culpa_b_\": \"<string>\",\n\t\t\"ea_0\": \"<string>\",\n\t\t\"culpa_8e\": \"<string>\",\n\t\t\"in_2_\": \"<string>\",\n\t\t\"esse95a\": \"<string>\",\n\t\t\"non44\": \"<string>\",\n\t\t\"Duis_85\": \"<string>\",\n\t\t\"ullamcoe\": \"<string>\",\n\t\t\"consectetur1d\": \"<string>\",\n\t\t\"culpa_6\": \"<string>\",\n\t\t\"suntb6\": \"<string>\",\n\t\t\"labore76\": \"<string>\",\n\t\t\"fugiat4\": \"<string>\",\n\t\t\"cillum74\": \"<string>\",\n\t\t\"commodoc4\": \"<string>\",\n\t\t\"laboris8\": \"<string>\",\n\t\t\"eiusmod_5e\": \"<string>\",\n\t\t\"irurefca\": \"<string>\",\n\t\t\"minima8c\": \"<string>\",\n\t\t\"doloraa7\": \"<string>\",\n\t\t\"voluptate024\": \"<string>\",\n\t\t\"magna_1\": \"<string>\",\n\t\t\"ea0\": \"<string>\",\n\t\t\"ut_62c\": \"<string>\",\n\t\t\"voluptate_f\": \"<string>\",\n\t\t\"fugiat_986\": \"<string>\",\n\t\t\"eiusmod_5b\": \"<string>\",\n\t\t\"quis_8_7\": \"<string>\",\n\t\t\"exercitation_d\": \"<string>\",\n\t\t\"ad31\": \"<string>\",\n\t\t\"laborisc04\": \"<string>\",\n\t\t\"voluptate_27f\": \"<string>\",\n\t\t\"Duis_f3f\": \"<string>\",\n\t\t\"ullamcod\": \"<string>\",\n\t\t\"magna_60\": \"<string>\",\n\t\t\"culpa_09\": \"<string>\",\n\t\t\"dolore5\": \"<string>\",\n\t\t\"exercitation_c4c\": \"<string>\",\n\t\t\"in_88\": \"<string>\",\n\t\t\"Lorem_10d\": \"<string>\",\n\t\t\"minimc2\": \"<string>\",\n\t\t\"irure_6\": \"<string>\",\n\t\t\"reprehenderitbaf\": \"<string>\",\n\t\t\"aute__3\": \"<string>\",\n\t\t\"sed_f68\": \"<string>\",\n\t\t\"sit_8a6\": \"<string>\",\n\t\t\"adipisicing_6b5\": \"<string>\",\n\t\t\"est05\": \"<string>\",\n\t\t\"sintf6\": \"<string>\",\n\t\t\"nisi_f1_\": \"<string>\",\n\t\t\"pariatur_0\": \"<string>\",\n\t\t\"quis_11\": \"<string>\",\n\t\t\"nonc7\": \"<string>\",\n\t\t\"consectetur_10\": \"<string>\",\n\t\t\"cillumf1\": \"<string>\",\n\t\t\"laborumd8f\": \"<string>\",\n\t\t\"fugiat8cf\": \"<string>\",\n\t\t\"reprehenderitf77\": \"<string>\",\n\t\t\"adf\": \"<string>\",\n\t\t\"aliquip__\": \"<string>\",\n\t\t\"veniamda\": \"<string>\",\n\t\t\"qui_e5d\": \"<string>\",\n\t\t\"irure796\": \"<string>\",\n\t\t\"enim_\": \"<string>\",\n\t\t\"ut_4f7\": \"<string>\",\n\t\t\"consequat_b\": \"<string>\",\n\t\t\"eu_0\": \"<string>\",\n\t\t\"consequat4\": \"<string>\",\n\t\t\"dolor9\": \"<string>\",\n\t\t\"sed484\": \"<string>\",\n\t\t\"pariatur19\": \"<string>\",\n\t\t\"velitf40\": \"<string>\",\n\t\t\"Ut_f3\": \"<string>\",\n\t\t\"esse_521\": \"<string>\",\n\t\t\"quis_489\": \"<string>\",\n\t\t\"eiusmod_c\": \"<string>\",\n\t\t\"laboris_2\": \"<string>\",\n\t\t\"mollit_8\": \"<string>\",\n\t\t\"nulla1\": \"<string>\",\n\t\t\"consectetur_bc\": \"<string>\",\n\t\t\"ad452\": \"<string>\",\n\t\t\"consecteturc\": \"<string>\",\n\t\t\"in_a\": \"<string>\",\n\t\t\"veniam_2\": \"<string>\",\n\t\t\"nisi7ac\": \"<string>\",\n\t\t\"estc\": \"<string>\",\n\t\t\"cillum8\": \"<string>\",\n\t\t\"dolor8d\": \"<string>\",\n\t\t\"sint2e\": \"<string>\",\n\t\t\"eiusmod_36\": \"<string>\",\n\t\t\"eiusmod_78\": \"<string>\",\n\t\t\"aliqua_6cd\": \"<string>\",\n\t\t\"ipsum_3\": \"<string>\",\n\t\t\"sint27b\": \"<string>\",\n\t\t\"amet4\": \"<string>\",\n\t\t\"magna_cfb\": \"<string>\",\n\t\t\"aliquip_c_\": \"<string>\",\n\t\t\"qui_d\": \"<string>\",\n\t\t\"deserunt_c3\": \"<string>\",\n\t\t\"ut_0\": \"<string>\",\n\t\t\"elit_d\": \"<string>\",\n\t\t\"enim_190\": \"<string>\",\n\t\t\"in22\": \"<string>\",\n\t\t\"Excepteur_00c\": \"<string>\",\n\t\t\"et_6fa\": \"<string>\",\n\t\t\"voluptate8\": \"<string>\",\n\t\t\"qui_16\": \"<string>\",\n\t\t\"dolor4_\": \"<string>\",\n\t\t\"fugiat25\": \"<string>\",\n\t\t\"exercitation_fe\": \"<string>\",\n\t\t\"non_3d5\": \"<string>\",\n\t\t\"sint8\": \"<string>\",\n\t\t\"commodofa2\": \"<string>\",\n\t\t\"laborum_6\": \"<string>\",\n\t\t\"nostrud_d1\": \"<string>\",\n\t\t\"in4a8\": \"<string>\",\n\t\t\"amet_a5\": \"<string>\",\n\t\t\"in_84\": \"<string>\",\n\t\t\"minim_82\": \"<string>\",\n\t\t\"magna84f\": \"<string>\",\n\t\t\"irure_c\": \"<string>\",\n\t\t\"qui__\": \"<string>\",\n\t\t\"sunt_81d\": \"<string>\",\n\t\t\"quic\": \"<string>\",\n\t\t\"Duis_ba_\": \"<string>\",\n\t\t\"Duisd7\": \"<string>\",\n\t\t\"sintec5\": \"<string>\",\n\t\t\"incididunt02_\": \"<string>\",\n\t\t\"nonb6\": \"<string>\",\n\t\t\"quisb7\": \"<string>\",\n\t\t\"quisbd\": \"<string>\",\n\t\t\"est_5\": \"<string>\",\n\t\t\"reprehenderita22\": \"<string>\",\n\t\t\"dolord51\": \"<string>\",\n\t\t\"anim641\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"elita_8\": \"<string>\",\n\t\t\"fugiat_29\": \"<string>\",\n\t\t\"aliquad\": \"<string>\",\n\t\t\"sunt_da\": \"<string>\",\n\t\t\"mollit_85\": \"<string>\",\n\t\t\"Ut4\": \"<string>\",\n\t\t\"quis06\": \"<string>\",\n\t\t\"laborum_97\": \"<string>\",\n\t\t\"pariatur57e\": \"<string>\",\n\t\t\"proidente1d\": \"<string>\",\n\t\t\"non126\": \"<string>\",\n\t\t\"aliquip_248\": \"<string>\",\n\t\t\"incididunt_a\": \"<string>\",\n\t\t\"proident224\": \"<string>\",\n\t\t\"cupidatat_72e\": \"<string>\",\n\t\t\"anime\": \"<string>\",\n\t\t\"doloreda\": \"<string>\",\n\t\t\"aute_e\": \"<string>\",\n\t\t\"Duisa7a\": \"<string>\",\n\t\t\"officia299\": \"<string>\",\n\t\t\"mollit_4\": \"<string>\",\n\t\t\"in502\": \"<string>\",\n\t\t\"id_6\": \"<string>\",\n\t\t\"occaecat_27\": \"<string>\",\n\t\t\"enim7\": \"<string>\",\n\t\t\"consequat8\": \"<string>\",\n\t\t\"deserunt_b\": \"<string>\",\n\t\t\"deserunt_5\": \"<string>\",\n\t\t\"ex37\": \"<string>\",\n\t\t\"dolor_e2\": \"<string>\",\n\t\t\"eiusmod_2\": \"<string>\",\n\t\t\"fugiatec\": \"<string>\",\n\t\t\"pariatur_57\": \"<string>\",\n\t\t\"adipisicing_cbc\": \"<string>\",\n\t\t\"incididunt5\": \"<string>\",\n\t\t\"qui_29_\": \"<string>\",\n\t\t\"deserunt_e\": \"<string>\",\n\t\t\"inb\": \"<string>\",\n\t\t\"qui_183\": \"<string>\",\n\t\t\"dolore_c44\": \"<string>\",\n\t\t\"Excepteur_bf\": \"<string>\",\n\t\t\"elit_e\": \"<string>\",\n\t\t\"aliqua76\": \"<string>\",\n\t\t\"laboris_b_\": \"<string>\",\n\t\t\"ipsum_6_0\": \"<string>\",\n\t\t\"cillum_233\": \"<string>\",\n\t\t\"in_895\": \"<string>\",\n\t\t\"in_7\": \"<string>\",\n\t\t\"in_e8b\": \"<string>\",\n\t\t\"officia_bc\": \"<string>\",\n\t\t\"reprehenderit_3\": \"<string>\",\n\t\t\"id_978\": \"<string>\",\n\t\t\"sitf\": \"<string>\",\n\t\t\"enim1f4\": \"<string>\",\n\t\t\"id45\": \"<string>\",\n\t\t\"elitf10\": \"<string>\",\n\t\t\"in_971\": \"<string>\",\n\t\t\"eaa\": \"<string>\",\n\t\t\"anim_c01\": \"<string>\",\n\t\t\"deseruntd40\": \"<string>\",\n\t\t\"in42\": \"<string>\",\n\t\t\"officia6fd\": \"<string>\",\n\t\t\"nonb7b\": \"<string>\",\n\t\t\"sitb1\": \"<string>\",\n\t\t\"consequat_3\": \"<string>\",\n\t\t\"do6\": \"<string>\",\n\t\t\"pariatur_3\": \"<string>\",\n\t\t\"esse6e\": \"<string>\",\n\t\t\"ea_ce\": \"<string>\",\n\t\t\"consequat2\": \"<string>\",\n\t\t\"Excepteur_2b6\": \"<string>\",\n\t\t\"adipisicing_3d5\": \"<string>\",\n\t\t\"utf\": \"<string>\",\n\t\t\"Duis0e\": \"<string>\",\n\t\t\"non_3\": \"<string>\",\n\t\t\"velit_a8\": \"<string>\",\n\t\t\"ut_48\": \"<string>\",\n\t\t\"aliquip_445\": \"<string>\",\n\t\t\"occaecat_f\": \"<string>\",\n\t\t\"labore6\": \"<string>\",\n\t\t\"magnaf5\": \"<string>\",\n\t\t\"eiusmoda\": \"<string>\",\n\t\t\"animc_\": \"<string>\",\n\t\t\"dolore29a\": \"<string>\",\n\t\t\"aute4b9\": \"<string>\",\n\t\t\"ut_c5\": \"<string>\",\n\t\t\"incididuntdd\": \"<string>\",\n\t\t\"in_3\": \"<string>\",\n\t\t\"velitef\": \"<string>\",\n\t\t\"quis_eb1\": \"<string>\",\n\t\t\"idc\": \"<string>\",\n\t\t\"amet_a\": \"<string>\",\n\t\t\"Lorem_3\": \"<string>\",\n\t\t\"reprehenderit4d8\": \"<string>\",\n\t\t\"sit_ff7\": \"<string>\",\n\t\t\"deserunt_83e\": \"<string>\",\n\t\t\"pariatur_d\": \"<string>\",\n\t\t\"Duisd\": \"<string>\",\n\t\t\"anim_33\": \"<string>\",\n\t\t\"elit_933\": \"<string>\",\n\t\t\"dolor_68\": \"<string>\",\n\t\t\"ut_0e\": \"<string>\",\n\t\t\"in_ea5\": \"<string>\",\n\t\t\"dolore29\": \"<string>\",\n\t\t\"commodo34\": \"<string>\",\n\t\t\"ex60\": \"<string>\",\n\t\t\"sedae6\": \"<string>\",\n\t\t\"ullamco_80\": \"<string>\",\n\t\t\"ex32e\": \"<string>\",\n\t\t\"ida7a\": \"<string>\",\n\t\t\"in_b\": \"<string>\",\n\t\t\"adipisicing_021\": \"<string>\",\n\t\t\"reprehenderit_46e\": \"<string>\",\n\t\t\"esse3\": \"<string>\",\n\t\t\"fugiatcb\": \"<string>\",\n\t\t\"exercitation_b3\": \"<string>\",\n\t\t\"sunt_42\": \"<string>\",\n\t\t\"ad_012\": \"<string>\",\n\t\t\"esse_6\": \"<string>\",\n\t\t\"sint_c\": \"<string>\",\n\t\t\"animd1f\": \"<string>\",\n\t\t\"aliquip_\": \"<string>\",\n\t\t\"aliqua8f8\": \"<string>\",\n\t\t\"adipisicing18\": \"<string>\",\n\t\t\"dolore_65\": \"<string>\",\n\t\t\"ullamco_7\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"redirectUrl\": \"<uri>\",\n\t\"url\": \"<uri>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"sit_64\": \"<string>\",\n\t\t\"ex_c\": \"<string>\",\n\t\t\"qui_a1f\": \"<string>\",\n\t\t\"nisi1\": \"<string>\",\n\t\t\"deserunt3f\": \"<string>\",\n\t\t\"est_aa\": \"<string>\",\n\t\t\"laboris_\": \"<string>\",\n\t\t\"eac\": \"<string>\",\n\t\t\"anim8b\": \"<string>\",\n\t\t\"aute3\": \"<string>\",\n\t\t\"mollitb1\": \"<string>\",\n\t\t\"ad_8\": \"<string>\",\n\t\t\"voluptate_62\": \"<string>\",\n\t\t\"ut5_6\": \"<string>\",\n\t\t\"iruree\": \"<string>\",\n\t\t\"cillum0\": \"<string>\",\n\t\t\"nulla_a6\": \"<string>\",\n\t\t\"cillum7\": \"<string>\",\n\t\t\"irure4\": \"<string>\",\n\t\t\"sed9\": \"<string>\",\n\t\t\"doloreb11\": \"<string>\",\n\t\t\"ex_96\": \"<string>\",\n\t\t\"este76\": \"<string>\",\n\t\t\"est_b\": \"<string>\",\n\t\t\"eae9\": \"<string>\",\n\t\t\"Excepteur6\": \"<string>\",\n\t\t\"consectetur3b\": \"<string>\",\n\t\t\"velitf3\": \"<string>\",\n\t\t\"Lorem3cc\": \"<string>\",\n\t\t\"aliqua6c\": \"<string>\",\n\t\t\"officia6\": \"<string>\",\n\t\t\"aliqua2\": \"<string>\",\n\t\t\"et_b55\": \"<string>\",\n\t\t\"non60f\": \"<string>\",\n\t\t\"aliqua_b8\": \"<string>\",\n\t\t\"velit_0\": \"<string>\",\n\t\t\"tempor_5cc\": \"<string>\",\n\t\t\"ut_39e\": \"<string>\",\n\t\t\"mollit_6\": \"<string>\",\n\t\t\"tempor0a\": \"<string>\",\n\t\t\"exercitation_ae8\": \"<string>\",\n\t\t\"enim8c0\": \"<string>\",\n\t\t\"ut_\": \"<string>\",\n\t\t\"Duis5b\": \"<string>\",\n\t\t\"inc\": \"<string>\",\n\t\t\"irure_40a\": \"<string>\",\n\t\t\"in_653\": \"<string>\",\n\t\t\"sunt_c0\": \"<string>\",\n\t\t\"pariatur8\": \"<string>\",\n\t\t\"reprehenderit_b\": \"<string>\",\n\t\t\"aliquip_e5\": \"<string>\",\n\t\t\"doloree2e\": \"<string>\",\n\t\t\"consequat__\": \"<string>\",\n\t\t\"reprehenderit8_\": \"<string>\",\n\t\t\"dolor0\": \"<string>\",\n\t\t\"ad_55\": \"<string>\",\n\t\t\"exe0_\": \"<string>\",\n\t\t\"aute_d5\": \"<string>\",\n\t\t\"incididunt06c\": \"<string>\",\n\t\t\"aliqua_9\": \"<string>\",\n\t\t\"est_b38\": \"<string>\",\n\t\t\"velit_8a_\": \"<string>\",\n\t\t\"dolore_e\": \"<string>\",\n\t\t\"ipsum_b\": \"<string>\",\n\t\t\"adipisicing_f\": \"<string>\",\n\t\t\"tempor85e\": \"<string>\",\n\t\t\"eiusmod_61\": \"<string>\",\n\t\t\"exercitation_e4d\": \"<string>\",\n\t\t\"aliquip_2\": \"<string>\",\n\t\t\"aute_0a\": \"<string>\",\n\t\t\"in_5b9\": \"<string>\",\n\t\t\"consequat890\": \"<string>\",\n\t\t\"non_fd\": \"<string>\",\n\t\t\"cupidatat_15\": \"<string>\",\n\t\t\"cupidatat_0\": \"<string>\",\n\t\t\"magna7\": \"<string>\",\n\t\t\"eu_7\": \"<string>\",\n\t\t\"in17\": \"<string>\",\n\t\t\"laborisa\": \"<string>\",\n\t\t\"ut_25\": \"<string>\",\n\t\t\"in_4\": \"<string>\",\n\t\t\"ullamcoc\": \"<string>\",\n\t\t\"Duis_c\": \"<string>\",\n\t\t\"aliqua_ac\": \"<string>\",\n\t\t\"occaecat_ee0\": \"<string>\",\n\t\t\"laborum1d\": \"<string>\",\n\t\t\"ida\": \"<string>\",\n\t\t\"sed_a5c\": \"<string>\",\n\t\t\"Excepteur_1c\": \"<string>\",\n\t\t\"consectetur_fa_\": \"<string>\",\n\t\t\"amet35_\": \"<string>\",\n\t\t\"consectetur4\": \"<string>\",\n\t\t\"labored98\": \"<string>\",\n\t\t\"velit3\": \"<string>\",\n\t\t\"commodo__\": \"<string>\",\n\t\t\"Ut4\": \"<string>\",\n\t\t\"exfc\": \"<string>\",\n\t\t\"sed_4c2\": \"<string>\",\n\t\t\"veniam_7\": \"<string>\",\n\t\t\"dolore_\": \"<string>\",\n\t\t\"cillum8\": \"<string>\",\n\t\t\"incididunt_b\": \"<string>\",\n\t\t\"Duis_49\": \"<string>\",\n\t\t\"quis_5\": \"<string>\",\n\t\t\"commodo_d5\": \"<string>\",\n\t\t\"culpa9\": \"<string>\",\n\t\t\"amet__\": \"<string>\",\n\t\t\"mollit_c1_\": \"<string>\",\n\t\t\"aliquaee2\": \"<string>\",\n\t\t\"Excepteur_1\": \"<string>\",\n\t\t\"deserunt39\": \"<string>\",\n\t\t\"occaecat_c3\": \"<string>\",\n\t\t\"amet3c4\": \"<string>\",\n\t\t\"aute8b\": \"<string>\",\n\t\t\"et_71d\": \"<string>\",\n\t\t\"non3\": \"<string>\",\n\t\t\"ut_b07\": \"<string>\",\n\t\t\"utd7\": \"<string>\",\n\t\t\"ex_1d\": \"<string>\",\n\t\t\"laboris13d\": \"<string>\",\n\t\t\"do_51\": \"<string>\",\n\t\t\"nostrud_0a7\": \"<string>\",\n\t\t\"sit_20e\": \"<string>\",\n\t\t\"adipisicing_696\": \"<string>\",\n\t\t\"sunt__\": \"<string>\",\n\t\t\"occaecat_ca4\": \"<string>\",\n\t\t\"veniambf\": \"<string>\",\n\t\t\"dolore7\": \"<string>\",\n\t\t\"reprehenderit_1_3\": \"<string>\",\n\t\t\"fugiat_\": \"<string>\",\n\t\t\"tempor3f5\": \"<string>\",\n\t\t\"sit_1\": \"<string>\",\n\t\t\"eudb\": \"<string>\",\n\t\t\"aute_a\": \"<string>\",\n\t\t\"consequat_08\": \"<string>\",\n\t\t\"reprehenderit3a\": \"<string>\",\n\t\t\"consectetur65_\": \"<string>\",\n\t\t\"aliquip2\": \"<string>\",\n\t\t\"velit_1b\": \"<string>\",\n\t\t\"elit_7b5\": \"<string>\",\n\t\t\"elit__\": \"<string>\",\n\t\t\"adipisicing_\": \"<string>\",\n\t\t\"laborumb\": \"<string>\",\n\t\t\"labore5aa\": \"<string>\",\n\t\t\"laboris0\": \"<string>\",\n\t\t\"incb\": \"<string>\",\n\t\t\"siteee\": \"<string>\",\n\t\t\"et_a7\": \"<string>\",\n\t\t\"sit75f\": \"<string>\",\n\t\t\"officia_a\": \"<string>\",\n\t\t\"consectetur_e4c\": \"<string>\",\n\t\t\"aute_e\": \"<string>\",\n\t\t\"Duis8c\": \"<string>\",\n\t\t\"nisied\": \"<string>\",\n\t\t\"temporfa\": \"<string>\",\n\t\t\"id3\": \"<string>\",\n\t\t\"temporf05\": \"<string>\",\n\t\t\"velit2\": \"<string>\",\n\t\t\"elit0\": \"<string>\",\n\t\t\"deserunt5\": \"<string>\",\n\t\t\"Ut_90a\": \"<string>\",\n\t\t\"ea7_a\": \"<string>\",\n\t\t\"in57\": \"<string>\",\n\t\t\"deserunt_4\": \"<string>\",\n\t\t\"ullamco__\": \"<string>\",\n\t\t\"dolorea\": \"<string>\",\n\t\t\"quis_15\": \"<string>\",\n\t\t\"consectetur6ae\": \"<string>\",\n\t\t\"exercitation59_\": \"<string>\",\n\t\t\"dolordd\": \"<string>\",\n\t\t\"in948\": \"<string>\",\n\t\t\"officiac1b\": \"<string>\",\n\t\t\"magna_63\": \"<string>\",\n\t\t\"labore_620\": \"<string>\",\n\t\t\"dolor_99\": \"<string>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"amet_85\": \"<string>\",\n\t\t\"Duis_768\": \"<string>\",\n\t\t\"Duis7\": \"<string>\",\n\t\t\"laborum_aa\": \"<string>\",\n\t\t\"amet5c\": \"<string>\",\n\t\t\"tempor7e5\": \"<string>\",\n\t\t\"laborum_8\": \"<string>\",\n\t\t\"ex3_3\": \"<string>\",\n\t\t\"ut6\": \"<string>\",\n\t\t\"sit_03\": \"<string>\",\n\t\t\"exercitation_9\": \"<string>\",\n\t\t\"nullad9\": \"<string>\",\n\t\t\"eu_48\": \"<string>\",\n\t\t\"Loremef\": \"<string>\",\n\t\t\"occaecat8\": \"<string>\",\n\t\t\"Excepteur_66\": \"<string>\",\n\t\t\"dolore_98c\": \"<string>\",\n\t\t\"incididunt_5\": \"<string>\",\n\t\t\"occaecat45\": \"<string>\",\n\t\t\"anim_3c3\": \"<string>\",\n\t\t\"sitae\": \"<string>\",\n\t\t\"sunt12\": \"<string>\",\n\t\t\"esse8\": \"<string>\",\n\t\t\"ipsumc\": \"<string>\",\n\t\t\"eu_3db\": \"<string>\",\n\t\t\"cillum_4d\": \"<string>\",\n\t\t\"cupidatat_f_7\": \"<string>\",\n\t\t\"laborum_40\": \"<string>\",\n\t\t\"sed_304\": \"<string>\",\n\t\t\"sunt_e73\": \"<string>\",\n\t\t\"deserunt_7\": \"<string>\",\n\t\t\"ipsumd\": \"<string>\",\n\t\t\"magna__2\": \"<string>\",\n\t\t\"dolore9e\": \"<string>\",\n\t\t\"ad8f\": \"<string>\",\n\t\t\"quisf9\": \"<string>\",\n\t\t\"occaecat1bc\": \"<string>\",\n\t\t\"do_a\": \"<string>\",\n\t\t\"quis_b\": \"<string>\",\n\t\t\"sint643\": \"<string>\",\n\t\t\"consequat5\": \"<string>\",\n\t\t\"commodo1\": \"<string>\",\n\t\t\"labore84\": \"<string>\",\n\t\t\"fugiatb27\": \"<string>\",\n\t\t\"ipsum0\": \"<string>\",\n\t\t\"ute\": \"<string>\",\n\t\t\"dolore_1f\": \"<string>\",\n\t\t\"veniam740\": \"<string>\",\n\t\t\"cupidatat__\": \"<string>\",\n\t\t\"labore79e\": \"<string>\",\n\t\t\"dolor_b\": \"<string>\",\n\t\t\"ullamcoa35\": \"<string>\",\n\t\t\"ute85\": \"<string>\",\n\t\t\"nulla27_\": \"<string>\",\n\t\t\"reprehenderitd\": \"<string>\",\n\t\t\"non_22\": \"<string>\",\n\t\t\"sede44\": \"<string>\",\n\t\t\"proident24\": \"<string>\",\n\t\t\"dolore_a\": \"<string>\",\n\t\t\"elit_4\": \"<string>\",\n\t\t\"mollit2d\": \"<string>\",\n\t\t\"dolore_cf\": \"<string>\",\n\t\t\"dolore_d7d\": \"<string>\",\n\t\t\"elit_cf4\": \"<string>\",\n\t\t\"add\": \"<string>\",\n\t\t\"sint3df\": \"<string>\",\n\t\t\"deserunt_4b\": \"<string>\",\n\t\t\"Excepteur_c\": \"<string>\",\n\t\t\"officia82\": \"<string>\",\n\t\t\"ut_33\": \"<string>\",\n\t\t\"Duisb\": \"<string>\",\n\t\t\"estc2c\": \"<string>\",\n\t\t\"voluptate21\": \"<string>\",\n\t\t\"exe\": \"<string>\",\n\t\t\"ead03\": \"<string>\",\n\t\t\"fugiat_52\": \"<string>\",\n\t\t\"laborum_0\": \"<string>\",\n\t\t\"fugiat_eb\": \"<string>\",\n\t\t\"dolore_f\": \"<string>\",\n\t\t\"laboris_8\": \"<string>\",\n\t\t\"fugiat14\": \"<string>\",\n\t\t\"sunt57d\": \"<string>\",\n\t\t\"aute5\": \"<string>\",\n\t\t\"dolor_b2\": \"<string>\",\n\t\t\"exercitation56_\": \"<string>\",\n\t\t\"pariatur7\": \"<string>\",\n\t\t\"deserunt_0_a\": \"<string>\",\n\t\t\"laborum3\": \"<string>\",\n\t\t\"dolorb0\": \"<string>\",\n\t\t\"exercitation477\": \"<string>\",\n\t\t\"Duis_5a\": \"<string>\",\n\t\t\"id_f50\": \"<string>\",\n\t\t\"est_4e6\": \"<string>\",\n\t\t\"sunt_8\": \"<string>\",\n\t\t\"nisi_e1\": \"<string>\",\n\t\t\"dolor_24\": \"<string>\",\n\t\t\"fugiat_0\": \"<string>\",\n\t\t\"nullaa3\": \"<string>\",\n\t\t\"velit_4\": \"<string>\",\n\t\t\"non_2\": \"<string>\",\n\t\t\"consectetur_58f\": \"<string>\",\n\t\t\"nulla2c\": \"<string>\",\n\t\t\"anim_\": \"<string>\",\n\t\t\"nulla__dd\": \"<string>\",\n\t\t\"do_293\": \"<string>\",\n\t\t\"amet_0af\": \"<string>\",\n\t\t\"ex_d\": \"<string>\",\n\t\t\"amet_e\": \"<string>\",\n\t\t\"voluptate_c\": \"<string>\",\n\t\t\"enim_d3\": \"<string>\",\n\t\t\"pariatur0b2\": \"<string>\",\n\t\t\"ea_6c1\": \"<string>\",\n\t\t\"eiusmod_5ec\": \"<string>\",\n\t\t\"consequat_eb\": \"<string>\",\n\t\t\"anim47f\": \"<string>\",\n\t\t\"cillum_54\": \"<string>\",\n\t\t\"exercitationec_\": \"<string>\",\n\t\t\"laborea5b\": \"<string>\",\n\t\t\"ea_2\": \"<string>\",\n\t\t\"et_8_a\": \"<string>\",\n\t\t\"suntb\": \"<string>\",\n\t\t\"Ut7_e\": \"<string>\",\n\t\t\"essed3\": \"<string>\",\n\t\t\"dof\": \"<string>\",\n\t\t\"mollit31\": \"<string>\",\n\t\t\"dolor_d6_\": \"<string>\",\n\t\t\"eu_579\": \"<string>\",\n\t\t\"ut_8\": \"<string>\",\n\t\t\"Excepteur29\": \"<string>\",\n\t\t\"ullamco37\": \"<string>\",\n\t\t\"ad_73b\": \"<string>\",\n\t\t\"velitb67\": \"<string>\",\n\t\t\"in_e\": \"<string>\",\n\t\t\"Ut_fa\": \"<string>\",\n\t\t\"eae\": \"<string>\",\n\t\t\"veniam_1d3\": \"<string>\",\n\t\t\"exercitation4\": \"<string>\",\n\t\t\"proident_8e\": \"<string>\",\n\t\t\"non46c\": \"<string>\",\n\t\t\"Excepteur_ae\": \"<string>\",\n\t\t\"Loremc3\": \"<string>\",\n\t\t\"in_b41\": \"<string>\",\n\t\t\"eiusmod41c\": \"<string>\",\n\t\t\"tempor_f\": \"<string>\",\n\t\t\"qui92\": \"<string>\",\n\t\t\"est_8_\": \"<string>\",\n\t\t\"nisi3\": \"<string>\",\n\t\t\"enimf47\": \"<string>\",\n\t\t\"eu_8\": \"<string>\",\n\t\t\"sunte\": \"<string>\",\n\t\t\"eiusmod_ed\": \"<string>\",\n\t\t\"reprehenderit_485\": \"<string>\",\n\t\t\"cupidatat_a\": \"<string>\",\n\t\t\"sed_81_\": \"<string>\",\n\t\t\"deserunt_da1\": \"<string>\",\n\t\t\"exercitation_b24\": \"<string>\",\n\t\t\"sit_a\": \"<string>\",\n\t\t\"qui_8\": \"<string>\",\n\t\t\"est_2\": \"<string>\",\n\t\t\"irure_\": \"<string>\",\n\t\t\"nisi_270\": \"<string>\",\n\t\t\"occaecat_47\": \"<string>\",\n\t\t\"dolor8\": \"<string>\",\n\t\t\"exercitationf2\": \"<string>\",\n\t\t\"Uta\": \"<string>\",\n\t\t\"fugiat_58d\": \"<string>\",\n\t\t\"dolor1\": \"<string>\",\n\t\t\"ipsum_4\": \"<string>\",\n\t\t\"et_\": \"<string>\",\n\t\t\"qui982\": \"<string>\",\n\t\t\"laborum0\": \"<string>\",\n\t\t\"proidentbc3\": \"<string>\",\n\t\t\"anim1\": \"<string>\",\n\t\t\"culpa_c\": \"<string>\",\n\t\t\"pariatur54b\": \"<string>\",\n\t\t\"laborisf\": \"<string>\",\n\t\t\"qui_623\": \"<string>\",\n\t\t\"culpa_b_\": \"<string>\",\n\t\t\"ea_0\": \"<string>\",\n\t\t\"culpa_8e\": \"<string>\",\n\t\t\"in_2_\": \"<string>\",\n\t\t\"esse95a\": \"<string>\",\n\t\t\"non44\": \"<string>\",\n\t\t\"Duis_85\": \"<string>\",\n\t\t\"ullamcoe\": \"<string>\",\n\t\t\"consectetur1d\": \"<string>\",\n\t\t\"culpa_6\": \"<string>\",\n\t\t\"suntb6\": \"<string>\",\n\t\t\"labore76\": \"<string>\",\n\t\t\"fugiat4\": \"<string>\",\n\t\t\"cillum74\": \"<string>\",\n\t\t\"commodoc4\": \"<string>\",\n\t\t\"laboris8\": \"<string>\",\n\t\t\"eiusmod_5e\": \"<string>\",\n\t\t\"irurefca\": \"<string>\",\n\t\t\"minima8c\": \"<string>\",\n\t\t\"doloraa7\": \"<string>\",\n\t\t\"voluptate024\": \"<string>\",\n\t\t\"magna_1\": \"<string>\",\n\t\t\"ea0\": \"<string>\",\n\t\t\"ut_62c\": \"<string>\",\n\t\t\"voluptate_f\": \"<string>\",\n\t\t\"fugiat_986\": \"<string>\",\n\t\t\"eiusmod_5b\": \"<string>\",\n\t\t\"quis_8_7\": \"<string>\",\n\t\t\"exercitation_d\": \"<string>\",\n\t\t\"ad31\": \"<string>\",\n\t\t\"laborisc04\": \"<string>\",\n\t\t\"voluptate_27f\": \"<string>\",\n\t\t\"Duis_f3f\": \"<string>\",\n\t\t\"ullamcod\": \"<string>\",\n\t\t\"magna_60\": \"<string>\",\n\t\t\"culpa_09\": \"<string>\",\n\t\t\"dolore5\": \"<string>\",\n\t\t\"exercitation_c4c\": \"<string>\",\n\t\t\"in_88\": \"<string>\",\n\t\t\"Lorem_10d\": \"<string>\",\n\t\t\"minimc2\": \"<string>\",\n\t\t\"irure_6\": \"<string>\",\n\t\t\"reprehenderitbaf\": \"<string>\",\n\t\t\"aute__3\": \"<string>\",\n\t\t\"sed_f68\": \"<string>\",\n\t\t\"sit_8a6\": \"<string>\",\n\t\t\"adipisicing_6b5\": \"<string>\",\n\t\t\"est05\": \"<string>\",\n\t\t\"sintf6\": \"<string>\",\n\t\t\"nisi_f1_\": \"<string>\",\n\t\t\"pariatur_0\": \"<string>\",\n\t\t\"quis_11\": \"<string>\",\n\t\t\"nonc7\": \"<string>\",\n\t\t\"consectetur_10\": \"<string>\",\n\t\t\"cillumf1\": \"<string>\",\n\t\t\"laborumd8f\": \"<string>\",\n\t\t\"fugiat8cf\": \"<string>\",\n\t\t\"reprehenderitf77\": \"<string>\",\n\t\t\"adf\": \"<string>\",\n\t\t\"aliquip__\": \"<string>\",\n\t\t\"veniamda\": \"<string>\",\n\t\t\"qui_e5d\": \"<string>\",\n\t\t\"irure796\": \"<string>\",\n\t\t\"enim_\": \"<string>\",\n\t\t\"ut_4f7\": \"<string>\",\n\t\t\"consequat_b\": \"<string>\",\n\t\t\"eu_0\": \"<string>\",\n\t\t\"consequat4\": \"<string>\",\n\t\t\"dolor9\": \"<string>\",\n\t\t\"sed484\": \"<string>\",\n\t\t\"pariatur19\": \"<string>\",\n\t\t\"velitf40\": \"<string>\",\n\t\t\"Ut_f3\": \"<string>\",\n\t\t\"esse_521\": \"<string>\",\n\t\t\"quis_489\": \"<string>\",\n\t\t\"eiusmod_c\": \"<string>\",\n\t\t\"laboris_2\": \"<string>\",\n\t\t\"mollit_8\": \"<string>\",\n\t\t\"nulla1\": \"<string>\",\n\t\t\"consectetur_bc\": \"<string>\",\n\t\t\"ad452\": \"<string>\",\n\t\t\"consecteturc\": \"<string>\",\n\t\t\"in_a\": \"<string>\",\n\t\t\"veniam_2\": \"<string>\",\n\t\t\"nisi7ac\": \"<string>\",\n\t\t\"estc\": \"<string>\",\n\t\t\"cillum8\": \"<string>\",\n\t\t\"dolor8d\": \"<string>\",\n\t\t\"sint2e\": \"<string>\",\n\t\t\"eiusmod_36\": \"<string>\",\n\t\t\"eiusmod_78\": \"<string>\",\n\t\t\"aliqua_6cd\": \"<string>\",\n\t\t\"ipsum_3\": \"<string>\",\n\t\t\"sint27b\": \"<string>\",\n\t\t\"amet4\": \"<string>\",\n\t\t\"magna_cfb\": \"<string>\",\n\t\t\"aliquip_c_\": \"<string>\",\n\t\t\"qui_d\": \"<string>\",\n\t\t\"deserunt_c3\": \"<string>\",\n\t\t\"ut_0\": \"<string>\",\n\t\t\"elit_d\": \"<string>\",\n\t\t\"enim_190\": \"<string>\",\n\t\t\"in22\": \"<string>\",\n\t\t\"Excepteur_00c\": \"<string>\",\n\t\t\"et_6fa\": \"<string>\",\n\t\t\"voluptate8\": \"<string>\",\n\t\t\"qui_16\": \"<string>\",\n\t\t\"dolor4_\": \"<string>\",\n\t\t\"fugiat25\": \"<string>\",\n\t\t\"exercitation_fe\": \"<string>\",\n\t\t\"non_3d5\": \"<string>\",\n\t\t\"sint8\": \"<string>\",\n\t\t\"commodofa2\": \"<string>\",\n\t\t\"laborum_6\": \"<string>\",\n\t\t\"nostrud_d1\": \"<string>\",\n\t\t\"in4a8\": \"<string>\",\n\t\t\"amet_a5\": \"<string>\",\n\t\t\"in_84\": \"<string>\",\n\t\t\"minim_82\": \"<string>\",\n\t\t\"magna84f\": \"<string>\",\n\t\t\"irure_c\": \"<string>\",\n\t\t\"qui__\": \"<string>\",\n\t\t\"sunt_81d\": \"<string>\",\n\t\t\"quic\": \"<string>\",\n\t\t\"Duis_ba_\": \"<string>\",\n\t\t\"Duisd7\": \"<string>\",\n\t\t\"sintec5\": \"<string>\",\n\t\t\"incididunt02_\": \"<string>\",\n\t\t\"nonb6\": \"<string>\",\n\t\t\"quisb7\": \"<string>\",\n\t\t\"quisbd\": \"<string>\",\n\t\t\"est_5\": \"<string>\",\n\t\t\"reprehenderita22\": \"<string>\",\n\t\t\"dolord51\": \"<string>\",\n\t\t\"anim641\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"elita_8\": \"<string>\",\n\t\t\"fugiat_29\": \"<string>\",\n\t\t\"aliquad\": \"<string>\",\n\t\t\"sunt_da\": \"<string>\",\n\t\t\"mollit_85\": \"<string>\",\n\t\t\"Ut4\": \"<string>\",\n\t\t\"quis06\": \"<string>\",\n\t\t\"laborum_97\": \"<string>\",\n\t\t\"pariatur57e\": \"<string>\",\n\t\t\"proidente1d\": \"<string>\",\n\t\t\"non126\": \"<string>\",\n\t\t\"aliquip_248\": \"<string>\",\n\t\t\"incididunt_a\": \"<string>\",\n\t\t\"proident224\": \"<string>\",\n\t\t\"cupidatat_72e\": \"<string>\",\n\t\t\"anime\": \"<string>\",\n\t\t\"doloreda\": \"<string>\",\n\t\t\"aute_e\": \"<string>\",\n\t\t\"Duisa7a\": \"<string>\",\n\t\t\"officia299\": \"<string>\",\n\t\t\"mollit_4\": \"<string>\",\n\t\t\"in502\": \"<string>\",\n\t\t\"id_6\": \"<string>\",\n\t\t\"occaecat_27\": \"<string>\",\n\t\t\"enim7\": \"<string>\",\n\t\t\"consequat8\": \"<string>\",\n\t\t\"deserunt_b\": \"<string>\",\n\t\t\"deserunt_5\": \"<string>\",\n\t\t\"ex37\": \"<string>\",\n\t\t\"dolor_e2\": \"<string>\",\n\t\t\"eiusmod_2\": \"<string>\",\n\t\t\"fugiatec\": \"<string>\",\n\t\t\"pariatur_57\": \"<string>\",\n\t\t\"adipisicing_cbc\": \"<string>\",\n\t\t\"incididunt5\": \"<string>\",\n\t\t\"qui_29_\": \"<string>\",\n\t\t\"deserunt_e\": \"<string>\",\n\t\t\"inb\": \"<string>\",\n\t\t\"qui_183\": \"<string>\",\n\t\t\"dolore_c44\": \"<string>\",\n\t\t\"Excepteur_bf\": \"<string>\",\n\t\t\"elit_e\": \"<string>\",\n\t\t\"aliqua76\": \"<string>\",\n\t\t\"laboris_b_\": \"<string>\",\n\t\t\"ipsum_6_0\": \"<string>\",\n\t\t\"cillum_233\": \"<string>\",\n\t\t\"in_895\": \"<string>\",\n\t\t\"in_7\": \"<string>\",\n\t\t\"in_e8b\": \"<string>\",\n\t\t\"officia_bc\": \"<string>\",\n\t\t\"reprehenderit_3\": \"<string>\",\n\t\t\"id_978\": \"<string>\",\n\t\t\"sitf\": \"<string>\",\n\t\t\"enim1f4\": \"<string>\",\n\t\t\"id45\": \"<string>\",\n\t\t\"elitf10\": \"<string>\",\n\t\t\"in_971\": \"<string>\",\n\t\t\"eaa\": \"<string>\",\n\t\t\"anim_c01\": \"<string>\",\n\t\t\"deseruntd40\": \"<string>\",\n\t\t\"in42\": \"<string>\",\n\t\t\"officia6fd\": \"<string>\",\n\t\t\"nonb7b\": \"<string>\",\n\t\t\"sitb1\": \"<string>\",\n\t\t\"consequat_3\": \"<string>\",\n\t\t\"do6\": \"<string>\",\n\t\t\"pariatur_3\": \"<string>\",\n\t\t\"esse6e\": \"<string>\",\n\t\t\"ea_ce\": \"<string>\",\n\t\t\"consequat2\": \"<string>\",\n\t\t\"Excepteur_2b6\": \"<string>\",\n\t\t\"adipisicing_3d5\": \"<string>\",\n\t\t\"utf\": \"<string>\",\n\t\t\"Duis0e\": \"<string>\",\n\t\t\"non_3\": \"<string>\",\n\t\t\"velit_a8\": \"<string>\",\n\t\t\"ut_48\": \"<string>\",\n\t\t\"aliquip_445\": \"<string>\",\n\t\t\"occaecat_f\": \"<string>\",\n\t\t\"labore6\": \"<string>\",\n\t\t\"magnaf5\": \"<string>\",\n\t\t\"eiusmoda\": \"<string>\",\n\t\t\"animc_\": \"<string>\",\n\t\t\"dolore29a\": \"<string>\",\n\t\t\"aute4b9\": \"<string>\",\n\t\t\"ut_c5\": \"<string>\",\n\t\t\"incididuntdd\": \"<string>\",\n\t\t\"in_3\": \"<string>\",\n\t\t\"velitef\": \"<string>\",\n\t\t\"quis_eb1\": \"<string>\",\n\t\t\"idc\": \"<string>\",\n\t\t\"amet_a\": \"<string>\",\n\t\t\"Lorem_3\": \"<string>\",\n\t\t\"reprehenderit4d8\": \"<string>\",\n\t\t\"sit_ff7\": \"<string>\",\n\t\t\"deserunt_83e\": \"<string>\",\n\t\t\"pariatur_d\": \"<string>\",\n\t\t\"Duisd\": \"<string>\",\n\t\t\"anim_33\": \"<string>\",\n\t\t\"elit_933\": \"<string>\",\n\t\t\"dolor_68\": \"<string>\",\n\t\t\"ut_0e\": \"<string>\",\n\t\t\"in_ea5\": \"<string>\",\n\t\t\"dolore29\": \"<string>\",\n\t\t\"commodo34\": \"<string>\",\n\t\t\"ex60\": \"<string>\",\n\t\t\"sedae6\": \"<string>\",\n\t\t\"ullamco_80\": \"<string>\",\n\t\t\"ex32e\": \"<string>\",\n\t\t\"ida7a\": \"<string>\",\n\t\t\"in_b\": \"<string>\",\n\t\t\"adipisicing_021\": \"<string>\",\n\t\t\"reprehenderit_46e\": \"<string>\",\n\t\t\"esse3\": \"<string>\",\n\t\t\"fugiatcb\": \"<string>\",\n\t\t\"exercitation_b3\": \"<string>\",\n\t\t\"sunt_42\": \"<string>\",\n\t\t\"ad_012\": \"<string>\",\n\t\t\"esse_6\": \"<string>\",\n\t\t\"sint_c\": \"<string>\",\n\t\t\"animd1f\": \"<string>\",\n\t\t\"aliquip_\": \"<string>\",\n\t\t\"aliqua8f8\": \"<string>\",\n\t\t\"adipisicing18\": \"<string>\",\n\t\t\"dolore_65\": \"<string>\",\n\t\t\"ullamco_7\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Authentication Provider not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"amet_85\": \"<string>\",\n\t\t\"Duis_768\": \"<string>\",\n\t\t\"Duis7\": \"<string>\",\n\t\t\"laborum_aa\": \"<string>\",\n\t\t\"amet5c\": \"<string>\",\n\t\t\"tempor7e5\": \"<string>\",\n\t\t\"laborum_8\": \"<string>\",\n\t\t\"ex3_3\": \"<string>\",\n\t\t\"ut6\": \"<string>\",\n\t\t\"sit_03\": \"<string>\",\n\t\t\"exercitation_9\": \"<string>\",\n\t\t\"nullad9\": \"<string>\",\n\t\t\"eu_48\": \"<string>\",\n\t\t\"Loremef\": \"<string>\",\n\t\t\"occaecat8\": \"<string>\",\n\t\t\"Excepteur_66\": \"<string>\",\n\t\t\"dolore_98c\": \"<string>\",\n\t\t\"incididunt_5\": \"<string>\",\n\t\t\"occaecat45\": \"<string>\",\n\t\t\"anim_3c3\": \"<string>\",\n\t\t\"sitae\": \"<string>\",\n\t\t\"sunt12\": \"<string>\",\n\t\t\"esse8\": \"<string>\",\n\t\t\"ipsumc\": \"<string>\",\n\t\t\"eu_3db\": \"<string>\",\n\t\t\"cillum_4d\": \"<string>\",\n\t\t\"cupidatat_f_7\": \"<string>\",\n\t\t\"laborum_40\": \"<string>\",\n\t\t\"sed_304\": \"<string>\",\n\t\t\"sunt_e73\": \"<string>\",\n\t\t\"deserunt_7\": \"<string>\",\n\t\t\"ipsumd\": \"<string>\",\n\t\t\"magna__2\": \"<string>\",\n\t\t\"dolore9e\": \"<string>\",\n\t\t\"ad8f\": \"<string>\",\n\t\t\"quisf9\": \"<string>\",\n\t\t\"occaecat1bc\": \"<string>\",\n\t\t\"do_a\": \"<string>\",\n\t\t\"quis_b\": \"<string>\",\n\t\t\"sint643\": \"<string>\",\n\t\t\"consequat5\": \"<string>\",\n\t\t\"commodo1\": \"<string>\",\n\t\t\"labore84\": \"<string>\",\n\t\t\"fugiatb27\": \"<string>\",\n\t\t\"ipsum0\": \"<string>\",\n\t\t\"ute\": \"<string>\",\n\t\t\"dolore_1f\": \"<string>\",\n\t\t\"veniam740\": \"<string>\",\n\t\t\"cupidatat__\": \"<string>\",\n\t\t\"labore79e\": \"<string>\",\n\t\t\"dolor_b\": \"<string>\",\n\t\t\"ullamcoa35\": \"<string>\",\n\t\t\"ute85\": \"<string>\",\n\t\t\"nulla27_\": \"<string>\",\n\t\t\"reprehenderitd\": \"<string>\",\n\t\t\"non_22\": \"<string>\",\n\t\t\"sede44\": \"<string>\",\n\t\t\"proident24\": \"<string>\",\n\t\t\"dolore_a\": \"<string>\",\n\t\t\"elit_4\": \"<string>\",\n\t\t\"mollit2d\": \"<string>\",\n\t\t\"dolore_cf\": \"<string>\",\n\t\t\"dolore_d7d\": \"<string>\",\n\t\t\"elit_cf4\": \"<string>\",\n\t\t\"add\": \"<string>\",\n\t\t\"sint3df\": \"<string>\",\n\t\t\"deserunt_4b\": \"<string>\",\n\t\t\"Excepteur_c\": \"<string>\",\n\t\t\"officia82\": \"<string>\",\n\t\t\"ut_33\": \"<string>\",\n\t\t\"Duisb\": \"<string>\",\n\t\t\"estc2c\": \"<string>\",\n\t\t\"voluptate21\": \"<string>\",\n\t\t\"exe\": \"<string>\",\n\t\t\"ead03\": \"<string>\",\n\t\t\"fugiat_52\": \"<string>\",\n\t\t\"laborum_0\": \"<string>\",\n\t\t\"fugiat_eb\": \"<string>\",\n\t\t\"dolore_f\": \"<string>\",\n\t\t\"laboris_8\": \"<string>\",\n\t\t\"fugiat14\": \"<string>\",\n\t\t\"sunt57d\": \"<string>\",\n\t\t\"aute5\": \"<string>\",\n\t\t\"dolor_b2\": \"<string>\",\n\t\t\"exercitation56_\": \"<string>\",\n\t\t\"pariatur7\": \"<string>\",\n\t\t\"deserunt_0_a\": \"<string>\",\n\t\t\"laborum3\": \"<string>\",\n\t\t\"dolorb0\": \"<string>\",\n\t\t\"exercitation477\": \"<string>\",\n\t\t\"Duis_5a\": \"<string>\",\n\t\t\"id_f50\": \"<string>\",\n\t\t\"est_4e6\": \"<string>\",\n\t\t\"sunt_8\": \"<string>\",\n\t\t\"nisi_e1\": \"<string>\",\n\t\t\"dolor_24\": \"<string>\",\n\t\t\"fugiat_0\": \"<string>\",\n\t\t\"nullaa3\": \"<string>\",\n\t\t\"velit_4\": \"<string>\",\n\t\t\"non_2\": \"<string>\",\n\t\t\"consectetur_58f\": \"<string>\",\n\t\t\"nulla2c\": \"<string>\",\n\t\t\"anim_\": \"<string>\",\n\t\t\"nulla__dd\": \"<string>\",\n\t\t\"do_293\": \"<string>\",\n\t\t\"amet_0af\": \"<string>\",\n\t\t\"ex_d\": \"<string>\",\n\t\t\"amet_e\": \"<string>\",\n\t\t\"voluptate_c\": \"<string>\",\n\t\t\"enim_d3\": \"<string>\",\n\t\t\"pariatur0b2\": \"<string>\",\n\t\t\"ea_6c1\": \"<string>\",\n\t\t\"eiusmod_5ec\": \"<string>\",\n\t\t\"consequat_eb\": \"<string>\",\n\t\t\"anim47f\": \"<string>\",\n\t\t\"cillum_54\": \"<string>\",\n\t\t\"exercitationec_\": \"<string>\",\n\t\t\"laborea5b\": \"<string>\",\n\t\t\"ea_2\": \"<string>\",\n\t\t\"et_8_a\": \"<string>\",\n\t\t\"suntb\": \"<string>\",\n\t\t\"Ut7_e\": \"<string>\",\n\t\t\"essed3\": \"<string>\",\n\t\t\"dof\": \"<string>\",\n\t\t\"mollit31\": \"<string>\",\n\t\t\"dolor_d6_\": \"<string>\",\n\t\t\"eu_579\": \"<string>\",\n\t\t\"ut_8\": \"<string>\",\n\t\t\"Excepteur29\": \"<string>\",\n\t\t\"ullamco37\": \"<string>\",\n\t\t\"ad_73b\": \"<string>\",\n\t\t\"velitb67\": \"<string>\",\n\t\t\"in_e\": \"<string>\",\n\t\t\"Ut_fa\": \"<string>\",\n\t\t\"eae\": \"<string>\",\n\t\t\"veniam_1d3\": \"<string>\",\n\t\t\"exercitation4\": \"<string>\",\n\t\t\"proident_8e\": \"<string>\",\n\t\t\"non46c\": \"<string>\",\n\t\t\"Excepteur_ae\": \"<string>\",\n\t\t\"Loremc3\": \"<string>\",\n\t\t\"in_b41\": \"<string>\",\n\t\t\"eiusmod41c\": \"<string>\",\n\t\t\"tempor_f\": \"<string>\",\n\t\t\"qui92\": \"<string>\",\n\t\t\"est_8_\": \"<string>\",\n\t\t\"nisi3\": \"<string>\",\n\t\t\"enimf47\": \"<string>\",\n\t\t\"eu_8\": \"<string>\",\n\t\t\"sunte\": \"<string>\",\n\t\t\"eiusmod_ed\": \"<string>\",\n\t\t\"reprehenderit_485\": \"<string>\",\n\t\t\"cupidatat_a\": \"<string>\",\n\t\t\"sed_81_\": \"<string>\",\n\t\t\"deserunt_da1\": \"<string>\",\n\t\t\"exercitation_b24\": \"<string>\",\n\t\t\"sit_a\": \"<string>\",\n\t\t\"qui_8\": \"<string>\",\n\t\t\"est_2\": \"<string>\",\n\t\t\"irure_\": \"<string>\",\n\t\t\"nisi_270\": \"<string>\",\n\t\t\"occaecat_47\": \"<string>\",\n\t\t\"dolor8\": \"<string>\",\n\t\t\"exercitationf2\": \"<string>\",\n\t\t\"Uta\": \"<string>\",\n\t\t\"fugiat_58d\": \"<string>\",\n\t\t\"dolor1\": \"<string>\",\n\t\t\"ipsum_4\": \"<string>\",\n\t\t\"et_\": \"<string>\",\n\t\t\"qui982\": \"<string>\",\n\t\t\"laborum0\": \"<string>\",\n\t\t\"proidentbc3\": \"<string>\",\n\t\t\"anim1\": \"<string>\",\n\t\t\"culpa_c\": \"<string>\",\n\t\t\"pariatur54b\": \"<string>\",\n\t\t\"laborisf\": \"<string>\",\n\t\t\"qui_623\": \"<string>\",\n\t\t\"culpa_b_\": \"<string>\",\n\t\t\"ea_0\": \"<string>\",\n\t\t\"culpa_8e\": \"<string>\",\n\t\t\"in_2_\": \"<string>\",\n\t\t\"esse95a\": \"<string>\",\n\t\t\"non44\": \"<string>\",\n\t\t\"Duis_85\": \"<string>\",\n\t\t\"ullamcoe\": \"<string>\",\n\t\t\"consectetur1d\": \"<string>\",\n\t\t\"culpa_6\": \"<string>\",\n\t\t\"suntb6\": \"<string>\",\n\t\t\"labore76\": \"<string>\",\n\t\t\"fugiat4\": \"<string>\",\n\t\t\"cillum74\": \"<string>\",\n\t\t\"commodoc4\": \"<string>\",\n\t\t\"laboris8\": \"<string>\",\n\t\t\"eiusmod_5e\": \"<string>\",\n\t\t\"irurefca\": \"<string>\",\n\t\t\"minima8c\": \"<string>\",\n\t\t\"doloraa7\": \"<string>\",\n\t\t\"voluptate024\": \"<string>\",\n\t\t\"magna_1\": \"<string>\",\n\t\t\"ea0\": \"<string>\",\n\t\t\"ut_62c\": \"<string>\",\n\t\t\"voluptate_f\": \"<string>\",\n\t\t\"fugiat_986\": \"<string>\",\n\t\t\"eiusmod_5b\": \"<string>\",\n\t\t\"quis_8_7\": \"<string>\",\n\t\t\"exercitation_d\": \"<string>\",\n\t\t\"ad31\": \"<string>\",\n\t\t\"laborisc04\": \"<string>\",\n\t\t\"voluptate_27f\": \"<string>\",\n\t\t\"Duis_f3f\": \"<string>\",\n\t\t\"ullamcod\": \"<string>\",\n\t\t\"magna_60\": \"<string>\",\n\t\t\"culpa_09\": \"<string>\",\n\t\t\"dolore5\": \"<string>\",\n\t\t\"exercitation_c4c\": \"<string>\",\n\t\t\"in_88\": \"<string>\",\n\t\t\"Lorem_10d\": \"<string>\",\n\t\t\"minimc2\": \"<string>\",\n\t\t\"irure_6\": \"<string>\",\n\t\t\"reprehenderitbaf\": \"<string>\",\n\t\t\"aute__3\": \"<string>\",\n\t\t\"sed_f68\": \"<string>\",\n\t\t\"sit_8a6\": \"<string>\",\n\t\t\"adipisicing_6b5\": \"<string>\",\n\t\t\"est05\": \"<string>\",\n\t\t\"sintf6\": \"<string>\",\n\t\t\"nisi_f1_\": \"<string>\",\n\t\t\"pariatur_0\": \"<string>\",\n\t\t\"quis_11\": \"<string>\",\n\t\t\"nonc7\": \"<string>\",\n\t\t\"consectetur_10\": \"<string>\",\n\t\t\"cillumf1\": \"<string>\",\n\t\t\"laborumd8f\": \"<string>\",\n\t\t\"fugiat8cf\": \"<string>\",\n\t\t\"reprehenderitf77\": \"<string>\",\n\t\t\"adf\": \"<string>\",\n\t\t\"aliquip__\": \"<string>\",\n\t\t\"veniamda\": \"<string>\",\n\t\t\"qui_e5d\": \"<string>\",\n\t\t\"irure796\": \"<string>\",\n\t\t\"enim_\": \"<string>\",\n\t\t\"ut_4f7\": \"<string>\",\n\t\t\"consequat_b\": \"<string>\",\n\t\t\"eu_0\": \"<string>\",\n\t\t\"consequat4\": \"<string>\",\n\t\t\"dolor9\": \"<string>\",\n\t\t\"sed484\": \"<string>\",\n\t\t\"pariatur19\": \"<string>\",\n\t\t\"velitf40\": \"<string>\",\n\t\t\"Ut_f3\": \"<string>\",\n\t\t\"esse_521\": \"<string>\",\n\t\t\"quis_489\": \"<string>\",\n\t\t\"eiusmod_c\": \"<string>\",\n\t\t\"laboris_2\": \"<string>\",\n\t\t\"mollit_8\": \"<string>\",\n\t\t\"nulla1\": \"<string>\",\n\t\t\"consectetur_bc\": \"<string>\",\n\t\t\"ad452\": \"<string>\",\n\t\t\"consecteturc\": \"<string>\",\n\t\t\"in_a\": \"<string>\",\n\t\t\"veniam_2\": \"<string>\",\n\t\t\"nisi7ac\": \"<string>\",\n\t\t\"estc\": \"<string>\",\n\t\t\"cillum8\": \"<string>\",\n\t\t\"dolor8d\": \"<string>\",\n\t\t\"sint2e\": \"<string>\",\n\t\t\"eiusmod_36\": \"<string>\",\n\t\t\"eiusmod_78\": \"<string>\",\n\t\t\"aliqua_6cd\": \"<string>\",\n\t\t\"ipsum_3\": \"<string>\",\n\t\t\"sint27b\": \"<string>\",\n\t\t\"amet4\": \"<string>\",\n\t\t\"magna_cfb\": \"<string>\",\n\t\t\"aliquip_c_\": \"<string>\",\n\t\t\"qui_d\": \"<string>\",\n\t\t\"deserunt_c3\": \"<string>\",\n\t\t\"ut_0\": \"<string>\",\n\t\t\"elit_d\": \"<string>\",\n\t\t\"enim_190\": \"<string>\",\n\t\t\"in22\": \"<string>\",\n\t\t\"Excepteur_00c\": \"<string>\",\n\t\t\"et_6fa\": \"<string>\",\n\t\t\"voluptate8\": \"<string>\",\n\t\t\"qui_16\": \"<string>\",\n\t\t\"dolor4_\": \"<string>\",\n\t\t\"fugiat25\": \"<string>\",\n\t\t\"exercitation_fe\": \"<string>\",\n\t\t\"non_3d5\": \"<string>\",\n\t\t\"sint8\": \"<string>\",\n\t\t\"commodofa2\": \"<string>\",\n\t\t\"laborum_6\": \"<string>\",\n\t\t\"nostrud_d1\": \"<string>\",\n\t\t\"in4a8\": \"<string>\",\n\t\t\"amet_a5\": \"<string>\",\n\t\t\"in_84\": \"<string>\",\n\t\t\"minim_82\": \"<string>\",\n\t\t\"magna84f\": \"<string>\",\n\t\t\"irure_c\": \"<string>\",\n\t\t\"qui__\": \"<string>\",\n\t\t\"sunt_81d\": \"<string>\",\n\t\t\"quic\": \"<string>\",\n\t\t\"Duis_ba_\": \"<string>\",\n\t\t\"Duisd7\": \"<string>\",\n\t\t\"sintec5\": \"<string>\",\n\t\t\"incididunt02_\": \"<string>\",\n\t\t\"nonb6\": \"<string>\",\n\t\t\"quisb7\": \"<string>\",\n\t\t\"quisbd\": \"<string>\",\n\t\t\"est_5\": \"<string>\",\n\t\t\"reprehenderita22\": \"<string>\",\n\t\t\"dolord51\": \"<string>\",\n\t\t\"anim641\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"elita_8\": \"<string>\",\n\t\t\"fugiat_29\": \"<string>\",\n\t\t\"aliquad\": \"<string>\",\n\t\t\"sunt_da\": \"<string>\",\n\t\t\"mollit_85\": \"<string>\",\n\t\t\"Ut4\": \"<string>\",\n\t\t\"quis06\": \"<string>\",\n\t\t\"laborum_97\": \"<string>\",\n\t\t\"pariatur57e\": \"<string>\",\n\t\t\"proidente1d\": \"<string>\",\n\t\t\"non126\": \"<string>\",\n\t\t\"aliquip_248\": \"<string>\",\n\t\t\"incididunt_a\": \"<string>\",\n\t\t\"proident224\": \"<string>\",\n\t\t\"cupidatat_72e\": \"<string>\",\n\t\t\"anime\": \"<string>\",\n\t\t\"doloreda\": \"<string>\",\n\t\t\"aute_e\": \"<string>\",\n\t\t\"Duisa7a\": \"<string>\",\n\t\t\"officia299\": \"<string>\",\n\t\t\"mollit_4\": \"<string>\",\n\t\t\"in502\": \"<string>\",\n\t\t\"id_6\": \"<string>\",\n\t\t\"occaecat_27\": \"<string>\",\n\t\t\"enim7\": \"<string>\",\n\t\t\"consequat8\": \"<string>\",\n\t\t\"deserunt_b\": \"<string>\",\n\t\t\"deserunt_5\": \"<string>\",\n\t\t\"ex37\": \"<string>\",\n\t\t\"dolor_e2\": \"<string>\",\n\t\t\"eiusmod_2\": \"<string>\",\n\t\t\"fugiatec\": \"<string>\",\n\t\t\"pariatur_57\": \"<string>\",\n\t\t\"adipisicing_cbc\": \"<string>\",\n\t\t\"incididunt5\": \"<string>\",\n\t\t\"qui_29_\": \"<string>\",\n\t\t\"deserunt_e\": \"<string>\",\n\t\t\"inb\": \"<string>\",\n\t\t\"qui_183\": \"<string>\",\n\t\t\"dolore_c44\": \"<string>\",\n\t\t\"Excepteur_bf\": \"<string>\",\n\t\t\"elit_e\": \"<string>\",\n\t\t\"aliqua76\": \"<string>\",\n\t\t\"laboris_b_\": \"<string>\",\n\t\t\"ipsum_6_0\": \"<string>\",\n\t\t\"cillum_233\": \"<string>\",\n\t\t\"in_895\": \"<string>\",\n\t\t\"in_7\": \"<string>\",\n\t\t\"in_e8b\": \"<string>\",\n\t\t\"officia_bc\": \"<string>\",\n\t\t\"reprehenderit_3\": \"<string>\",\n\t\t\"id_978\": \"<string>\",\n\t\t\"sitf\": \"<string>\",\n\t\t\"enim1f4\": \"<string>\",\n\t\t\"id45\": \"<string>\",\n\t\t\"elitf10\": \"<string>\",\n\t\t\"in_971\": \"<string>\",\n\t\t\"eaa\": \"<string>\",\n\t\t\"anim_c01\": \"<string>\",\n\t\t\"deseruntd40\": \"<string>\",\n\t\t\"in42\": \"<string>\",\n\t\t\"officia6fd\": \"<string>\",\n\t\t\"nonb7b\": \"<string>\",\n\t\t\"sitb1\": \"<string>\",\n\t\t\"consequat_3\": \"<string>\",\n\t\t\"do6\": \"<string>\",\n\t\t\"pariatur_3\": \"<string>\",\n\t\t\"esse6e\": \"<string>\",\n\t\t\"ea_ce\": \"<string>\",\n\t\t\"consequat2\": \"<string>\",\n\t\t\"Excepteur_2b6\": \"<string>\",\n\t\t\"adipisicing_3d5\": \"<string>\",\n\t\t\"utf\": \"<string>\",\n\t\t\"Duis0e\": \"<string>\",\n\t\t\"non_3\": \"<string>\",\n\t\t\"velit_a8\": \"<string>\",\n\t\t\"ut_48\": \"<string>\",\n\t\t\"aliquip_445\": \"<string>\",\n\t\t\"occaecat_f\": \"<string>\",\n\t\t\"labore6\": \"<string>\",\n\t\t\"magnaf5\": \"<string>\",\n\t\t\"eiusmoda\": \"<string>\",\n\t\t\"animc_\": \"<string>\",\n\t\t\"dolore29a\": \"<string>\",\n\t\t\"aute4b9\": \"<string>\",\n\t\t\"ut_c5\": \"<string>\",\n\t\t\"incididuntdd\": \"<string>\",\n\t\t\"in_3\": \"<string>\",\n\t\t\"velitef\": \"<string>\",\n\t\t\"quis_eb1\": \"<string>\",\n\t\t\"idc\": \"<string>\",\n\t\t\"amet_a\": \"<string>\",\n\t\t\"Lorem_3\": \"<string>\",\n\t\t\"reprehenderit4d8\": \"<string>\",\n\t\t\"sit_ff7\": \"<string>\",\n\t\t\"deserunt_83e\": \"<string>\",\n\t\t\"pariatur_d\": \"<string>\",\n\t\t\"Duisd\": \"<string>\",\n\t\t\"anim_33\": \"<string>\",\n\t\t\"elit_933\": \"<string>\",\n\t\t\"dolor_68\": \"<string>\",\n\t\t\"ut_0e\": \"<string>\",\n\t\t\"in_ea5\": \"<string>\",\n\t\t\"dolore29\": \"<string>\",\n\t\t\"commodo34\": \"<string>\",\n\t\t\"ex60\": \"<string>\",\n\t\t\"sedae6\": \"<string>\",\n\t\t\"ullamco_80\": \"<string>\",\n\t\t\"ex32e\": \"<string>\",\n\t\t\"ida7a\": \"<string>\",\n\t\t\"in_b\": \"<string>\",\n\t\t\"adipisicing_021\": \"<string>\",\n\t\t\"reprehenderit_46e\": \"<string>\",\n\t\t\"esse3\": \"<string>\",\n\t\t\"fugiatcb\": \"<string>\",\n\t\t\"exercitation_b3\": \"<string>\",\n\t\t\"sunt_42\": \"<string>\",\n\t\t\"ad_012\": \"<string>\",\n\t\t\"esse_6\": \"<string>\",\n\t\t\"sint_c\": \"<string>\",\n\t\t\"animd1f\": \"<string>\",\n\t\t\"aliquip_\": \"<string>\",\n\t\t\"aliqua8f8\": \"<string>\",\n\t\t\"adipisicing18\": \"<string>\",\n\t\t\"dolore_65\": \"<string>\",\n\t\t\"ullamco_7\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete an Authentication Provider",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												"authentication-providers",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Authentication Provider ID"
												}
											]
										},
										"description": "Deletes an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_DELETE_START\n* USER_AUTHENTICATION_PROVIDER_DELETE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_DELETE_FAIL\n"
									},
									"response": [
										{
											"name": "Authentication Provider deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Authentication Provider not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"authentication-providers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Interaction Hook",
							"item": [
								{
									"name": "Configure Interaction Hook",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/openid/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"openid",
												"configuration"
											]
										},
										"description": "Configure the Interaction Hook for the OpenID4VCI protocol on your tenant.\nMany credential issuance journeys require the issuer to perform custom interactions with the user. This could be gathering more information, performing additional authentication steps (E.g, 2FA, MFA or biometric checks) or communicating the terms of service. To facilitate this requirement, you can configure MATTR VII to invoke an interaction hook which will redirect the user to a custom component during the credential issuance journey. This redirect happens **after** the user is authenticated with your configured identity provider but **before** the credential is issued to the user. Upon successful completion of the interaction hook, your custom component will redirect the user back to their digital wallet to complete the credential issuance flow. Your interaction hook component can be either a web or native application.  We recommend using a web interface because it's more compatible with most scenarios.\n> You can only configure one interaction hook on your MATTR VII tenant. If you require several custom interactions as part of the credential issuance workflow, they should all be linked into a single interaction hook component.\n\n### **Analytic events**\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_START\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_FAIL"
									},
									"response": [
										{
											"name": "Interaction Hook configured",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/openid/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"openid",
														"configuration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true,\n\t\t\"secret\": \"<string>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/openid/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"openid",
														"configuration"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve Interaction Hook",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/openid/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"openid",
												"configuration"
											]
										},
										"description": "Retrieves the Interaction Hook configuration from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_FAIL\n"
									},
									"response": [
										{
											"name": "Interaction Hook configuration retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/openid/configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"openid",
														"configuration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true,\n\t\t\"secret\": \"<string>\"\n\t}\n}"
										}
									]
								}
							]
						},
						{
							"name": "Claims Source",
							"item": [
								{
									"name": "Configure a claims source",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/claim-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"claim-sources"
											]
										},
										"description": "Configures a new claims source for your tenant. When issuing a new credential, MATTR VII will make either a GET or a POST request to the claims source using the configured request parameters and fetch available data. This fetched data can then be included in the issued credential.\n\n### **Analytic event**\n* CLAIM_SOURCE_CREATE_START\n* CLAIM_SOURCE_CREATE_SUCCESS\n* CLAIM_SOURCE_CREATE_FAIL\n"
									},
									"response": [
										{
											"name": "Claims source configured",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"requestMethod\": \"POST\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all claims sources",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/claim-sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"claim-sources"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of entries",
													"disabled": true
												}
											]
										},
										"description": "Returns a list of all claims sources configured on your tenant.\n\n### **Analytic event**\n* CLAIM_SOURCE_RETRIEVE_LIST_START\n* CLAIM_SOURCE_RETRIEVE_LIST_SUCCESS\n* CLAIM_SOURCE_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "Claims sources retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"authorization\": {\n\t\t\t\t\"type\": \"api-key\",\n\t\t\t\t\"value\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"requestParameters\": {\n\t\t\t\t\"mapFrom\": \"<string>\"\n\t\t\t},\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"requestMethod\": \"POST\"\n\t\t},\n\t\t{\n\t\t\t\"authorization\": {\n\t\t\t\t\"type\": \"api-key\",\n\t\t\t\t\"value\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"requestParameters\": {\n\t\t\t\t\"mapFrom\": \"<string>\"\n\t\t\t},\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"requestMethod\": \"POST\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve a claims source",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"claim-sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Claims source ID"
												}
											]
										},
										"description": "Retrieves an existing claims source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_RETRIEVE_START\n* CLAIM_SOURCE_RETRIEVE_SUCCESS\n* CLAIM_SOURCE_RETRIEVE_FAIL\n"
									},
									"response": [
										{
											"name": "Claims source retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"requestMethod\": \"POST\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Claims source not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update a claims source",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"claim-sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Claims source ID"
												}
											]
										},
										"description": "Updates an existing claim source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_UPDATE_START\n* CLAIM_SOURCE_UPDATE_SUCCESS\n* CLAIM_SOURCE_UPDATE_FAIL\n"
									},
									"response": [
										{
											"name": "Claims source updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"requestMethod\": \"POST\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Claims source not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete a claims source",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"claim-sources",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Claims source ID"
												}
											]
										},
										"description": "Deletes an existing claims source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_DELETE_START\n* CLAIM_SOURCE_DELETE_SUCCESS\n* CLAIM_SOURCE_DELETE_FAIL\n"
									},
									"response": [
										{
											"name": "Claims source deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "Claims source not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/claim-sources/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"claim-sources",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Credential issuance",
							"item": [
								{
									"name": "Request authorization for access to resources",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code",
													"description": "(Required) The response type, which must be 'code'."
												},
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) The client identifier."
												},
												{
													"key": "redirect_uri",
													"value": "<string>",
													"description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
												},
												{
													"key": "scope",
													"value": "<string>",
													"description": "(Required) The scope of the access request."
												},
												{
													"key": "state",
													"value": "<string>",
													"description": "An opaque value used by the client to maintain state between the request and callback.",
													"disabled": true
												},
												{
													"key": "code_challenge_method",
													"value": "S256",
													"description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
												},
												{
													"key": "code_challenge",
													"value": "<string>",
													"description": "(Required) A high entropy random challenge generated by the client."
												}
											]
										},
										"description": "This endpoint is used to request authorization from the user for access to the requested resources. After the user approves the request, an authorization code is returned to the client.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-authorization-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-authorization-endpoint)\nSee [https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1)\n\n### **Analytic events**\n* OPENID_AUTHORIZE_START\n* OPENID_AUTHORIZE_SUCCESS\n* OPENID_AUTHORIZE_FAIL\n"
									},
									"response": [
										{
											"name": "Redirection to client application with authorization code",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"authorize"
													],
													"query": [
														{
															"key": "response_type",
															"value": "code",
															"description": "(Required) The response type, which must be 'code'."
														},
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "(Required) The scope of the access request."
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "An opaque value used by the client to maintain state between the request and callback.",
															"disabled": true
														},
														{
															"key": "code_challenge_method",
															"value": "S256",
															"description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
														},
														{
															"key": "code_challenge",
															"value": "<string>",
															"description": "(Required) A high entropy random challenge generated by the client."
														}
													]
												}
											},
											"status": "Found",
											"code": 302,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Location",
													"value": "<string>",
													"description": {
														"content": "URL to redirect to with the authorization code",
														"type": "text/plain"
													}
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request. The request was malformed or missing required parameters.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"authorize"
													],
													"query": [
														{
															"key": "response_type",
															"value": "code",
															"description": "(Required) The response type, which must be 'code'."
														},
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "(Required) The scope of the access request."
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "An opaque value used by the client to maintain state between the request and callback.",
															"disabled": true
														},
														{
															"key": "code_challenge_method",
															"value": "S256",
															"description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
														},
														{
															"key": "code_challenge",
															"value": "<string>",
															"description": "(Required) A high entropy random challenge generated by the client."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized. The client is not authorized to access this resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"authorize"
													],
													"query": [
														{
															"key": "response_type",
															"value": "code",
															"description": "(Required) The response type, which must be 'code'."
														},
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "(Required) The scope of the access request."
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "An opaque value used by the client to maintain state between the request and callback.",
															"disabled": true
														},
														{
															"key": "code_challenge_method",
															"value": "S256",
															"description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
														},
														{
															"key": "code_challenge",
															"value": "<string>",
															"description": "(Required) A high entropy random challenge generated by the client."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden. The authorization server refuses to grant the client access to the resource.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"authorize"
													],
													"query": [
														{
															"key": "response_type",
															"value": "code",
															"description": "(Required) The response type, which must be 'code'."
														},
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "(Required) The scope of the access request."
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "An opaque value used by the client to maintain state between the request and callback.",
															"disabled": true
														},
														{
															"key": "code_challenge_method",
															"value": "S256",
															"description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
														},
														{
															"key": "code_challenge",
															"value": "<string>",
															"description": "(Required) A high entropy random challenge generated by the client."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error. An unexpected error occurred.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"authorize"
													],
													"query": [
														{
															"key": "response_type",
															"value": "code",
															"description": "(Required) The response type, which must be 'code'."
														},
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "(Required) The scope of the access request."
														},
														{
															"key": "state",
															"value": "<string>",
															"description": "An opaque value used by the client to maintain state between the request and callback.",
															"disabled": true
														},
														{
															"key": "code_challenge_method",
															"value": "S256",
															"description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
														},
														{
															"key": "code_challenge",
															"value": "<string>",
															"description": "(Required) A high entropy random challenge generated by the client."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Exchange authorization code for access token",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "<string>",
													"description": "(Required) The client identifier."
												},
												{
													"key": "grant_type",
													"value": "authorization_code",
													"description": "(Required) The grant type, which must be 'authorization_code'."
												},
												{
													"key": "redirect_uri",
													"value": "<string>",
													"description": "(Required) The redirect URI that was used in the authorization request."
												},
												{
													"key": "code",
													"value": "<string>",
													"description": "(Required) The authorization code obtained from the authorization endpoint."
												},
												{
													"key": "code_verifier",
													"value": "<string>",
													"description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/oauth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"oauth",
												"token"
											]
										},
										"description": "This endpoint is used to exchange an authorization code for an access token. The authorization code is obtained from the authorization endpoint after the user has authenticated and granted access.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-token-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-token-endpoint)\n\n### **Analytic events**\n* OPENID_TOKEN_START\n* OPENID_TOKEN_SUCCESS\n* OPENID_TOKEN_FAIL\n"
									},
									"response": [
										{
											"name": "Access token successfully returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"description": "(Required) The grant type, which must be 'authorization_code'."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The redirect URI that was used in the authorization request."
														},
														{
															"key": "code",
															"value": "<string>",
															"description": "(Required) The authorization code obtained from the authorization endpoint."
														},
														{
															"key": "code_verifier",
															"value": "<string>",
															"description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"token"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"access_token\": \"<string>\",\n\t\"token_type\": \"Bearer\",\n\t\"expires_in\": \"<integer>\",\n\t\"scope\": \"<string>\"\n}"
										},
										{
											"name": "Bad request. The request was malformed or missing required parameters.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"description": "(Required) The grant type, which must be 'authorization_code'."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The redirect URI that was used in the authorization request."
														},
														{
															"key": "code",
															"value": "<string>",
															"description": "(Required) The authorization code obtained from the authorization endpoint."
														},
														{
															"key": "code_verifier",
															"value": "<string>",
															"description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"token"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized. The client is not authorized to access this resource.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"description": "(Required) The grant type, which must be 'authorization_code'."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The redirect URI that was used in the authorization request."
														},
														{
															"key": "code",
															"value": "<string>",
															"description": "(Required) The authorization code obtained from the authorization endpoint."
														},
														{
															"key": "code_verifier",
															"value": "<string>",
															"description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"token"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden. The authorization server refuses to grant the client access to the resource.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"description": "(Required) The grant type, which must be 'authorization_code'."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The redirect URI that was used in the authorization request."
														},
														{
															"key": "code",
															"value": "<string>",
															"description": "(Required) The authorization code obtained from the authorization endpoint."
														},
														{
															"key": "code_verifier",
															"value": "<string>",
															"description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"token"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error. An unexpected error occurred.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "client_id",
															"value": "<string>",
															"description": "(Required) The client identifier."
														},
														{
															"key": "grant_type",
															"value": "authorization_code",
															"description": "(Required) The grant type, which must be 'authorization_code'."
														},
														{
															"key": "redirect_uri",
															"value": "<string>",
															"description": "(Required) The redirect URI that was used in the authorization request."
														},
														{
															"key": "code",
															"value": "<string>",
															"description": "(Required) The authorization code obtained from the authorization endpoint."
														},
														{
															"key": "code_verifier",
															"value": "<string>",
															"description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/oauth/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"oauth",
														"token"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Issue a verifiable credential",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"format\": \"ldp_vc\",\n\t\"credential_definition\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t]\n\t},\n\t\"proof\": {\n\t\t\"proof_type\": \"jwt\",\n\t\t\"jwt\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/openid/credential",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"openid",
												"credential"
											]
										},
										"description": "Issues a verifiable credential to a subject as part of the OpenID4VCI protocol.\n\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-credential-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-credential-endpoint)\n\n### **Analytic events**\n* OPENID_CREDENTIAL_START\n* OPENID_CREDENTIAL_SUCCESS\n* OPENID_CREDENTIAL_FAIL"
									},
									"response": [
										{
											"name": "Credential issued",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"format\": \"ldp_vc\",\n\t\"credential_definition\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t]\n\t},\n\t\"proof\": {\n\t\t\"proof_type\": \"jwt\",\n\t\t\"jwt\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/openid/credential",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"openid",
														"credential"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"credential\": {\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"format\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Create an OpenID4VCI credential offer",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"credentials\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"request_parameters\": {\n\t\t\"login_hint\": \"<string>\",\n\t\t\"prompt\": \"<string>\"\n\t}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/openid/offers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"openid",
												"offers"
											]
										},
										"description": "Returns an OpenID4VCI credential offer URI.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#section-10.1](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#section-10.1)\n\n### **Analytic events**\n* OPENID_OFFER_CREATE_START\n* OPENID_OFFER_CREATE_SUCCESS\n* OPENID_OFFER_CREATE_FAIL"
									},
									"response": [
										{
											"name": "Credential offer URI created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"credentials\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"request_parameters\": {\n\t\t\"login_hint\": \"<string>\",\n\t\t\"prompt\": \"<string>\"\n\t}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/openid/offers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"openid",
														"offers"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"uri\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Retrieve OpenID4VCI issuer metadata",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/.well-known/openid-credential-issuer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												".well-known",
												"openid-credential-issuer"
											]
										},
										"description": "Returns OpenID4VCI issuer metadata. This is the standard OpenID4VCI Well Known endpoint for your tenant.\n\nThis endpoint is unprotected, public facing and can be deterministically found at the root of the tenant subdomain or alias by any party wishing to discover the OpenID4VCI capabilities."
									},
									"response": [
										{
											"name": "OpenID4VCI credential issuer metadata retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/.well-known/openid-credential-issuer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														".well-known",
														"openid-credential-issuer"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"issuer\": \"<uri>\",\n\t\"authorization_endpoint\": \"<uri>\",\n\t\"token_endpoint\": \"<uri>\",\n\t\"scopes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"response_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"response_modes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grant_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"code_challenge_methods_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"credential_issuer\": \"<uri>\",\n\t\"credential_endpoint\": \"<uri>\",\n\t\"credentials_supported\": [\n\t\t{\n\t\t\t\"format\": \"<string>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"scope\": \"<string>\",\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {},\n\t\t\t\"cryptographic_binding_methods_supported\": \"<string>\",\n\t\t\t\"cryptographic_suites_supported\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"<string>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"scope\": \"<string>\",\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {},\n\t\t\t\"cryptographic_binding_methods_supported\": \"<string>\",\n\t\t\t\"cryptographic_suites_supported\": \"<string>\"\n\t\t}\n\t],\n\t\"mdoc_iacas_uri\": \"<uri>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Search users",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"claims\": {},\n\t\"authenticationProvider\": {\n\t\t\"providerId\": \"<string>\",\n\t\t\"subjectId\": \"<string>\"\n\t},\n\t\"limit\": \"<number>\",\n\t\"cursor\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/search",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												"search"
											]
										},
										"description": "Returns a list of users from the tenant that match the provided search criteria.\n\n### **Analytic events**\n* USER_SEARCH_START\n* USER_SEARCH_SUCCESS\n* USER_SEARCH_FAIL"
									},
									"response": [
										{
											"name": "Users retrieved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claims\": {},\n\t\"authenticationProvider\": {\n\t\t\"providerId\": \"<string>\",\n\t\t\"subjectId\": \"<string>\"\n\t},\n\t\"limit\": \"<number>\",\n\t\"cursor\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"search"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {},\n\t\t\t\"authenticationProvider\": {\n\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\"subjectId\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {},\n\t\t\t\"authenticationProvider\": {\n\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\"subjectId\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claims\": {},\n\t\"authenticationProvider\": {\n\t\t\"providerId\": \"<string>\",\n\t\t\"subjectId\": \"<string>\"\n\t},\n\t\"limit\": \"<number>\",\n\t\"cursor\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														"search"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all users",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of entries",
													"disabled": true
												}
											]
										},
										"description": "Returns a list of all users on your tenant.\n\n### **Analytic events**\n* USER_RETRIEVE_LIST_START\n* USER_RETRIEVE_LIST_SUCCESS\n* USER_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "Users retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {}\n\t\t}\n\t]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of entries",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve a user",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Retrieve an existing user by providing its ID.\n* USER_RETRIEVE_START\n* USER_RETRIEVE_SUCCESS\n* USER_RETRIEVE_FAIL"
									},
									"response": [
										{
											"name": "User retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"claims\": {}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update a User",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"claims\": {}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Updates an existing user by providing its ID.\n\n* USER_UPDATE_START\n* USER_UPDATE_SUCCESS\n* USER_UPDATE_FAIL"
									},
									"response": [
										{
											"name": "User updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claims\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"id\": \"<uuid>\",\n\t\"claims\": {}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claims\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"claims\": {}\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete a user",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Deletes a user and removes any persisted data related to them by providing the user ID.\n\n> Any credentials issued to the user remain valid even after the user is deleted.\n  \n### **Analytic events**\n* USER_DELETE_START\n* USER_DELETE_SUCCESS\n* USER_DELETE_FAIL"
									},
									"response": [
										{
											"name": "User deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all user credentials data",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/core/v1/users/:userId/credentials",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"core",
												"v1",
												"users",
												":userId",
												"credentials"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "userId",
													"value": "<uuid>",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Returns a list of metadata for all the credentials referenced by the provided `userId`.\n"
									},
									"response": [
										{
											"name": "User credentials retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:userId/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":userId",
														"credentials"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Range size of the list, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the list",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"profile\": \"web-semantic\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"profile\": \"web-semantic\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/core/v1/users/:userId/credentials",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"core",
														"v1",
														"users",
														":userId",
														"credentials"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Range size of the list, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the list",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Credential management",
			"item": [
				{
					"name": "CWT credentials management",
					"item": [
						{
							"name": "Delete CWT credential metadata",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Credential ID"
										}
									]
								},
								"description": "Deletes all credential metadata from the tenant for a specific credential by providing its ID. If the credential was set to be revocable, it will be permanently revoked upon metadata deletion.\n\nNote that only metadata of revocable credentials or credentials issued via the OpenID4VCI flow is saved.\n\n> Deleted metadata cannot be recovered."
							},
							"response": [
								{
									"name": "Credential metadata deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid id parameter format",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Credential ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all CWT credential revocation lists",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact",
										"revocation-lists"
									]
								},
								"description": "Returns a list of all CWT credential revocation lists on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_START\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Revocation lists retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"revocation-lists"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t}\n]"
								}
							]
						},
						{
							"name": "Retrieve CWT credential revocation list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/cwt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact",
										"revocation-lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "<string>",
											"description": "(Required) The unique identifier of the Revocation List you wish to retrieve."
										}
									]
								},
								"description": "Returns a CWT credential revocation list by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Revocation list retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/cwt"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"revocation-lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/cwt"
										}
									],
									"cookie": [],
									"body": "<string>"
								}
							]
						},
						{
							"name": "Update CWT credential revocation status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Unique credential identifier."
										}
									]
								},
								"description": "Updates the credential status as revoked (invalid) or unrevoked (valid).\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_START\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_FAIL"
							},
							"response": [
								{
									"name": "Revocation status updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"isRevoked\": \"<boolean>\"\n}"
								},
								{
									"name": "Id not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve CWT credential revocation status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Unique credential identifier."
										}
									]
								},
								"description": "Retrieve the revocation status of a CWT credential by providing its ID."
							},
							"response": [
								{
									"name": "Revocation status retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"isRevoked\": \"<boolean>\"\n}"
								},
								{
									"name": "Id not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Semantic CWT credentials management",
					"item": [
						{
							"name": "Delete Semantic CWT credential metadata",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact-semantic",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Credential ID"
										}
									]
								},
								"description": "Deletes all credential metadata from the tenant for a specific credential by providing its ID. If the credential was set to be revocable, it will be permanently revoked upon metadata deletion.\n\nNote that only metadata of revocable credentials or credentials issued via the OpenID4VCI flow is saved.\n\n> Deleted metadata cannot be recovered."
							},
							"response": [
								{
									"name": "Credential metadata deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid id parameter format",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Credential ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all Semantic CWT credential revocation lists",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact-semantic",
										"revocation-lists"
									]
								},
								"description": "Returns a list of all Semantic CWT credential revocation lists on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Revocation lists retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"revocation-lists"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t}\n]"
								}
							]
						},
						{
							"name": "Retrieve Semantic CWT credential revocation list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/cwt"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact-semantic",
										"revocation-lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "<string>",
											"description": "(Required) The unique identifier of the revocation list you wish to retrieve."
										}
									]
								},
								"description": "Returns a Semantic CWT credential revocation list by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Revocation list retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/cwt"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"revocation-lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/cwt"
										}
									],
									"cookie": [],
									"body": "<string>"
								}
							]
						},
						{
							"name": "Update Semantic CWT credential revocation status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact-semantic",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Unique credential identifier (`jti`)"
										}
									]
								},
								"description": "Updates the credential status as revoked (invalid) or unrevoked (valid).\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_FAIL"
							},
							"response": [
								{
									"name": "Revocation status updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"isRevoked\": \"<boolean>\"\n}"
								},
								{
									"name": "Id not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve Semantic CWT credential revocation status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact-semantic",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Unique credential identifier (`jti`)"
										}
									]
								},
								"description": "Retrieve the revocation status of a Semantic CWT credential by providing its ID."
							},
							"response": [
								{
									"name": "Revocation status retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"isRevoked\": \"<boolean>\"\n}"
								},
								{
									"name": "Id not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "JSON credentials management",
					"item": [
						{
							"name": "Retrieve all credential data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic"
									],
									"query": [
										{
											"key": "tag",
											"value": "<string>",
											"description": "Optional tag to filter on.",
											"disabled": true
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "Optional credential type to filter on.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Range size of returned credential entries, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the range of credential entries",
											"disabled": true
										}
									]
								},
								"description": "Returns all available data for existing credentials:\n- For credentials that were created with the `persist` flag set to `true`, the response contains both the credential and its metadata.\n- For credentials that were created with the persist flag set to `false`, the response only contains the metadata (`id`, `tag`, `credentialStatus`, `issuanceDate`).\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_START\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_FAIL\n"
							},
							"response": [
								{
									"name": "Credentials data retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic"
											],
											"query": [
												{
													"key": "tag",
													"value": "<string>",
													"description": "Optional tag to filter on.",
													"disabled": true
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Optional credential type to filter on.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned credential entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of credential entries",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"issuanceDate\": \"<string>\",\n\t\t\t\"credential\": {\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t},\n\t\t\t\"tag\": \"<string>\",\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"issuanceDate\": \"<string>\",\n\t\t\t\"credential\": {\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t},\n\t\t\t\"tag\": \"<string>\",\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad query parameters in request.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic"
											],
											"query": [
												{
													"key": "tag",
													"value": "<string>",
													"description": "Optional tag to filter on.",
													"disabled": true
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "Optional credential type to filter on.",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned credential entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of credential entries",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve credential data",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Credential ID"
										}
									]
								},
								"description": "Returns all available data for an existing credential that matches the provided ID:\n- For credentials that were created with the `persist` flag set to `true`, the response contains both the credential and its metadata.\n- For credentials that were created with the persist flag set to `false`, the response only contains the metadata (`id`, `tag`, `credentialStatus`, `issuanceDate`)\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Credential data retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"issuanceDate\": \"<string>\",\n\t\"credential\": {\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"tag\": \"<string>\",\n\t\"credentialStatus\": {\n\t\t\"id\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\"revocationListCredential\": \"<string>\"\n\t}\n}"
								},
								{
									"name": "Credential ID not in a UUID format",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete credential data",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Credential ID"
										}
									]
								},
								"description": "Deletes all stored data for an existing credential that matches the provided ID. If the credential is revocable, it will also be permanently revoked.\n\n> Removed credential data cannot be recovered.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_DELETE_START\n* CREDENTIAL_WEB_SEMANTIC_DELETE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Credential deleted and revoked if revocable",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid id parameter format",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Credential ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Set credential revocation status",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Credential ID"
										}
									]
								},
								"description": "Sets the recovation status of the credential that matches the provided ID as `true` (revoked) or `false` (unrevoked).\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_FAIL\n"
							},
							"response": [
								{
									"name": "Revocation status updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve credential revocation status",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Credential ID"
										}
									]
								},
								"description": "Returns the revocation status of the credential matching the provided ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Credential status",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"isRevoked\": \"<boolean>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id",
												"revocation-status"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve revocation list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/revocation-lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"revocation-lists",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Revocation list ID. This value can be found within the credential you created. Look at the value for `Credentential.credential.credentialStatus.id`, the string after `https://tenant.vii.mattr.global/core/v1/revocation-lists/` is what you're looking for"
										}
									]
								},
								"description": "Returns the revocation list matching the provided ID."
							},
							"response": [
								{
									"name": "Revocation list retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/revocation-lists/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"revocation-lists",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"@context\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"type\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"issuanceDate\": \"<dateTime>\",\n\t\"credentialSubject\": {\n\t\t\"givenName\": \"<string>\",\n\t\t\"familyName\": \"<string>\",\n\t\t\"alumniOf\": \"<string>\"\n\t},\n\t\"proof\": {\n\t\t\"type\": \"<string>\",\n\t\t\"created\": \"<dateTime>\",\n\t\t\"jws\": \"<string>\",\n\t\t\"proofPurpose\": \"<string>\",\n\t\t\"verificationMethod\": \"<string>\"\n\t},\n\t\"issuer\": {\n\t\t\"id\": \"<string>\",\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"credentialStatus\": {\n\t\t\"id\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\"revocationListCredential\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"description\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/revocation-lists/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"revocation-lists",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Create a revocation message payload",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status/notification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										":id",
										"revocation-status",
										"notification"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Unique identifier for the credential whose status has changed."
										}
									]
								},
								"description": "Returns a message in JWM format that can be used to notify subjects based on their credential revocation status change.\n\nTo send a notification to the Subject DID holder, use the returned payload with the [encrypt](#operation/encryptMessage) and [send](#operation/sendMessage) endpoints.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Revocation message payload created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status/notification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												":id",
												"revocation-status",
												"notification"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"to\": [\n\t\t{\n\t\t\t\"string\": false\n\t\t},\n\t\t{\n\t\t\t\"string\": \"fugiat laborum eiusmod reprehenderit\"\n\t\t}\n\t],\n\t\"from\": \"<string>\",\n\t\"created_time\": \"<number>\",\n\t\"body\": {\n\t\t\"revocationListCredential\": \"<string>\",\n\t\t\"revocationListIndex\": \"<string>\",\n\t\t\"isRevoked\": \"<boolean>\"\n\t}\n}"
								}
							]
						}
					]
				},
				{
					"name": "mDocs management",
					"item": [
						{
							"name": "Delete mDoc metadata",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) mDoc ID"
										}
									]
								},
								"description": "Deletes all stored data for an existing mDoc that matches the provided ID.\n\n> Removed credential data cannot be recovered.\n\n### **Analytic events**\n* USER_CREDENTIAL_DELETE_START\n* USER_CREDENTIAL_DELETE_SUCCESS\n* USER_CREDENTIAL_DELETE_FAIL"
							},
							"response": [
								{
									"name": "mDoc metadata deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid id parameter format",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "mDoc not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Credential verification",
			"item": [
				{
					"name": "CWT credentials verification",
					"item": [
						{
							"name": "Verify a CWT credential",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
											"type": "text"
										},
										{
											"key": "trustedIssuers",
											"value": "<string>,<string>",
											"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
											"type": "text"
										},
										{
											"key": "assertValidFrom",
											"value": "true",
											"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
											"type": "text"
										},
										{
											"key": "assertValidUntil",
											"value": "true",
											"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
											"type": "text"
										},
										{
											"key": "checkRevocation",
											"value": "true",
											"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact",
										"verify"
									]
								},
								"description": "Verify a CWT credential by providing the encoded payload and specifying verification options.\n\nYou can provide a valid CWT credential as either an encoded string or a QR code in a PDF document or an image file.\n\nStandard checks performed on all verification requests:\n- Conformance of the string and encoded data. All string representations of CWT credentials must be prefixed with `CSC/1`.\n- Decoded payload structure is a valid CWT credential.\n- Issuer DID can be used to resolve its `did.json` document.\n- Public key from issuer's `did.json` document validates the proof signature, confirming the credential has not been tampered with.\n\nOptional parameter checks:\n- Credential was issued by a trusted issuer.\n- Current time is after the beginning of the credential validity period.\n- Current time is not after the end of the credential validity period.\n- Credential has not been revoked.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_VERIFY_START\n* CREDENTIAL_COMPACT_VERIFY_SUCCESS\n* CREDENTIAL_COMPACT_VERIFY_FAIL"
							},
							"response": [
								{
									"name": "Verification completed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"verified\": \"<boolean>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t},\n\t\"error\": {\n\t\t\"type\": \"<string>\",\n\t\t\"message\": \"<string>\",\n\t\t\"details\": {}\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Payload Too Large",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"verify"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact",
												"verify"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Semantic CWT credentials verification",
					"item": [
						{
							"name": "Verify a Semantic CWT credential",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<string>",
											"description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
											"type": "text"
										},
										{
											"key": "trustedIssuers",
											"value": "<string>,<string>",
											"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
											"type": "text"
										},
										{
											"key": "assertValidFrom",
											"value": "true",
											"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
											"type": "text"
										},
										{
											"key": "assertValidUntil",
											"value": "true",
											"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
											"type": "text"
										},
										{
											"key": "checkRevocation",
											"value": "true",
											"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"compact-semantic",
										"verify"
									]
								},
								"description": "Verify a Semantic CWT credential by providing the encoded payload and specifying verification options.\n\nYou can provide a valid Semantic CWT credential as either an encoded string or a QR code in a PDF document or an image file.\n\nStandard checks performed on all verification requests:\n- Conformance of the string and encoded data. All string representations of CWT credentials must be prefixed with `CSC/1`.\n- Decoded payload CWT structure and attributes can be validated.\n- Remote context schema can be resolved and validate claims can be dereferenced.\n- Issuer DID can be used to resolve its `did.json` document.\n- Public key from issuer's `did.json` document validates the proof signature, confirming the credential has not been tampered with.\n\nOptional parameter checks:\n- Credential was issued by a trusted issuer.\n- Current time is after the beginning of the credential validity period.\n- Current time is not after the end of the credential validity period.\n- Credential has not been revoked.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_START\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_FAIL"
							},
							"response": [
								{
									"name": "Verification completed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"verified\": \"<boolean>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"site\": \"<string>\",\n\t\t\t\t\"Lorem8\": \"<string>\",\n\t\t\t\t\"Duis_7\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t},\n\t\"error\": {\n\t\t\"type\": \"<string>\",\n\t\t\"message\": \"<string>\",\n\t\t\"details\": {}\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Payload Too Large",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"verify"
											]
										}
									},
									"status": "Request Entity Too Large",
									"code": 413,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unsupported Media Type",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<string>",
													"description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
													"type": "text"
												},
												{
													"key": "trustedIssuers",
													"value": "<string>,<string>",
													"description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
													"type": "text"
												},
												{
													"key": "assertValidFrom",
													"value": "true",
													"description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
													"type": "text"
												},
												{
													"key": "assertValidUntil",
													"value": "true",
													"description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
													"type": "text"
												},
												{
													"key": "checkRevocation",
													"value": "true",
													"description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"compact-semantic",
												"verify"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "JSON credentials verification",
					"item": [
						{
							"name": "Verify a JSON credential",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"assertExpiry\": true,\n\t\"checkRevocation\": true,\n\t\"assertValidFrom\": true,\n\t\"assertValidUntil\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"verify"
									]
								},
								"description": "Verify a JSON credential by providing its payload. The credential is verified against the following criteria:\n- Issuer DID can be resolved, so that the referenced DID Document is available and valid and the public key is obtainable.\n- Proof is valid and the credential has not been tampered with.\n- JSON-LD context is valid for subject claims.\n\nOptional verification checks:\n- If `assertExpiry` is set to `true` and the credential has a set expiration date, verification will fail if the expiration date has passed.\n- If `checkRevocation` is set to `true` and the provided credential contains a revocation status list, verification will fail if the credential has been set to `revoked`.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_START\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_FAIL"
							},
							"response": [
								{
									"name": "Verification completed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"assertExpiry\": true,\n\t\"checkRevocation\": true,\n\t\"assertValidFrom\": true,\n\t\"assertValidUntil\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"verified\": \"<boolean>\",\n\t\"reason\": {\n\t\t\"type\": \"<string>\",\n\t\t\"message\": \"<string>\"\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"assertExpiry\": true,\n\t\"checkRevocation\": true,\n\t\"assertValidFrom\": true,\n\t\"assertValidUntil\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Create a presentation template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"presentations",
										"templates"
									]
								},
								"description": "Creates a presentation template defining what type of credential is required for a particular verification workflow. Presentation templates are used to create presentation requests that are shared with a specific holder.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Presentation template created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad request, Invalid request body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all presentation templates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"presentations",
										"templates"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									]
								},
								"description": "Returns a list of all presentation templates on your tenant.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_FAIL"
							},
							"response": [
								{
									"name": "Presentation templates retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"domain\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"query\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"domain\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"query\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve a presentation template",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Presentation template ID"
										}
									]
								},
								"description": "Retrieve an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Presentation template retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
								},
								{
									"name": "Invalid templateId parameter format",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete a presentation template",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Presentation template ID"
										}
									]
								},
								"description": "Deletes an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Presentation template deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid templateId parameter format.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Update a presentation template",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Presentation template ID"
										}
									]
								},
								"description": "Updates an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_FAIL"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Create a presentation request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"challenge\": \"<string>\",\n\t\"templateId\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"expiresTime\": \"<number>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"presentations",
										"requests"
									]
								},
								"description": "Creates a short lived presentation request based on an existing presentation template. The request is returned in the form of a JWM message and must be [signed](#operation/signMessage) and sent to the holder via one of the following methods:\n- QR code.\n- Deeplink.\n- [Encrypted](#operation/encryptMessage) and [sent](#operation/sendMessage) as a wallet notification.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_START\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_FAIL"
							},
							"response": [
								{
									"name": "Presentation request created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"challenge\": \"<string>\",\n\t\"templateId\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"expiresTime\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"requests"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"request\": {\n\t\t\"id\": \"<uuid>\",\n\t\t\"type\": \"<uri>\",\n\t\t\"from\": \"<string>\",\n\t\t\"created_time\": \"<number>\",\n\t\t\"expires_time\": \"<number>\",\n\t\t\"reply_url\": \"<string>\",\n\t\t\"reply_to\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"body\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"domain\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"query\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"challenge\": \"<uuid>\"\n\t\t}\n\t},\n\t\"didcommUri\": \"<uri>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"challenge\": \"<string>\",\n\t\"templateId\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"expiresTime\": \"<number>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"requests"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Verify a verifiable presentation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"presentation\": {\n\t\t\"verifiableCredential\": [\n\t\t\t{\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<string>\",\n\t\t\"holder\": \"<string>\",\n\t\t\"proof\": [\n\t\t\t{\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<string>\",\n\t\t\t\t\"challenge\": \"<string>\",\n\t\t\t\t\"domain\": \"<string>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t\"challenge\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"web-semantic",
										"presentations",
										"verify"
									]
								},
								"description": "Verifies a provided verifiable presentation that adheres to the [W3C Verifiable Credential Data Model](https://www.w3.org/TR/vc-data-model/#presentations):\n- Ensures the presentation conforms to the VC Data model.\n- For each `verifiableCredential` objects:\n  - Issuer DID can be resolved.\n  - JSON-LD context is valid for subject claims.\n  - Proof is valid & the credential has not been tampered with.\n  - Is not in a `revoked` status on a `RevocationList2020`.\n  - The proof is valid for each subjectDID to prove ownership.\n  - Valid proof exists for the presentation `holderDID`.\n\nThe request must include a `presentation` object that adheres to the [W3C Verifiable Credential Data Model](https://www.w3.org/TR/vc-data-model/#presentations).\n\nIf a `challenge` and/or `domain` is provided they are used for credential verification. Otherwise, the `challenge` and/or `domain` within the presentation proof is used instead.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_VERIFY_START\n* PRESENTATION_WEB_SEMANTIC_VERIFY_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_VERIFY_FAIL"
							},
							"response": [
								{
									"name": "Presentation verification completed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"presentation\": {\n\t\t\"verifiableCredential\": [\n\t\t\t{\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<string>\",\n\t\t\"holder\": \"<string>\",\n\t\t\"proof\": [\n\t\t\t{\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<string>\",\n\t\t\t\t\"challenge\": \"<string>\",\n\t\t\t\t\"domain\": \"<string>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t\"challenge\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"verified\": \"<boolean>\",\n\t\"reason\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"presentation\": {\n\t\t\"verifiableCredential\": [\n\t\t\t{\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<string>\",\n\t\t\"holder\": \"<string>\",\n\t\t\"proof\": [\n\t\t\t{\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<string>\",\n\t\t\t\t\"challenge\": \"<string>\",\n\t\t\t\t\"domain\": \"<string>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t\"challenge\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"web-semantic",
												"presentations",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				},
				{
					"name": "mDocs verification",
					"item": [
						{
							"name": "Create a trusted issuer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"certificatePem\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"trusted-issuers"
									]
								},
								"description": "Add a new mDocs trusted issuer, to be used in online presentation workflows.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_CREATE_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_CREATE_FAIL\n"
							},
							"response": [
								{
									"name": "Trusted issuer created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"certificatePem\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"certificatePem\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<date>\",\n\t\t\"commonName\": \"<date>\"\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"certificatePem\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve all trusted issuers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"trusted-issuers"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Range size of the list, default 100",
											"disabled": true
										},
										{
											"key": "cursor",
											"value": "<string>",
											"description": "Starting point for the list",
											"disabled": true
										}
									]
								},
								"description": "Retrieves all mDocs trusted issuers from your tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_LIST_FAIL\n"
							},
							"response": [
								{
									"name": "Trusted issuers retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Range size of the list, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the list",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve a trusted issuer",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"trusted-issuers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Trusted issuer ID"
										}
									]
								},
								"description": "Retrieves an existing trusted issuer from your tenant by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_FAIL\n"
							},
							"response": [
								{
									"name": "Trusted issuer retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"id\": \"<uuid>\",\n\t\"certificatePem\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<date>\",\n\t\t\"commonName\": \"<date>\"\n\t}\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Trusted issuer Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete a trusted issuer",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"credentials",
										"mobile",
										"trusted-issuers",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) Trusted issuer ID"
										}
									]
								},
								"description": "Deletes an existing trusted issuer by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_DELETE_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_DELETE_FAIL\n"
							},
							"response": [
								{
									"name": "Trusted issuer deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Trusted issuer not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"credentials",
												"mobile",
												"trusted-issuers",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve presentation session result",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"presentations",
										"sessions",
										":sessionId",
										"result"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "<uuid>",
											"description": "(Required) Session ID"
										}
									]
								},
								"description": "Retrieves the result of an online presentation session by providing the session's ID.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_RETRIEVE_START\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_RETRIEVE_SUCCESS\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Session result retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"sessions",
												":sessionId",
												"result"
											],
											"variable": [
												{
													"key": "sessionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"sessionId\": \"<string>\",\n\t\"challenge\": \"<string>\",\n\t\"credentials\": [\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"validityInfo\": {\n\t\t\t\t\"signed\": \"<string>\",\n\t\t\t\t\"validFrom\": \"<string>\",\n\t\t\t\t\"validUntil\": \"<string>\",\n\t\t\t\t\"expectedUpdate\": \"<string>\"\n\t\t\t},\n\t\t\t\"claims\": {},\n\t\t\t\"claimErrors\": {},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuerInfo\": {\n\t\t\t\t\"commonName\": \"<string>\",\n\t\t\t\t\"trustedIssuerId\": \"<string>\"\n\t\t\t},\n\t\t\t\"verificationResult\": {\n\t\t\t\t\"verified\": \"<boolean>\",\n\t\t\t\t\"reason\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"ecosystemValidation\": {\n\t\t\t\t\"validated\": \"<boolean>\",\n\t\t\t\t\"policyVersion\": \"<string>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"error\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"validityInfo\": {\n\t\t\t\t\"signed\": \"<string>\",\n\t\t\t\t\"validFrom\": \"<string>\",\n\t\t\t\t\"validUntil\": \"<string>\",\n\t\t\t\t\"expectedUpdate\": \"<string>\"\n\t\t\t},\n\t\t\t\"claims\": {},\n\t\t\t\"claimErrors\": {},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuerInfo\": {\n\t\t\t\t\"commonName\": \"<string>\",\n\t\t\t\t\"trustedIssuerId\": \"<string>\"\n\t\t\t},\n\t\t\t\"verificationResult\": {\n\t\t\t\t\"verified\": \"<boolean>\",\n\t\t\t\t\"reason\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"ecosystemValidation\": {\n\t\t\t\t\"validated\": \"<boolean>\",\n\t\t\t\t\"policyVersion\": \"<string>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"error\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\t\"credentialErrors\": [\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"errorCode\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"errorCode\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Session not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"sessions",
												":sessionId",
												"result"
											],
											"variable": [
												{
													"key": "sessionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Exchange session result",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"presentations",
										"sessions",
										":sessionId",
										"result"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "<uuid>",
											"description": "(Required) Session ID"
										}
									]
								},
								"description": "Exchange presentation session result.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_EXCHANGE_START\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_EXCHANGE_SUCCESS\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_EXCHANGE_FAIL"
							},
							"response": [
								{
									"name": "Session result exchanged",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"sessions",
												":sessionId",
												"result"
											],
											"variable": [
												{
													"key": "sessionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"sessionId\": \"<string>\",\n\t\"challenge\": \"<string>\",\n\t\"credentials\": [\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"validityInfo\": {\n\t\t\t\t\"signed\": \"<string>\",\n\t\t\t\t\"validFrom\": \"<string>\",\n\t\t\t\t\"validUntil\": \"<string>\",\n\t\t\t\t\"expectedUpdate\": \"<string>\"\n\t\t\t},\n\t\t\t\"claims\": {},\n\t\t\t\"claimErrors\": {},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuerInfo\": {\n\t\t\t\t\"commonName\": \"<string>\",\n\t\t\t\t\"trustedIssuerId\": \"<string>\"\n\t\t\t},\n\t\t\t\"verificationResult\": {\n\t\t\t\t\"verified\": \"<boolean>\",\n\t\t\t\t\"reason\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"ecosystemValidation\": {\n\t\t\t\t\"validated\": \"<boolean>\",\n\t\t\t\t\"policyVersion\": \"<string>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"error\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"validityInfo\": {\n\t\t\t\t\"signed\": \"<string>\",\n\t\t\t\t\"validFrom\": \"<string>\",\n\t\t\t\t\"validUntil\": \"<string>\",\n\t\t\t\t\"expectedUpdate\": \"<string>\"\n\t\t\t},\n\t\t\t\"claims\": {},\n\t\t\t\"claimErrors\": {},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuerInfo\": {\n\t\t\t\t\"commonName\": \"<string>\",\n\t\t\t\t\"trustedIssuerId\": \"<string>\"\n\t\t\t},\n\t\t\t\"verificationResult\": {\n\t\t\t\t\"verified\": \"<boolean>\",\n\t\t\t\t\"reason\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"ecosystemValidation\": {\n\t\t\t\t\"validated\": \"<boolean>\",\n\t\t\t\t\"policyVersion\": \"<string>\",\n\t\t\t\t\"failReasons\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"error\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"message\": \"<string>\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\t\"credentialErrors\": [\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"errorCode\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"errorCode\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"sessions",
												":sessionId",
												"result"
											],
											"variable": [
												{
													"key": "sessionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"sessions",
												":sessionId",
												"result"
											],
											"variable": [
												{
													"key": "sessionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Session not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"sessions",
												":sessionId",
												"result"
											],
											"variable": [
												{
													"key": "sessionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Update verifier configuration",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"redirectUris\": [\n\t\t\"<string>\"\n\t],\n\t\"walletProviders\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t}\n\t],\n\t\"domains\": [\n\t\t\"<string>\"\n\t],\n\t\"supportedMode\": \"all\",\n\t\"certificateCommonName\": \"{tenantDomain} Verifier\",\n\t\"certificateCountry\": \"NZ\",\n\t\"display\": {\n\t\t\"logoImage\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"altText\": \"<string>\"\n\t\t},\n\t\t\"headerText\": \"<string>\",\n\t\t\"bodyText\": \"<string>\",\n\t\t\"privacyPolicyUrl\": \"<string>\",\n\t\t\"primaryColorHex\": \"<string>\"\n\t},\n\t\"resultAvailableInFrontChannel\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/presentations/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"presentations",
										"configuration"
									]
								},
								"description": "Creates or updates verifier configuration for online presentation of mDocs.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_CONFIGURATION_UPSERT_START\n* CREDENTIAL_PRESENTATION_VERIFIER_CONFIGURATION_UPSERT_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_CONFIGURATION_UPSERT_FAIL"
							},
							"response": [
								{
									"name": "Verifier configuration updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"redirectUris\": [\n\t\t\"<string>\"\n\t],\n\t\"walletProviders\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t}\n\t],\n\t\"domains\": [\n\t\t\"<string>\"\n\t],\n\t\"supportedMode\": \"all\",\n\t\"certificateCommonName\": \"{tenantDomain} Verifier\",\n\t\"certificateCountry\": \"NZ\",\n\t\"display\": {\n\t\t\"logoImage\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"altText\": \"<string>\"\n\t\t},\n\t\t\"headerText\": \"<string>\",\n\t\t\"bodyText\": \"<string>\",\n\t\t\"privacyPolicyUrl\": \"<string>\",\n\t\t\"primaryColorHex\": \"<string>\"\n\t},\n\t\"resultAvailableInFrontChannel\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"walletProviders\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t}\n\t],\n\t\"domains\": [\n\t\t\"<string>\"\n\t],\n\t\"supportedMode\": \"all\",\n\t\"redirectUris\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"display\": {\n\t\t\"logoImage\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"altText\": \"<string>\"\n\t\t},\n\t\t\"headerText\": \"<string>\",\n\t\t\"bodyText\": \"<string>\",\n\t\t\"privacyPolicyUrl\": \"<string>\",\n\t\t\"primaryColorHex\": \"<string>\"\n\t},\n\t\"resultAvailableInFrontChannel\": true,\n\t\"certificatePem\": \"<string>\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"redirectUris\": [\n\t\t\"<string>\"\n\t],\n\t\"walletProviders\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t}\n\t],\n\t\"domains\": [\n\t\t\"<string>\"\n\t],\n\t\"supportedMode\": \"all\",\n\t\"certificateCommonName\": \"{tenantDomain} Verifier\",\n\t\"certificateCountry\": \"NZ\",\n\t\"display\": {\n\t\t\"logoImage\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"altText\": \"<string>\"\n\t\t},\n\t\t\"headerText\": \"<string>\",\n\t\t\"bodyText\": \"<string>\",\n\t\t\"privacyPolicyUrl\": \"<string>\",\n\t\t\"primaryColorHex\": \"<string>\"\n\t},\n\t\"resultAvailableInFrontChannel\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"configuration"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								},
								{
									"name": "Verifier configuration not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"redirectUris\": [\n\t\t\"<string>\"\n\t],\n\t\"walletProviders\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t}\n\t],\n\t\"domains\": [\n\t\t\"<string>\"\n\t],\n\t\"supportedMode\": \"all\",\n\t\"certificateCommonName\": \"{tenantDomain} Verifier\",\n\t\"certificateCountry\": \"NZ\",\n\t\"display\": {\n\t\t\"logoImage\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"altText\": \"<string>\"\n\t\t},\n\t\t\"headerText\": \"<string>\",\n\t\t\"bodyText\": \"<string>\",\n\t\t\"privacyPolicyUrl\": \"<string>\",\n\t\t\"primaryColorHex\": \"<string>\"\n\t},\n\t\"resultAvailableInFrontChannel\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"configuration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Retrieve verifier configuration",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/presentations/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"presentations",
										"configuration"
									]
								},
								"description": "Retrieves current verifier configuration for online presentation of mDocs.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_PRESENTATION_VERIFIER_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_CONFIGURATION_RETRIEVE_FAIL"
							},
							"response": [
								{
									"name": "Verifier configuration retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"configuration"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"walletProviders\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"authorizationEndpoint\": \"<string>\"\n\t\t}\n\t],\n\t\"domains\": [\n\t\t\"<string>\"\n\t],\n\t\"supportedMode\": \"all\",\n\t\"redirectUris\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"display\": {\n\t\t\"logoImage\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"altText\": \"<string>\"\n\t\t},\n\t\t\"headerText\": \"<string>\",\n\t\t\"bodyText\": \"<string>\",\n\t\t\"privacyPolicyUrl\": \"<string>\",\n\t\t\"primaryColorHex\": \"<string>\"\n\t},\n\t\"resultAvailableInFrontChannel\": true,\n\t\"certificatePem\": \"<string>\"\n}"
								},
								{
									"name": "Verifier configuration not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"configuration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						},
						{
							"name": "Delete verifier configuration",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/presentations/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"presentations",
										"configuration"
									]
								},
								"description": "Removes verifier configuration for online presentation of mDocs.\n\n### **Analytic events**\n* PRESENTATION_VERIFIER_CONFIGURATION_DELETE_START\n* PRESENTATION_VERIFIER_CONFIGURATION_DELETE_SUCCESS\n* PRESENTATION_VERIFIER_CONFIGURATION_DELETE_FAIL"
							},
							"response": [
								{
									"name": "Verifier configuration deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"configuration"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Verifier configuration not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/presentations/configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"presentations",
												"configuration"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
								}
							]
						}
					]
				},
				{
					"name": "OIDC Bridge verification",
					"item": [
						{
							"name": "OIDC Verifier Auth",
							"item": [
								{
									"name": "Well Known OpenId Configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/.well-known/openid-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id",
												".well-known",
												"openid-configuration"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Verifier ID"
												}
											]
										},
										"description": "The standard OpenID Connect Well Known configuration metadata endpoint.\n\nThis endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n"
									},
									"response": [
										{
											"name": "Returns OpenID configuration",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/.well-known/openid-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														".well-known",
														"openid-configuration"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"authorization_endpoint\": \"<uri>\",\n\t\"claims_parameter_supported\": \"<boolean>\",\n\t\"claims_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"code_challenge_methods_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"end_session_endpoint\": \"<uri>\",\n\t\"grant_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"id_token_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"issuer\": \"<uri>\",\n\t\"jwks_uri\": \"<uri>\",\n\t\"registration_endpoint\": \"<uri>\",\n\t\"request_object_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"request_parameter_supported\": \"<boolean>\",\n\t\"request_uri_parameter_supported\": \"<boolean>\",\n\t\"require_request_uri_registration\": \"<boolean>\",\n\t\"response_modes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"response_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"scopes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"subject_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"token_endpoint_auth_methods_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"token_endpoint_auth_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"token_endpoint\": \"<uri>\",\n\t\"userinfo_endpoint\": \"<uri>\",\n\t\"userinfo_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"claim_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve Token",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "example",
													"value": "G1s1EPMml4L0zFd63R1YP",
													"disabled": true
												},
												{
													"key": "client_secret",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "grant_type",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "code",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "redirect_uri",
													"value": "<uri>",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id",
												"token"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Verifier ID"
												}
											]
										},
										"description": "> OIDC Token endpoint\n\nThe OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`\n\n### **Analytic events**\n* OIDC_VERIFIER_AUTH_START\n* OIDC_VERIFIER_AUTH_SUCCESS\n* OIDC_VERIFIER_AUTH_FAIL"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "example",
															"value": "G1s1EPMml4L0zFd63R1YP",
															"disabled": true
														},
														{
															"key": "client_secret",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "grant_type",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "code",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "redirect_uri",
															"value": "<uri>",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"token"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"access_token\": \"<string>\",\n\t\"token_type\": \"bearer\",\n\t\"refresh_token\": \"<string>\",\n\t\"expires_in\": \"<integer>\",\n\t\"id_token\": \"<string>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "example",
															"value": "G1s1EPMml4L0zFd63R1YP",
															"disabled": true
														},
														{
															"key": "client_secret",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "grant_type",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "code",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "redirect_uri",
															"value": "<uri>",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"token"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "OIDC Verifiers",
							"item": [
								{
									"name": "Create an OIDC Verifier",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers"
											]
										},
										"description": "Creates a new OIDC Credential Verifier on the tenant.\n\nOnce created, this OIDC Verifier is publicly available on its `/.well-known/openid-configuration` path. The Authorization header is not required as it is intended for OIDC Client applications to resolve.\n\n### **Analytic events**\n* OIDC_VERIFIER_CREATE_START\n* OIDC_VERIFIER_CREATE_SUCCESS\n* OIDC_VERIFIER_CREATE_FAIL\n"
									},
									"response": [
										{
											"name": "OIDC Verifier created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"id\": \"<uuid>\",\n\t\"includePresentation\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all OIDC Verifiers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned verifier entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of verifier entries",
													"disabled": true
												}
											]
										},
										"description": "Returns a list of all OIDC Verifiers on the tenant.\n\n### **Analytic events**\n* OIDC_VERIFIER_RETRIEVE_LIST_START\n* OIDC_VERIFIER_RETRIEVE_LIST_SUCCESS\n* OIDC_VERIFIER_RETRIEVE_LIST_FAIL\n"
									},
									"response": [
										{
											"name": "OIDC Verifiers retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned verifier entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of verifier entries",
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": {\n\t\t\"verifierDid\": \"<string>\",\n\t\t\"presentationTemplateId\": \"<uuid>\",\n\t\t\"claimMappings\": [\n\t\t\t{\n\t\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\t\"oidcClaim\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\t\"oidcClaim\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<uuid>\",\n\t\t\"includePresentation\": \"<boolean>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned verifier entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of verifier entries",
															"disabled": true
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve an OIDC Verifier",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Verifier ID"
												}
											]
										},
										"description": "Retrieves an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_RETRIEVE_START\n* OIDC_VERIFIER_RETRIEVE_SUCCESS\n* OIDC_VERIFIER_RETRIEVE_FAIL      "
									},
									"response": [
										{
											"name": "OIDC Verifier retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"id\": \"<uuid>\",\n\t\"includePresentation\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "OIDC Verifier not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update an OIDC Verifier",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Verifier ID"
												}
											]
										},
										"description": "Updates an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_UPDATE_START\n* OIDC_VERIFIER_UPDATE_SUCCESS\n* OIDC_VERIFIER_UPDATE_FAIL      \n"
									},
									"response": [
										{
											"name": "OIDC Verifier updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"id\": \"<uuid>\",\n\t\"includePresentation\": \"<boolean>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "OIDC Verifier not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete an OIDC Verifier",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Verifier ID"
												}
											]
										},
										"description": "Deletes an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_DELETE_START\n* OIDC_VERIFIER_DELETE_SUCCESS\n* OIDC_VERIFIER_DELETE_FAIL      \n"
									},
									"response": [
										{
											"name": "OIDC Verifier deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "OIDC Verifier not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						},
						{
							"name": "OIDC Verifier Client",
							"item": [
								{
									"name": "Configure an OIDC Client",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id",
												"clients"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Verifier ID"
												}
											]
										},
										"description": "Configures an OIDC Verifier Client on your tenant.\n\nIn order to verify a credential using an OpenID Connect Authorization Code Flow, you need to set up an OIDC Client application. This is the client that will engage with your configured OIDC Verifier to inititate the verification workflow.\nThere is a list of OIDC Client apps, also known as Relying Party Libraries, on the [OpenID website](https://openid.net/developers/certified/). Pick one which you feel comfortable with.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_CREATE_START\n* OIDC_VERIFIER_CLIENT_CREATE_SUCCESS\n* OIDC_VERIFIER_CLIENT_CREATE_FAIL      "
									},
									"response": [
										{
											"name": "OIDC Client configured",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"secret\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve all OIDC Clients",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id",
												"clients"
											],
											"query": [
												{
													"key": "limit",
													"value": "<number>",
													"description": "Range size of returned client entries, default 100",
													"disabled": true
												},
												{
													"key": "cursor",
													"value": "<string>",
													"description": "Starting point for the range of client entries",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) Verifier ID"
												}
											]
										},
										"description": "Returns a list of all OIDC Verifier Clients on the Tenant.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_START\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_SUCCESS\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_FAIL      \n"
									},
									"response": [
										{
											"name": "OIDC Clients retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned client entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of client entries",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": {\n\t\t\"name\": \"<string>\",\n\t\t\"redirectUris\": [\n\t\t\t\"<uri>\",\n\t\t\t\"<uri>\"\n\t\t],\n\t\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\t\"id\": \"<uuid>\",\n\t\t\"secret\": \"<string>\",\n\t\t\"responseTypes\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"grantTypes\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\t\"applicationType\": \"<string>\",\n\t\t\"logoUri\": \"<uri>\"\n\t}\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients"
													],
													"query": [
														{
															"key": "limit",
															"value": "<number>",
															"description": "Range size of returned client entries, default 100",
															"disabled": true
														},
														{
															"key": "cursor",
															"value": "<string>",
															"description": "Starting point for the range of client entries",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Retrieve an OIDC Client",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) OIDC Verifier ID"
												},
												{
													"key": "clientId",
													"value": "<uuid>",
													"description": "(Required) OIDC Verifier Client ID"
												}
											]
										},
										"description": "Retrieves an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_RETRIEVE_START\n* OIDC_VERIFIER_CLIENT_RETRIEVE_SUCCESS\n* OIDC_VERIFIER_CLIENT_RETRIEVE_FAIL      "
									},
									"response": [
										{
											"name": "OIDC Verifier Client retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"secret\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "OIDC Verifier Client not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Update an OIDC Client",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) OIDC Verifier ID"
												},
												{
													"key": "clientId",
													"value": "<uuid>",
													"description": "(Required) OIDC Verifier Client ID"
												}
											]
										},
										"description": "Updates an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_UPDATE_START\n* OIDC_VERIFIER_CLIENT_UPDATE_SUCCESS\n* OIDC_VERIFIER_CLIENT_UPDATE_FAIL      \n"
									},
									"response": [
										{
											"name": "OIDC Verifier Client updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"secret\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "OIDC Verifier Client not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								},
								{
									"name": "Delete an OIDC Client",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"oidc",
												"v1",
												"verifiers",
												":id",
												"clients",
												":clientId"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) OIDC Verifier ID"
												},
												{
													"key": "clientId",
													"value": "<uuid>",
													"description": "(Required) OIDC Verifier Client ID"
												}
											]
										},
										"description": "Deletes an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_DELETE_START\n* OIDC_VERIFIER_CLIENT_DELETE_SUCCESS\n* OIDC_VERIFIER_CLIENT_DELETE_FAIL\n"
									},
									"response": [
										{
											"name": "OIDC Verifier Client deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										},
										{
											"name": "OIDC Verifier Client not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"oidc",
														"v1",
														"verifiers",
														":id",
														"clients",
														":clientId"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "clientId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Refresh the OAuth token if necessary",
					"var tokenDate = new Date(2010, 1, 1);",
					"var tokenTimestamp = pm.environment.get(\"oauthTimestamp\");",
					"if (tokenTimestamp) {",
					"    tokenDate = Date.parse(tokenTimestamp);",
					"}",
					"var expiresInTime = pm.environment.get(\"expiresInTime\");",
					"if (!expiresInTime) {",
					"    expiresInTime = 300000; // Set default expiration time to 5 minutes",
					"}",
					"    pm.sendRequest({",
					"        url: pm.environment.get(\"auth0Base\"),",
					"        method: 'POST',",
					"        header: {",
					"            'Accept': 'application/json',",
					"            'Content-Type': 'application/json',",
					"        },",
					"        body: JSON.stringify({",
					"            client_id: pm.environment.get(\"tenantClientId\"),",
					"            client_secret: pm.environment.get(\"tenantClientSecret\"),",
					"            audience: pm.environment.get(\"tenantAudience\"),",
					"            grant_type: \"client_credentials\"",
					"        })",
					"    }, function (err, res) {",
					"        pm.environment.set(\"bearerToken\", res.json().access_token);",
					"        pm.environment.set(\"oauthTimestamp\", new Date());",
					"        // Set the ExpiresInTime variable to the time given in the response if it exists",
					"        if (res.json().expires_in) {",
					"            expiresInTime = res.json().expires_in * 1000;",
					"        }",
					"        pm.environment.set(\"expiresInTime\", expiresInTime);",
					"    });"
				]
			}
		}
	],
	"variable": [
		{
			"key": "tenantName",
			"value": "example"
		},
		{
			"key": "region",
			"value": "au01"
		},
		{
			"key": "baseUrl",
			"value": "https://{{tenantName}}.vii.{{region}}.mattr.global"
		}
	]
}
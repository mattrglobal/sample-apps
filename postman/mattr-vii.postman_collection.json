{
  "info": {
    "_postman_id": "ee447a55-1d15-463d-863a-28d16030b904",
    "name": "MATTR VII API",
    "description": "# Introduction\nThe MATTR VII API defines a set of capabilities that can be used to manage and interact with a MATTR VII tenant. This includes managing a Verifiable Credential across its lifecycle (issue-hold-verify) as well as various tenant administration and management tasks such as setting up a custom domain, creating DIDs and configuring issuance and verification workflows.\nRefer to our [API Changelog](https://learn.mattr.global/docs/vii-platform/api-change-log) to see changes from previous versions.\n\n# Getting Started with our APIs\nAs a MATTR VII user, you are provided with the following details, required for accessing and engaging with your MATTR VII tenant:\n\n``` json\n{\n\"audience\": \"YOUR_AUDIENCE_URL\",\n\"url\": \"YOUR_AUTH_URL\",\n\"tenant_subdomain\": \"YOUR_TENANT_SUBDOMAIN\",\n\"client_id\": \"YOUR_CLIENT_ID\",\n\"client_secret\": \"YOUR_CLIENT_SECRET\"\n}\n```\n\n> If you have not received your tenant details or have questions, please [contact us](https://mattr.global/contact/) before proceeding.\n\nUse the `tenant_subdomain` value provided with your tenant details to construct a URL of the following structure:\n\n``` http\nhttps://{YOUR_TENANT_SUBDOMAIN}.vii.au01.mattr.global\n```\n\nThis is the base URL you should use for all requests to your tenant, suffixed by the endpoint route detailed for the specific API you are calling.\n\n> MATTR trial tenants are hosted on servers in Australia by default. If you are a customer and requested your tenant to be hosted in a different region, the `au01` element in your URL should be replaced with a different value to correspond with your requested region. Please [contact us](https://mattr.global/contact/) if you are unsure what region to use.\n\n# Pagination\nMost list operations in the API enable cursor pagination using the `cursor` and `limit` query parameters:\n\n**Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n```\nGET https://{tenant-url}/core/v2/credentials\n?limit=100\n&cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n```\n\n* `limit`: determines how many entries are returned in that request, with a maximum value of 1000.\n* `cursor`: sets the location in the retrieved list to get the next batch of entries from. This is based on the returned `nextCursor`, found at the beginning of each returned range and identifies the last object in the list.\n\nRequesting an entry after the last list value will return an empty `data` object:\n\n``` json\n{\n\"data\": []\n}\n```\n\nNot providing a query parameter defaults the response to return the first range of entries with a `limit` of 100.\n\n# Authorization\nAccess to the API is granted by our authorization provider. Use the `client_id` and `client_secret` provided with your tenant details to [make a request](#operation/authToken) to receive a bearer token from the auth provider. This token must then be used as an `authorization` header for all requests to protected endpoints (this is required for the majority of operations).\n\n<SecurityDefinitions />\n\n\nContact Support:\n Email: support@mattr.global",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "28262321"
  },
  "item": [
    {
      "name": "General",
      "item": [
        {
          "name": "Analytics",
          "item": [
            {
              "name": "Retrieve events",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/analytics/events",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "analytics", "events"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    },
                    {
                      "key": "ids",
                      "value": "do dolor,eiusmod amet aliquip tempor proident",
                      "description": "Query by event IDs. These can be retrieved from event details.",
                      "disabled": true
                    },
                    {
                      "key": "ids",
                      "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                      "description": "Query by event IDs. These can be retrieved from event details.",
                      "disabled": true
                    },
                    {
                      "key": "requestIds",
                      "value": "do dolor,eiusmod amet aliquip tempor proident",
                      "description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
                      "disabled": true
                    },
                    {
                      "key": "requestIds",
                      "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                      "description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
                      "disabled": true
                    },
                    {
                      "key": "categories",
                      "value": "sit sint,sint anim consectetur",
                      "description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                      "disabled": true
                    },
                    {
                      "key": "categories",
                      "value": "consectetur adipisicing elit aliquip,irure proident esse",
                      "description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                      "disabled": true
                    },
                    {
                      "key": "types",
                      "value": "fugiat exercitation amet n,sed ",
                      "description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                      "disabled": true
                    },
                    {
                      "key": "types",
                      "value": "minim cupidatat occaecat consequat,et occaecat velit",
                      "description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                      "disabled": true
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Query by event start date and time (inclusive), in ISO-8601 format.",
                      "disabled": true
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "Query by event end date and time (inclusive), in ISO-8601 format.",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of matching events from the tenant's event database. \n\nThe `categories` and `types` parameters filter based on an **OR** logic, whilst all other parameters use an \"AND\" logic. For example `(categories OR types) AND requestIds AND dateFrom`.\n\nRefer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list of events categories and types.\n"
              },
              "response": [
                {
                  "name": "A list of events",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        },
                        {
                          "key": "ids",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by event IDs. These can be retrieved from event details.",
                          "disabled": true
                        },
                        {
                          "key": "requestIds",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
                          "disabled": true
                        },
                        {
                          "key": "categories",
                          "value": "consectetur adipisicing elit aliquip,irure proident esse",
                          "description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "types",
                          "value": "minim cupidatat occaecat consequat,et occaecat velit",
                          "description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Query by event start date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "Query by event end date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"timestamp\": \"<string>\",\n\t\t\t\"category\": \"<string>\",\n\t\t\t\"metadata\": {},\n\t\t\t\"data\": {},\n\t\t\t\"requestId\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"timestamp\": \"<string>\",\n\t\t\t\"category\": \"<string>\",\n\t\t\t\"metadata\": {},\n\t\t\t\"data\": {},\n\t\t\t\"requestId\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        },
                        {
                          "key": "ids",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by event IDs. These can be retrieved from event details.",
                          "disabled": true
                        },
                        {
                          "key": "requestIds",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
                          "disabled": true
                        },
                        {
                          "key": "categories",
                          "value": "consectetur adipisicing elit aliquip,irure proident esse",
                          "description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "types",
                          "value": "minim cupidatat occaecat consequat,et occaecat velit",
                          "description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Query by event start date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "Query by event end date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Unauthorized. The client is not authorized to access this resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        },
                        {
                          "key": "ids",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by event IDs. These can be retrieved from event details.",
                          "disabled": true
                        },
                        {
                          "key": "requestIds",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
                          "disabled": true
                        },
                        {
                          "key": "categories",
                          "value": "consectetur adipisicing elit aliquip,irure proident esse",
                          "description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "types",
                          "value": "minim cupidatat occaecat consequat,et occaecat velit",
                          "description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Query by event start date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "Query by event end date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden. The authorization server refuses to grant the client access to the resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        },
                        {
                          "key": "ids",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by event IDs. These can be retrieved from event details.",
                          "disabled": true
                        },
                        {
                          "key": "requestIds",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
                          "disabled": true
                        },
                        {
                          "key": "categories",
                          "value": "consectetur adipisicing elit aliquip,irure proident esse",
                          "description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "types",
                          "value": "minim cupidatat occaecat consequat,et occaecat velit",
                          "description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Query by event start date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "Query by event end date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        },
                        {
                          "key": "ids",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by event IDs. These can be retrieved from event details.",
                          "disabled": true
                        },
                        {
                          "key": "requestIds",
                          "value": "fugiat cupidatat,reprehenderit amet enim laborum",
                          "description": "Query by request IDs. These can be retrieved from event details. The response will include all the individual events that are part of the queried request.",
                          "disabled": true
                        },
                        {
                          "key": "categories",
                          "value": "consectetur adipisicing elit aliquip,irure proident esse",
                          "description": "Query by event categories. Uses an **OR** operation with `types`. Every **category** includes several event **types**. Each API endpoint details the event types it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "types",
                          "value": "minim cupidatat occaecat consequat,et occaecat velit",
                          "description": "Query by event types. Uses an **OR** operation with `categories`. Every **category** includes several event **types**. Each API endpoint details the events it generates under the **Analytic events** heading. Refer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list.",
                          "disabled": true
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>",
                          "description": "Query by event start date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>",
                          "description": "Query by event end date and time (inclusive), in ISO-8601 format.",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Messaging",
          "item": [
            {
              "name": "Sign a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"didUrl\": \"<string>\",\n\t\"payload\": {}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "sign"]
                },
                "description": "Accepts a message payload and signs it with a JWS (JSON Web Signature) using the a specific key from the DID (Decentralized Identifier) provided in the request.\n\n### **Analytic events**\n* MESSAGING_SIGN_START\n* MESSAGING_SIGN_SUCCESS\n* MESSAGING_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "Message signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"didUrl\": \"<string>\",\n\t\"payload\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "sign"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                },
                {
                  "name": "Error signing message",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"didUrl\": \"<string>\",\n\t\"payload\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "sign"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Verify a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"jws\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "verify"]
                },
                "description": "Verifies the siganture of a provided JWS (JSON Web Signature), validating that the payload has not been tampered with and verifying that the kid in the JWS header is the same as the `iss` value in the Request Object.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n### **Analytic events**\n* MESSAGING_VERIFY_START\n* MESSAGING_VERIFY_SUCCESS\n* MESSAGING_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification successful",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"jws\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "verify"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"didUrl\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"verified\": \"<boolean>\",\n\t\"payload\": \"<string>\"\n}"
                },
                {
                  "name": "Invalid JWS",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"jws\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "verify"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Encrypt a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"senderDidUrl\": \"<string>\",\n\t\"recipientDidUrls\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"payload\": {}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/encrypt",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "encrypt"]
                },
                "description": "Encrypts the provided payload using into a JWM (JSON Web Message) format.\n\n### **Analytic events**\n* MESSAGING_ENCRYPT_START\n* MESSAGING_ENCRYPT_SUCCESS\n* MESSAGING_ENCRYPT_FAIL\n"
              },
              "response": [
                {
                  "name": "Message encrypted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"senderDidUrl\": \"<string>\",\n\t\"recipientDidUrls\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"payload\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/encrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "encrypt"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"jwe\": {\n\t\t\"protected\": \"<string>\",\n\t\t\"recipients\": [\n\t\t\t{\n\t\t\t\t\"encryption_key\": \"<string>\",\n\t\t\t\t\"header\": {\n\t\t\t\t\t\"alg\": \"<string>\",\n\t\t\t\t\t\"kid\": \"<string>\",\n\t\t\t\t\t\"epk\": {\n\t\t\t\t\t\t\"kty\": \"<string>\",\n\t\t\t\t\t\t\"crv\": \"<string>\",\n\t\t\t\t\t\t\"x\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t\"skid\": \"<string>\"\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t\"ciphertext\": \"<string>\",\n\t\t\"iv\": \"<string>\",\n\t\t\"tag\": \"<string>\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"senderDidUrl\": \"<string>\",\n\t\"recipientDidUrls\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"payload\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/encrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "encrypt"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Decrypt a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"jwe\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/decrypt",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "decrypt"]
                },
                "description": "Decrypts a provided message where the tenant manages the keys for the defined `recipientDidUrl`.\n\n### **Analytic events**\n* MESSAGING_DECRYPT_START\n* MESSAGING_DECRYPT_SUCCESS\n* MESSAGING_DECRYPT_FAIL"
              },
              "response": [
                {
                  "name": "Message Decrypted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"jwe\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/decrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "decrypt"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"payload\": \"<string>\",\n\t\"senderDidUrl\": \"<string>\",\n\t\"senderPublicJwk\": {},\n\t\"recipientDidUrl\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"jwe\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/decrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "decrypt"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Send a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"to\": \"<string>\",\n\t\"message\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/send",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "send"]
                },
                "description": "Sends an encrypted JWM (JSON Web Messaging) format message to a service endpoint defined in a public DID document.\n\n### **Analytic events**\n* MESSAGING_SEND_START\n* MESSAGING_SEND_SUCCESS\n* MESSAGING_SEND_FAIL"
              },
              "response": [
                {
                  "name": "Message sent",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"to\": \"<string>\",\n\t\"message\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/send",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "send"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Error sending message",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"to\": \"<string>\",\n\t\"message\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/send",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "send"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Inboxes",
          "item": [
            {
              "name": "Create an inbox",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes"]
                },
                "description": "Creates an inbox that can register DIDs and then hold messages sent to those DIDs service points.\n\n### **Analytic events**\n* MESSAGING_INBOX_CREATE_START\n* MESSAGING_INBOX_CREATE_SUCCESS\n* MESSAGING_INBOX_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Inbox created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "List inboxes",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of all inboxes on the tenant.\n\n### **Analytic events**\n* MESSAGING_INBOX_RETRIEVE_LIST_START\n* MESSAGING_INBOX_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of inboxes",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve an inbox",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Inbox ID"
                    }
                  ]
                },
                "description": "Retrieves an inbox based on its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_RETRIEVE_START\n* MESSAGING_INBOX_RETRIEVE_SUCCESS\n* MESSAGING_INBOX_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Inbox returned",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update an inbox",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Inbox ID"
                    }
                  ]
                },
                "description": "Update the inbox configurations"
              },
              "response": [
                {
                  "name": "Inbox updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete an inbox",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Inbox ID"
                    }
                  ]
                },
                "description": "Deletes an inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_DELETE_START\n* MESSAGING_INBOX_DELETE_SUCCESS\n* MESSAGING_INBOX_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Inbox deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Register DID with an inbox",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    }
                  ]
                },
                "description": "Register the provided DID to the requested inbox.\n\n> DID registration with inboxes is currently limited to `did:key`'\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_REGISTER_START\n* MESSAGING_INBOX_DID_REGISTER_SUCCESS\n* MESSAGING_INBOX_DID_REGISTER_FAIL"
              },
              "response": [
                {
                  "name": "DID registered with inbox",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"did\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"did\": \"<string>\",\n\t\"jwt\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve inbox DIDs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    }
                  ]
                },
                "description": "Retrieves a list of all the DIDs registered with the requested inbox.\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_START\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of inbox DIDs",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Unregister DID with an inbox",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "dids", ":did"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "did",
                      "value": "<string>",
                      "description": "(Required) DID"
                    }
                  ]
                },
                "description": "Unregisters a DID from the requested inbox.\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_UNREGISTER_START\n* MESSAGING_INBOX_DID_UNREGISTER_SUCCESS\n* MESSAGING_INBOX_DID_UNREGISTER_FAIL"
              },
              "response": [
                {
                  "name": "DID unregistered from inbox",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids", ":did"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "did"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids", ":did"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "did"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "dids", ":did"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "did"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all messages",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "messages"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    }
                  ]
                },
                "description": "Retrieving all the messages from an inbox\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_START\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of inbox messages",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"createdAt\": \"<date>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"inboxId\": \"<string>\",\n\t\t\t\"payload\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"createdAt\": \"<date>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"inboxId\": \"<string>\",\n\t\t\t\"payload\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a message",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "messageid",
                      "value": "<string>",
                      "description": "(Required) Requested message ID"
                    }
                  ]
                },
                "description": "Retrieves a message from the requested inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_START\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_SUCCESS\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "An inbox message",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "messageid"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"name\": \"<string>\",\n\t\"createdAt\": \"<date>\",\n\t\"id\": \"<string>\",\n\t\"inboxId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "messageid"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "messageid"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete a message",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "messageid",
                      "value": "<string>",
                      "description": "(Required) Requested message ID"
                    }
                  ]
                },
                "description": "Deletes a message from the requested inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_DELETE_START\n* MESSAGING_INBOX_MESSAGE_DELETE_SUCCESS\n* MESSAGING_INBOX_MESSAGE_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Message deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "messageid"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "messageid"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id", "messages", ":messageid"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "messageid"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Tenant configuration",
      "item": [
        {
          "name": "Security",
          "item": [
            {
              "name": "Create API Auth Token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"client_id\": \"<string>\",\n\t\"client_secret\": \"<string>\",\n\t\"audience\": \"<string>\",\n\t\"grant_type\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/oauth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["oauth", "token"]
                },
                "description": "Returns an API access token. This token must then be used as an authorization header for all requests to protected endpoints (this is required for the majority of operations).\n\nThis request must be made to an authentication server based on your tenant's region:\n- **Sydney, Australia**: `auth.au01.mattr.global`\n- **Montreal, Canada**: `auth.ca01.mattr.global`\n- **Frankfurt, Germany, Europe**: `auth.eu01.mattr.global`\n- **Oregon, United States**: `auth.us01.mattr.global`\n\nYour region details as well as required `client_id` and `client_secret` are provided as part of onboarding, or retrieved when you create a tenant on the Self Service Portal. If you do not have your tenant details, or have any other questions, please [contact us](https://mattr.global/contact/) before proceeding."
              },
              "response": [
                {
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"client_id\": \"<string>\",\n\t\"client_secret\": \"<string>\",\n\t\"audience\": \"<string>\",\n\t\"grant_type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["oauth", "token"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"access_token\": \"<string>\",\n\t\"expires_in\": \"<number>\",\n\t\"token_type\": \"<string>\"\n}"
                },
                {
                  "name": "Unauthorized",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"client_id\": \"<string>\",\n\t\"client_secret\": \"<string>\",\n\t\"audience\": \"<string>\",\n\t\"grant_type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["oauth", "token"]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"error\": \"<string>\",\n\t\"error_description\": \"<string>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Custom Domain",
          "item": [
            {
              "name": "Configure custom domain",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"]
                },
                "description": "Creates a custom domain configuration on your tenant. You can configure a custom domain for a specific MATTR VII tenant to represent your brand and instil trust with your end-users. Any MATTR VII tenant can only have one custom domain. Refer to our [tutorial](https://learn.mattr.global/tutorials/tenant-management/custom-domain/overview) for more information.\n\n> Custom domains are only available as part of our paid plans, and trial accounts do not include ongoing access to custom domains. The APIs are available for you to trial the feature, but they may be deactivated unless you switch to a paid plan.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_CREATE_START\n* CONFIG_CUSTOM_DOMAIN_CREATE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Custom domain created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"verificationToken\": \"<string>\",\n\t\"isVerified\": \"<boolean>\",\n\t\"verifiedAt\": \"<string,>\"\n}"
                },
                {
                  "name": "Bad request, Invalid request body",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve custom domain",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"]
                },
                "description": "Returns your tenant's custom domain configuration and its verification status.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_START\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Custom domain returned",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"verificationToken\": \"<string>\",\n\t\"isVerified\": \"<boolean>\",\n\t\"verifiedAt\": \"<string,>\"\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete custom domain",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"]
                },
                "description": "Deletes the custom domain configuration on your tenant.\n\n> Deleting your custom domain configuration breaks the linkage with any credentials issued under the custom domain. These credentials will no longer be valid.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_DELETE_START\n* CONFIG_CUSTOM_DOMAIN_DELETE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Custom domain deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update custom domain",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"id\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"]
                },
                "description": "Updates the custom domain configuration.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_UPDATE_START\n* CONFIG_CUSTOM_DOMAIN_UPDATE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Custom Domain updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"id\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"verificationToken\": \"<string>\",\n\t\"isVerified\": \"<boolean>\",\n\t\"verifiedAt\": \"<string,>\"\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"logoUrl\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"id\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Verify custom domain",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain", "verify"]
                },
                "description": "Verifies that you have control of the configured custom domain by examining its TXT record.\n\n> Your custom domain will not be active until you verify it. Refer to [Verify domain ownership](https://learn.mattr.global/tutorials/tenant-management/custom-domain/verify-domain-ownership) for more information.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_VERIFY_START\n* CONFIG_CUSTOM_DOMAIN_VERIFY_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Custom domain verified",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain", "verify"]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain", "verify"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain", "verify"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "DIDs",
          "item": [
            {
              "name": "Create a DID",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"method\": \"web\",\n\t\"options\": {\n\t\t\"keyType\": \"<string>\",\n\t\t\"url\": \"<string>\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids"]
                },
                "description": "Takes a supported [DID method](https://learn.mattr.global/docs/vii-platform/dids/structure) and returns a new DID with its generated keys and required information. This endpoint also registers the DID Document when applicable.\n\nMATTR VII currently supports creating DIDs of the following methods:\n- **did:key**: The most basic type of DID. The public key forms the DID and has no further data associated with it.\n- **did:web**: This type of DID requires hosting the DID document on a publicly accessible domain in order to make the document and its contents available.\n\n### **Analytic events**\n* DID_CREATE_START\n* DID_CREATE_SUCCESS\n* DID_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "DID document created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"method\": \"web\",\n\t\"options\": {\n\t\t\"keyType\": \"<string>\",\n\t\t\"url\": \"<string>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"registrationStatus\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"metadata\": {\n\t\t\"keys\": [\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"registered\": \"<number>\",\n\t\t\"initialDidDocument\": {}\n\t}\n}"
                },
                {
                  "name": "Bad request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"method\": \"web\",\n\t\"options\": {\n\t\t\"keyType\": \"<string>\",\n\t\t\"url\": \"<string>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a list of DIDs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n\n### **Analytic events**\n* DID_RETRIEVE_LIST_START\n* DID_RETRIEVE_LIST_SUCCESS\n* DID_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of DIDs",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"did\": \"<string>\",\n\t\t\t\"localMetadata\": {\n\t\t\t\t\"keys\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"registered\": \"<number>\",\n\t\t\t\t\"initialDidDocument\": {}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"did\": \"<string>\",\n\t\t\t\"localMetadata\": {\n\t\t\t\t\"keys\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"registered\": \"<number>\",\n\t\t\t\t\"initialDidDocument\": {}\n\t\t\t}\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Resolve a DID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) DID"
                    }
                  ]
                },
                "description": "Retrieves a DID and its metadata from the tenant by its URI. This may involve a network call depending on the method involved:\n- For did:key the public key is encapsulated in the DID URI itself.\n- For did:web it must be resolved by accessing the `/.well-known/did.json` path on its domain.\n\n### **Analytic events**\n* DID_RETRIEVE_START\n* DID_RETRIEVE_SUCCESS\n* DID_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "A DID Document and its meta-data",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"did\": {},\n\t\"registrationStatus\": \"<string>\",\n\t\"localMetadata\": {\n\t\t\"keys\": [\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"kmsKeyId\": \"<string>\",\n\t\t\t\t\"didDocumentKeyId\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"registered\": \"<number>\",\n\t\t\"initialDidDocument\": {}\n\t}\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete a DID",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) DID"
                    }
                  ]
                },
                "description": "Deletes a DID and all associated metadata by providing its URI. This includes all the removal of all associated private keys from the Key Management System (KMS).\n> For ledger-based DIDs the public DID Document will still be available. This means that for `did:web` you will need to manually remove the `did.json` from your hosted domain.\n\n### **Analytic events**\n* DID_DELETE_START\n* DID_DELETE_SUCCESS\n* DID_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "DID successfully deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Well known DID configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/.well-known/did-configuration",
                  "host": ["{{baseUrl}}"],
                  "path": [".well-known", "did-configuration"]
                },
                "description": "Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant. These are automatically created for **all** DIDS created on a tenant so that they can be used by any party aiming to establish and verify the domain-DID linkage by exposing cryptographic proofs. Thus, this endpoint is unprotected, public facing and can be deterministically found at the root of the tenant subdomain or alias by any party. Refer to [Well Known DID Configuration](https://identity.foundation/.well-known/resources/did-configuration) on the Decentralized Identity Foundation website for more information.\n"
              },
              "response": [
                {
                  "name": "List of DID Configuration entries",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/did-configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [".well-known", "did-configuration"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"entries\": [\n\t\t{\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t},\n\t\t\t\"proof\": {\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuer\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t},\n\t\t\t\"proof\": {\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t},\n\t\t\t\"issuer\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "IACA",
          "item": [
            {
              "name": "Create an IACA",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"commonName\": \"{tenantHost} IACA\",\n\t\"country\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas"]
                },
                "description": "Creates a new IACA that can be used to sign new Document Signer Certificates (DSCs).\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_CREATE_START\n* MOBILE_CREDENTIAL_IACA_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_IACA_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "IACA created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"commonName\": \"{tenantHost} IACA\",\n\t\"country\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} IACA\"\n\t},\n\t\"publicKeyJwk\": {},\n\t\"certificatePem\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"commonName\": \"{tenantHost} IACA\",\n\t\"country\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all IACAs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas"]
                },
                "description": "Retrieves all existing IACAs from the tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "IACAs Retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} IACA\"\n\t\t\t},\n\t\t\t\"publicKeyJwk\": {},\n\t\t\t\"certificatePem\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} IACA\"\n\t\t\t},\n\t\t\t\"publicKeyJwk\": {},\n\t\t\t\"certificatePem\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete an IACA",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas", ":iacaId"],
                  "variable": [
                    {
                      "key": "iacaId",
                      "value": "<uuid>",
                      "description": "(Required) IACA ID"
                    }
                  ]
                },
                "description": "Deletes an existing IACA by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_DELETE_START\n* MOBILE_CREDENTIAL_IACA_DELETE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_IACA_DELETE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "IACA deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas", ":iacaId"],
                      "variable": [
                        {
                          "key": "iacaId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas", ":iacaId"],
                      "variable": [
                        {
                          "key": "iacaId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "IACA not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas", ":iacaId"],
                      "variable": [
                        {
                          "key": "iacaId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "DSCs",
          "item": [
            {
              "name": "Create a DSC",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"active\": \"<boolean>\",\n\t\"commonName\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "documentsigners"]
                },
                "description": "Creates a new Document Signer Certificate (DSC) that can be used to sign new Mobile Credentials.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_CREATE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "DSC created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"active\": \"<boolean>\",\n\t\"commonName\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"active\": \"<boolean>\",\n\t\"publicKey\": {},\n\t\"certificatePem\": \"<string>\",\n\t\"certificateFingerprint\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} Document Signer\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"active\": \"<boolean>\",\n\t\"commonName\": \"<string>\",\n\t\"notAfter\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all DSCs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "documentsigners"]
                },
                "description": "Retrieves all existing DSCs from the tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "DSCs retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"active\": \"<boolean>\",\n\t\t\t\"publicKey\": {},\n\t\t\t\"certificatePem\": \"<string>\",\n\t\t\t\"certificateFingerprint\": \"<string>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} Document Signer\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"active\": \"<boolean>\",\n\t\t\t\"publicKey\": {},\n\t\t\t\"certificatePem\": \"<string>\",\n\t\t\t\"certificateFingerprint\": \"<string>\",\n\t\t\t\"certificateData\": {\n\t\t\t\t\"notAfter\": \"<date>\",\n\t\t\t\t\"notBefore\": \"<date>\",\n\t\t\t\t\"country\": \"<string>\",\n\t\t\t\t\"commonName\": \"{tenantHost} Document Signer\"\n\t\t\t}\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update a DSC",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"active\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                  "variable": [
                    {
                      "key": "documentSignerId",
                      "value": "<uuid>",
                      "description": "(Required) DSC ID"
                    }
                  ]
                },
                "description": "Updates an existing DSC by providing its ID and `active` parameter.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_UPDATE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_UPDATE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "DSC updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"active\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                      "variable": [
                        {
                          "key": "documentSignerId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"active\": \"<boolean>\",\n\t\"publicKey\": {},\n\t\"certificatePem\": \"<string>\",\n\t\"certificateFingerprint\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} Document Signer\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"active\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                      "variable": [
                        {
                          "key": "documentSignerId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "DSC not Found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"active\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                      "variable": [
                        {
                          "key": "documentSignerId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve a DSC",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                  "variable": [
                    {
                      "key": "documentSignerId",
                      "value": "<uuid>",
                      "description": "(Required) DSC ID"
                    }
                  ]
                },
                "description": "Retrieves an existing DSC by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "DSC retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                      "variable": [
                        {
                          "key": "documentSignerId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"active\": \"<boolean>\",\n\t\"publicKey\": {},\n\t\"certificatePem\": \"<string>\",\n\t\"certificateFingerprint\": \"<string>\",\n\t\"certificateData\": {\n\t\t\"notAfter\": \"<date>\",\n\t\t\"notBefore\": \"<date>\",\n\t\t\"country\": \"<string>\",\n\t\t\"commonName\": \"{tenantHost} Document Signer\"\n\t}\n}"
                },
                {
                  "name": "DSC not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                      "variable": [
                        {
                          "key": "documentSignerId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete a DSC",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                  "variable": [
                    {
                      "key": "documentSignerId",
                      "value": "<uuid>",
                      "description": "(Required) DSC ID"
                    }
                  ]
                },
                "description": "Deletes an existing DSC by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_DELETE_START\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_DOCUMENT_SIGNER_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "DSC deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                      "variable": [
                        {
                          "key": "documentSignerId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "DSC not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/documentsigners/:documentSignerId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "documentsigners", ":documentSignerId"],
                      "variable": [
                        {
                          "key": "documentSignerId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Webhooks",
          "item": [
            {
              "name": "Create Webhook",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"events\": [\n\t\t\"OpenIdCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks"]
                },
                "description": "Creates a new webhook for this tenant.\n\n### **Analytic events**\n* WEBHOOK_CREATE_START\n* WEBHOOK_CREATE_SUCCESS\n* WEBHOOK_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhook created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"events\": [\n\t\t\"OpenIdCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"events\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": false\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"events\": [\n\t\t\"OpenIdCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Webhooks",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned webhook entries, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of webhook entries",
                      "disabled": true
                    }
                  ]
                },
                "description": "Retrieves a list of webhooks configured on the tenant.\n\n### **Analytic events**\n* WEBHOOK_RETRIEVE_LIST_START\n* WEBHOOK_RETRIEVE_LIST_SUCCESS\n* WEBHOOK_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhooks retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned webhook entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of webhook entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"events\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"disabled\": false\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"events\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"disabled\": false\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned webhook entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of webhook entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Webhook",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) The requested Webhook ID."
                    }
                  ]
                },
                "description": "Retrieve a specific Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_RETRIEVE_START\n* WEBHOOK_RETRIEVE_SUCCESS\n* WEBHOOK_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhook retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"events\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": false\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update Webhook",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"events\": [\n\t\t\"OpenIdCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Webhook ID"
                    }
                  ]
                },
                "description": "Updates an existing Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_UPDATE_START\n* WEBHOOK_UPDATE_SUCCESS\n* WEBHOOK_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Webhook updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"events\": [\n\t\t\"OpenIdCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"events\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": false\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"events\": [\n\t\t\"OpenIdCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "The webhook is not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"events\": [\n\t\t\"OpenIdCredentialIssued\",\n\t\t\"OidcIssuerCredentialIssued\"\n\t],\n\t\"url\": \"<uri>\",\n\t\"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete Webhook",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Webhook ID"
                    }
                  ]
                },
                "description": "Deletes a Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_DELETE_START\n* WEBHOOK_DELETE_SUCCESS\n* WEBHOOK_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhook deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "The webhook is not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Webhook JWKs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/jwks",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", "jwks"]
                },
                "description": "Retrieves a list of Webhook JWKs (JSON Web Keys) from the tenant. These keys can be used to verify the HTTP signature and validate the integrity and authorship of generated Webhooks. This endpoint does not require authentication and is publicly available by design.\n"
              },
              "response": [
                {
                  "name": "Webhook JWKs retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/jwks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", "jwks"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"keys\": [\n\t\t{\n\t\t\t\"kty\": \"<string>\",\n\t\t\t\"crv\": \"<string>\",\n\t\t\t\"x\": \"<string>\",\n\t\t\t\"use\": \"<string>\",\n\t\t\t\"kid\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"kty\": \"<string>\",\n\t\t\t\"crv\": \"<string>\",\n\t\t\t\"x\": \"<string>\",\n\t\t\t\"use\": \"<string>\",\n\t\t\t\"kid\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Ecosystem operations",
      "item": [
        {
          "name": "Ecosystems",
          "item": [
            {
              "name": "Retrieve all ecosystems",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ]
                },
                "description": "Retrieves a list of ecosystems.\n### **Analytic events**\n* ECOSYSTEM_RETRIEVE_LIST_START\n* ECOSYSTEM_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystems retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Create ecosystem",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems"]
                },
                "description": "Creates an ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREATE_START\n* ECOSYSTEM_CREATE_SUCCESS\n* ECOSYSTEM_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve ecosystem",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Retrieves an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_RETRIEVE_START\n* ECOSYSTEM_RETRIEVE_SUCCESS\n* ECOSYSTEM_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Update ecosystem",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Updates an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_UPDATE_START\n* ECOSYSTEM_UPDATE_SUCCESS\n* ECOSYSTEM_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete ecosystem",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Deletes an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_DELETE_START\n* ECOSYSTEM_DELETE_SUCCESS\n* ECOSYSTEM_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Participants",
          "item": [
            {
              "name": "Retrieve participants",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Retrieves a list of participants from the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_START\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Participants retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"eu79\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"eu_f\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"elita__\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create participant",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Creates a participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_CREATE_START\n* ECOSYSTEM_PARTICIPANT_CREATE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Participant created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve participant",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    }
                  ]
                },
                "description": "Retrieves a participant from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_START\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Participant retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Update participant",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    }
                  ]
                },
                "description": "Updates a participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_UPDATE_START\n* ECOSYSTEM_PARTICIPANT_UPDATE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Participant updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"identifiers\": {\n\t\t\"ut_fa2\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t\"dolor_9e\": {\n\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\"compact\": \"<string>\",\n\t\t\t\"mobile\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t},\n\t\"isIssuer\": false,\n\t\"isVerifier\": false,\n\t\"isIssuerConstrained\": true,\n\t\"isVerifierConstrained\": true\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete participant",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    }
                  ]
                },
                "description": "Deletes a participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_DELETE_START\n* ECOSYSTEM_PARTICIPANT_DELETE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Participant deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "participants", ":participantId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Credential types",
          "item": [
            {
              "name": "Create credential type",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Creates a new credential type in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_CREATE_START\n* ECOSYSTEM_CREDENTIAL_CREATE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Credential type created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve credential types",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Retrieves a list of credential types from the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_START\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Credential types retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact-semantic\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve credential type",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    }
                  ]
                },
                "description": "Retrieves a credential type from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_START\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Credential type retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete credential type",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    }
                  ]
                },
                "description": "Deletes a credential type from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_DELETE_START\n* ECOSYSTEM_CREDENTIAL_DELETE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Credential type deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "credentials", ":credentialId"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Policy",
          "item": [
            {
              "name": "Retrieve ecosystem policy",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "If-None-Match",
                    "value": "<string>",
                    "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                    "disabled": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "deflate",
                    "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "policy"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Retrieves an ecosystem policy by its ID.\n### **Analytic events**\n* ECOSYSTEM_POLICY_RETRIEVE_START\n* ECOSYSTEM_POLICY_RETRIEVE_SUCCESS\n* ECOSYSTEM_POLICY_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem policy retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "policy"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "ETag",
                      "value": "<string>",
                      "description": {
                        "content": "An Entity Tag (ETag) is a unique identifier assigned to a specific version of a resource. It allows clients to check if a resource has been modified since it was last retrieved.",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"policyModifiedAt\": \"<dateTime>\",\n\t\"credentials\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"web-semantic\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"participants\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"laborum_d\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"Ut24\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"Lorem8e2\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"anim_40\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"elit_4e\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Modified. The resource has not been modified since the last request.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "policy"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Modified",
                  "code": 304,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policy",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "policy"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Issuer Policies",
          "item": [
            {
              "name": "Retrieve issuer policy",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "If-None-Match",
                    "value": "<string>",
                    "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                    "disabled": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "deflate",
                    "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "issuers"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Retrieves an ecosystem issuer policy by its ID."
              },
              "response": [
                {
                  "name": "Ecosystem issuer policy retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "issuers"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "ETag",
                      "value": "<string>",
                      "description": {
                        "content": "An Entity Tag (ETag) is a unique identifier assigned to a specific version of a resource. It allows clients to check if a resource has been modified since it was last retrieved.",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"policyModifiedAt\": \"<dateTime>\",\n\t\"credentials\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"web-semantic\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"participants\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"laborum_d\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"Ut24\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"Lorem8e2\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"anim_40\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"elit_4e\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Modified. The resource has not been modified since the last request.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "issuers"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Modified",
                  "code": 304,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/issuers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "issuers"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create issuer policy",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "issuer",
                    "credentials"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    }
                  ]
                },
                "description": "Creates an issuer policy for the requested participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_ISSUER_POLICY_CREATE_START\n* ECOSYSTEM_ISSUER_POLICY_CREATE_SUCCESS\n* ECOSYSTEM_ISSUER_POLICY_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Issuer policy created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete issuer policy",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "issuer",
                    "credentials",
                    ":credentialId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    }
                  ]
                },
                "description": "Deletes an issuer policy for the requested participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_ISSUER_POLICY_DELETE_START\n* ECOSYSTEM_ISSUER_POLICY_DELETE_SUCCESS\n* ECOSYSTEM_ISSUER_POLICY_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Issuer policy deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Verifier Policies",
          "item": [
            {
              "name": "Retrieve verifier policy",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "If-None-Match",
                    "value": "<string>",
                    "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                    "disabled": true
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "deflate",
                    "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                    "disabled": true
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "verifiers"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    }
                  ]
                },
                "description": "Retrieves an ecosystem verifier policy by its ID."
              },
              "response": [
                {
                  "name": "Ecosystem verifier policy retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "verifiers"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "ETag",
                      "value": "<string>",
                      "description": {
                        "content": "An Entity Tag (ETag) is a unique identifier assigned to a specific version of a resource. It allows clients to check if a resource has been modified since it was last retrieved.",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"policyModifiedAt\": \"<dateTime>\",\n\t\"credentials\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"compact\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"profile\": \"web-semantic\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"participants\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"laborum_d\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"Ut24\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"Lorem8e2\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"anim_40\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"ecosystemId\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"identifiers\": {\n\t\t\t\t\"elit_4e\": {\n\t\t\t\t\t\"web-semantic\": \"<string>\",\n\t\t\t\t\t\"compact-semantic\": \"<string>\",\n\t\t\t\t\t\"compact\": \"<string>\",\n\t\t\t\t\t\"mobile\": [\n\t\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\t\"<string>\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"isIssuer\": false,\n\t\t\t\"isVerifier\": false,\n\t\t\t\"isIssuerConstrained\": true,\n\t\t\t\"isVerifierConstrained\": true,\n\t\t\t\"issuerAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t],\n\t\t\t\"verifierAllowedCredentials\": [\n\t\t\t\t\"<uuid>\",\n\t\t\t\t\"<uuid>\"\n\t\t\t]\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Modified. The resource has not been modified since the last request.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "verifiers"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Modified",
                  "code": 304,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since.",
                        "disabled": true
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "deflate",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings.",
                        "disabled": true
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "verifiers"],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create verifier policy",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "verifier",
                    "credentials"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    }
                  ]
                },
                "description": "Creates a verifier policy for the requested participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_START\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_SUCCESS\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Verifier policy created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"ecosystemId\": \"<uuid>\",\n\t\"profile\": \"web-semantic\",\n\t\"type\": \"<string>\",\n\t\"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete verifier policy",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "verifier",
                    "credentials",
                    ":credentialId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    }
                  ]
                },
                "description": "Deletes a verifier policy for the requested participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_START\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_SUCCESS\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Verifier policy deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId"
                        },
                        {
                          "key": "participantId"
                        },
                        {
                          "key": "credentialId"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Direct Credential Issuance",
      "item": [
        {
          "name": "Compact Credentials Issuance",
          "item": [
            {
              "name": "Compact Credentials templates",
              "item": [
                {
                  "name": "Compact Credentials PDF templates",
                  "item": [
                    {
                      "name": "Create a PDF template",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/zip"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<string>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "pdf", "templates"]
                        },
                        "description": "Creates a Compact Credential PDF template based on a provided `.zip` file. Refer to our [PDF template design tutorial](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/pdf-design-guideline) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template created",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates"]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates"]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates"]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all PDF templates",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "pdf", "templates"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            }
                          ]
                        },
                        "description": "Retrieves a list of all Compact Credential PDF templates available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF templates retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Update a PDF template",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/zip"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<string>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            }
                          ]
                        },
                        "description": "Update an existing Compact Credential PDF template based on a provided `.zip` file. Refer to our [PDF template design tutorial](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/pdf-design-guideline) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template updated",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve a PDF template",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            }
                          ]
                        },
                        "description": "Retrieves an existing Compact Credential PDF template using its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Delete a PDF template",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            }
                          ]
                        },
                        "description": "Delete an existing PDF template by providing its ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template deleted",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Compact Credentials Apple Pass templates",
                  "item": [
                    {
                      "name": "Create an Apple Pass template",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates"]
                        },
                        "description": "Creates an Apple Pass template based on the provided `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/apple-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n> The Apple Pass template uses the official Apple Pass bundle structure.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template created",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates"]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates"]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all Apple Pass templates",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            }
                          ]
                        },
                        "description": "Retrieves a list of all Apple Pass template available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass templates retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update an Apple Pass template",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            }
                          ]
                        },
                        "description": "Updates an existing Apple Pass template by providing its ID and a `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/apple-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template updated",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve an Apple Pass template",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            }
                          ]
                        },
                        "description": "Retrieves an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete an Apple Pass template",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            }
                          ]
                        },
                        "description": "Deletes an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template deleted",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "apple", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Compact Credentials Google Pass templates",
                  "item": [
                    {
                      "name": "Create a Google Pass template",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates"]
                        },
                        "description": "Creates a Google Pass template based on the provided `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/google-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass template created",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates"]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates"]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all Google Pass templates",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            }
                          ]
                        },
                        "description": "Retrieves a list of all Google Pass templates available on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass templates retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update a Google Pass template",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            }
                          ]
                        },
                        "description": "Updates a existing Google Pass template by providing its ID and a `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/google-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass template updated",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve a Google Pass template",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            }
                          ]
                        },
                        "description": "Retrieves an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass templated retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete a Google Pass template",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            }
                          ]
                        },
                        "description": "Deletes an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass template deleted",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact", "digitalpass", "google", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Format a Compact Credential as a QR code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "image/png"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "qrcode"]
                },
                "description": "Returns a QR code representation of a Compact Credential from a provided encoded string representation of that credential.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_QRCODE_CREATE_START\n* CREDENTIAL_COMPACT_QRCODE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_QRCODE_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "QR code generated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "image/png"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "qrcode"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "image/png"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "qrcode"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Format a Compact Credential as a PDF",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/pdf"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "pdf"]
                },
                "description": "Returns a PDF representation of a provided Compact Credential based on an existing PDF template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_CREATE_START\n* CREDENTIAL_COMPACT_PDF_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "PDF created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "pdf"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/pdf"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "pdf"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "pdf"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Format a Compact Credential as an Apple Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.apple.pkpass"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "digitalpass", "apple"]
                },
                "description": "Returns an Apple Pass representation of a provided Compact Credential based on an existing Apple Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Apple Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.apple.pkpass"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "digitalpass", "apple"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.apple.pkpass"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "digitalpass", "apple"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Format a Compact Credential as a Google Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "digitalpass", "google"]
                },
                "description": "Returns a Google Pass representation of a provided Compact Credential based on an existing Google Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Google Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "digitalpass", "google"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"redirectTo\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digitalpass/google",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "digitalpass", "google"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Sign a Compact Credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\"\n\t},\n\t\"revocable\": false\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "sign"]
                },
                "description": "Returns a signed Compact Credential generated from a provided valid payload.\n\nThe payload can include any number of custom claims, as Compact Credentials do not comply with any specific standard or specification.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SIGN_START\n* CREDENTIAL_COMPACT_SIGN_SUCCESS\n* CREDENTIAL_COMPACT_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "Compact Credential signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\"\n\t},\n\t\"revocable\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "sign"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"encoded\": \"<string>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t}\n}"
                },
                {
                  "name": "Compact Credential signing failed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\"\n\t},\n\t\"revocable\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "sign"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Compact Semantic Credentials Issuance",
          "item": [
            {
              "name": "Compact Semantic Creddentials templates",
              "item": [
                {
                  "name": "Compact Semantic Credentials PDF templates",
                  "item": [
                    {
                      "name": "Create a PDF template",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/zip"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<string>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"]
                        },
                        "description": "Creates a Compact Semantic Credential PDF template based on a provided `.zip` file. Refer to our [PDF template design tutorial](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/pdf-design-guideline) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template created",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all PDF templates",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            }
                          ]
                        },
                        "description": "Retrieves a list of all Compact Semantic Credential PDF templates available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF templates retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\",\n\t\t\t\"fonts\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"fileName\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"metadata\": {\n\t\t\t\t\"title\": \"<string>\"\n\t\t\t},\n\t\t\t\"fields\": [\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"key\": \"<string>\",\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\t\t\"fontName\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Update a PDF template",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/zip"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<string>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            }
                          ]
                        },
                        "description": "Update an existing Compact Credential PDF template based on a provided `.zip` file. Refer to our [PDF template design tutorial](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/pdf-design-guideline) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template updated",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/zip"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "<string>"
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve a PDF template",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            }
                          ]
                        },
                        "description": "Retrieves an existing Compact Semantic Credential PDF template using its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"fileName\": \"<string>\",\n\t\"fonts\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"fileName\": \"<string>\"\n\t\t}\n\t],\n\t\"metadata\": {\n\t\t\"title\": \"<string>\"\n\t},\n\t\"fields\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"alternativeText\": \"<string>\",\n\t\t\t\"isRequired\": \"<boolean>\",\n\t\t\t\"fontName\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Delete a PDF template",
                      "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            }
                          ]
                        },
                        "description": "Delete an existing PDF template by providing its ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_FAIL"
                      },
                      "response": [
                        {
                          "name": "PDF template deleted",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "pdf", "templates", ":id"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Compact Semantic Credentials Apple Pass templates",
                  "item": [
                    {
                      "name": "Create an Apple Pass template",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates"]
                        },
                        "description": "Creates an Apple Pass template based on the provided `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/apple-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n> The Apple Pass template uses the official Apple Pass bundle structure.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template created",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates"]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates"]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all Apple Pass templates",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            }
                          ]
                        },
                        "description": "Retrieves a list of all Apple Pass template available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass templates retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"fileName\": \"<string>\",\n\t\t\t\t\"teamIdentifier\": \"<string>\",\n\t\t\t\t\"passTypeIdentifier\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update an Apple Pass template",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            }
                          ]
                        },
                        "description": "Updates an existing Apple Pass template by providing its ID and a `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/apple-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template updated",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Apple digital pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "fileName",
                                  "value": "<string>",
                                  "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                                  "type": "text"
                                },
                                {
                                  "key": "teamIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                                  "type": "text"
                                },
                                {
                                  "key": "passTypeIdentifier",
                                  "value": "<string>",
                                  "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                                  "type": "text"
                                },
                                {
                                  "key": "wwdr",
                                  "value": "<string>",
                                  "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerCert",
                                  "value": "<string>",
                                  "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKey",
                                  "value": "<string>",
                                  "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                                  "type": "text"
                                },
                                {
                                  "key": "signerKeyPassphrase",
                                  "value": "<string>",
                                  "description": "(Required) Passphrase for the encrypted key.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve an Apple Pass template",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            }
                          ]
                        },
                        "description": "Retrieves an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"fileName\": \"<string>\",\n\t\t\"teamIdentifier\": \"<string>\",\n\t\t\"passTypeIdentifier\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete an Apple Pass template",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple", "templates", ":id"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            }
                          ]
                        },
                        "description": "Deletes an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Apple Pass template deleted",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "apple",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Compact Semantic Credentials Google Pass templates",
                  "item": [
                    {
                      "name": "Create a Google Pass template",
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google", "templates"]
                        },
                        "description": "Creates a Google Pass template based on the provided `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/google-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass template created",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google", "templates"]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google", "templates"]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Retrieve all Google Pass templates",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google", "templates"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            }
                          ]
                        },
                        "description": "Retrieves a list of all Google Pass templates available on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass templates retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"passType\": \"google\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"metadata\": {\n\t\t\t\t\"issuerId\": \"<string>\",\n\t\t\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\t\t\"payPassId\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates",
                              "host": ["{{baseUrl}}"],
                              "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google", "templates"],
                              "query": [
                                {
                                  "key": "limit",
                                  "value": "100",
                                  "description": "Range size of the list, default 100",
                                  "disabled": true
                                },
                                {
                                  "key": "cursor",
                                  "value": "<string>",
                                  "description": "Starting point for the list",
                                  "disabled": true
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Update a Google Pass template",
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "multipart/form-data"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<string>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digitalpass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            }
                          ]
                        },
                        "description": "Updates a existing Google Pass template by providing its ID and a `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/tutorials/create/compact-credentials/template-management/google-digital-pass-design-guideline) tutorial for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass template updated",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "PUT",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "multipart/form-data"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "formdata",
                              "formdata": [
                                {
                                  "key": "name",
                                  "value": "<string>",
                                  "description": "(Required) Insert a name to identify this Google Pass template.",
                                  "type": "text"
                                },
                                {
                                  "key": "template",
                                  "value": "<string>",
                                  "description": "(Required) Includes your template files.",
                                  "type": "text"
                                },
                                {
                                  "key": "issuerId",
                                  "value": "<string>",
                                  "description": "(Required) Google Wallet Pass signer issuer ID.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountClientEmail",
                                  "value": "<string>",
                                  "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                                  "type": "text"
                                },
                                {
                                  "key": "serviceAccountPrivateKey",
                                  "value": "<string>",
                                  "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                                  "type": "text"
                                }
                              ]
                            },
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Retrieve a Google Pass template",
                      "request": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digitalpass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            }
                          ]
                        },
                        "description": "Retrieves an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass templated retrieved",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"id\": \"<string>\",\n\t\"passType\": \"apple\",\n\t\"name\": \"<string>\",\n\t\"metadata\": {\n\t\t\"issuerId\": \"<string>\",\n\t\t\"serviceAccountClientEmail\": \"<string>\",\n\t\t\"payPassId\": \"<string>\"\n\t}\n}"
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    },
                    {
                      "name": "Delete a Google Pass template",
                      "request": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digitalpass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            }
                          ]
                        },
                        "description": "Delete a Google Pay Pass template by ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_FAIL"
                      },
                      "response": [
                        {
                          "name": "Google Pass template deleted",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "No Content",
                          "code": 204,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Bad Request",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        },
                        {
                          "name": "Not Found",
                          "originalRequest": {
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google/templates/:id",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "v2",
                                "credentials",
                                "compact-semantic",
                                "digitalpass",
                                "google",
                                "templates",
                                ":id"
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "json",
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "cookie": [],
                          "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Sign a Compact Semantic Credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"nisi2bb\": \"<string>\",\n\t\t\t\t\"enim0\": \"<string>\",\n\t\t\t\t\"reprehenderit_3c\": \"<string>\"\n\t\t\t},\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"@context\": \"<string>\"\n\t\t},\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\"\n\t},\n\t\"revocable\": false\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "sign"]
                },
                "description": "Returns a signed Compact Semantic Credential generated from a provided valid payload.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_START\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "Compact Semantic Credential signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"nisi2bb\": \"<string>\",\n\t\t\t\t\"enim0\": \"<string>\",\n\t\t\t\t\"reprehenderit_3c\": \"<string>\"\n\t\t\t},\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"@context\": \"<string>\"\n\t\t},\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\"\n\t},\n\t\"revocable\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "sign"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"encoded\": \"<string>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"eiusmod_c\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t}\n}"
                },
                {
                  "name": "Failed to sign Compact Semantic Credential, invalid payload, etc",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"nisi2bb\": \"<string>\",\n\t\t\t\t\"enim0\": \"<string>\",\n\t\t\t\t\"reprehenderit_3c\": \"<string>\"\n\t\t\t},\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"@context\": \"<string>\"\n\t\t},\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\"\n\t},\n\t\"revocable\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "sign"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Format a Compact Semantic Credential as a QR code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "image/png"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "qrcode"]
                },
                "description": "Returns a QR code representation of a Compact Semantic Credential from a provided encoded string representation of that credential.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "QR code generated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "image/png"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "qrcode"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "image/png"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": \"<string>\",\n\t\"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "qrcode"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Format a Compact Credential as a PDF",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/pdf"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "pdf"]
                },
                "description": "Returns a PDF representation of a provided Compact Credential based on an existing PDF template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "PDF created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/pdf"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "pdf"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/pdf"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "pdf"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "pdf"]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Format a Compact Semantic Credential as an Apple Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.apple.pkpass"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple"]
                },
                "description": "Returns an Apple Pass representation of a provided Compact Semantic Credential based on an existing Apple Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Apple Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.apple.pkpass"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.apple.pkpass"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "digitalpass", "apple"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Format a Compact Semantic Credential as a Google Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google"]
                },
                "description": "Returns a Google Pass representation of a provided Compact Credential based on an existing Google Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Google Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"redirectTo\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"templateId\": \"<string>\",\n\t\"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digitalpass/google",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "digitalpass", "google"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Web Credentials Issuance",
          "item": [
            {
              "name": "Sign a Web Semantic Credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialSubject\": {},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"expirationDate\": \"<string>\",\n\t\t\"issuanceDate\": \"<string>\"\n\t},\n\t\"proofType\": \"BbsSignature2022\",\n\t\"tag\": \"<string>\",\n\t\"persist\": false,\n\t\"revocable\": false,\n\t\"includeId\": false\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "sign"]
                },
                "description": "Returns a signed Web Semantic Credential generated from a provided valid payload.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_SIGN_START\n* CREDENTIAL_WEB_SEMANTIC_SIGN_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "Web Semantic Credential signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialSubject\": {},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"expirationDate\": \"<string>\",\n\t\t\"issuanceDate\": \"<string>\"\n\t},\n\t\"proofType\": \"BbsSignature2022\",\n\t\"tag\": \"<string>\",\n\t\"persist\": false,\n\t\"revocable\": false,\n\t\"includeId\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "sign"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"credential\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"issuanceDate\": \"<string>\",\n\t\"tag\": \"<string>\",\n\t\"credentialStatus\": {\n\t\t\"id\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\"revocationListCredential\": \"<string>\"\n\t}\n}"
                },
                {
                  "name": "Failed to sign Web Semantic Credential, invalid payload, etc",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialSubject\": {},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"expirationDate\": \"<string>\",\n\t\t\"issuanceDate\": \"<string>\"\n\t},\n\t\"proofType\": \"BbsSignature2022\",\n\t\"tag\": \"<string>\",\n\t\"persist\": false,\n\t\"revocable\": false,\n\t\"includeId\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "sign"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Convert linked-data documents",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"options\": {\n\t\t\"inputFormat\": \"jsonld\",\n\t\t\"outputFormat\": \"cborld\",\n\t\t\"outputEncoding\": \"base64\"\n\t},\n\t\"data\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/linkeddata/convert",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "linkeddata", "convert"]
                },
                "description": "> Compressed Web credentials are currently marked as 'Retired' as per our [Service Level Agreement](https://learn.mattr.global/docs/terms/service-level-agreement). This capability is no longer actively enhanced or supported and will be removed from the MATTR VII platform on 19 Aug 2024. It is highly recommended to issue [Compact Semantic Credentials](https://learn.mattr.global/tutorials/create/compact-credentials/create-semantic-compact) instead.\nConvert a document like a JSON-LD Credential or a Verifiable Presentation into a CBOR-LD document, and vice versa.\n\nThe Convert operation can accept JSON-LD documents as an input and convert them to a CBOR-LD document represented in Base64. \nCBOR-LD documents can represent the same information in a smaller size that is more friendly for offline use-cases, such as embedding into a QR code printed onto physical media or a PDF.\n\nDocuments can also be converted from CBOR-LD in Base64 format to JSON-LD, the response can either be encoded in Base 64 or plain JSON. This is useful for accepting compressed Credentials or Verifiable Presentations and converting them for use on other operations like [Verify a Credential](#operation/verify-credential) or [Verify a Presentation](#operation/verifyPres).\n\n**Wallet Presentations**  \nThe MATTR mobile wallet can create verifiable presentations from a single credential in a CBOR-LD format and encode this into a QR, a further layer of GZip compression is performed.\n\n**Limitations**  \nCalculating the exact size of a credential/document that can be encoded into a QR and safely read by a camera is not straightforward. Larger credentials are unlikely to work, including those with embedded images (photos), large nested claims, or credentials with large signatures like BBS, it is generally best to confirm by testing across a range of devices.\n\nDeeply nested JSON-LD structures are currently unable to be converted to CBOR-LD due to limitations of the library, so it is possible to see errors.\n\nWe are aware that inline contexts may affect the performance for CBOR-LD compression. The Create Credential endpoint uses an inline `@vocab` context, this may change in the future.\n\n### **Analytic events**\n* LINKED_DATA_CONVERT_STARTLINKED_DATA_CONVERT_START\n* LINKED_DATA_CONVERT_STARTLINKED_DATA_CONVERT_SUCCESS\n* LINKED_DATA_CONVERT_STARTLINKED_DATA_CONVERT_FAIL"
              },
              "response": [
                {
                  "name": "CBOR-LD/JSON-LD document is converted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"options\": {\n\t\t\"inputFormat\": \"jsonld\",\n\t\t\"outputFormat\": \"cborld\",\n\t\t\"outputEncoding\": \"base64\"\n\t},\n\t\"data\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/linkeddata/convert",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "linkeddata", "convert"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"metadata\": {\n\t\t\"encoding\": \"base64\",\n\t\t\"format\": \"cborld\"\n\t},\n\t\"data\": \"<string>\"\n}"
                },
                {
                  "name": "Bad request, Invalid request body",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"options\": {\n\t\t\"inputFormat\": \"jsonld\",\n\t\t\"outputFormat\": \"cborld\",\n\t\t\"outputEncoding\": \"base64\"\n\t},\n\t\"data\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/linkeddata/convert",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "linkeddata", "convert"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Mobile Credentials Issuance",
          "item": [
            {
              "name": "Sign a Mobile Credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"payload\": {\n\t\t\"deviceKeyInfo\": {\n\t\t\t\"deviceKey\": {}\n\t\t},\n\t\t\"docType\": \"<string>\",\n\t\t\"validityInfo\": {\n\t\t\t\"validUntil\": \"<dateTime>\",\n\t\t\t\"validFrom\": \"<dateTime>\",\n\t\t\t\"expectedUpdate\": \"<dateTime>\"\n\t\t},\n\t\t\"itemsToSign\": {\n\t\t\t\"laborumd\": {\n\t\t\t\t\"occaecat634\": {\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"type\": \"binary\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"branding\": {\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\"issuerIcon\": \"<string>\"\n\t\t}\n\t},\n\t\"documentSignerId\": \"<uuid>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "sign"]
                },
                "description": "Signs the provided Mobile Credential payload using the referenced Document Signer Certificate (DSC).\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_SIGN_START\n* MOBILE_CREDENTIAL_SIGN_SUCCESS\n* MOBILE_CREDENTIAL_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "Mobile Credential signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"deviceKeyInfo\": {\n\t\t\t\"deviceKey\": {}\n\t\t},\n\t\t\"docType\": \"<string>\",\n\t\t\"validityInfo\": {\n\t\t\t\"validUntil\": \"<dateTime>\",\n\t\t\t\"validFrom\": \"<dateTime>\",\n\t\t\t\"expectedUpdate\": \"<dateTime>\"\n\t\t},\n\t\t\"itemsToSign\": {\n\t\t\t\"laborumd\": {\n\t\t\t\t\"occaecat634\": {\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"type\": \"binary\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"branding\": {\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\"issuerIcon\": \"<string>\"\n\t\t}\n\t},\n\t\"documentSignerId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "sign"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"encoded\": \"<string>\",\n\t\"decoded\": {\n\t\t\"namespaces\": {},\n\t\t\"issuerAuth\": \"<string>\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"deviceKeyInfo\": {\n\t\t\t\"deviceKey\": {}\n\t\t},\n\t\t\"docType\": \"<string>\",\n\t\t\"validityInfo\": {\n\t\t\t\"validUntil\": \"<dateTime>\",\n\t\t\t\"validFrom\": \"<dateTime>\",\n\t\t\t\"expectedUpdate\": \"<dateTime>\"\n\t\t},\n\t\t\"itemsToSign\": {\n\t\t\t\"laborumd\": {\n\t\t\t\t\"occaecat634\": {\n\t\t\t\t\t\"value\": \"<string>\",\n\t\t\t\t\t\"type\": \"binary\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"branding\": {\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\"issuerIcon\": \"<string>\"\n\t\t}\n\t},\n\t\"documentSignerId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "sign"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "OpenID Verifiable Credential Issuance",
      "item": [
        {
          "name": "Authentication Provider",
          "item": [
            {
              "name": "Configure an Authentication Provider",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"url\": \"http://PehiPRtulgBhLOSPoPgqxsJonnlfrV.zkDoVdM3Ku3IAynvDFosgukpjereESlyneVynPXzJCPSg\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"mollitac2\": \"<string>\",\n\t\t\"enimc\": \"<string>\",\n\t\t\"occaecat_81\": \"<string>\",\n\t\t\"dolor_77\": \"<string>\",\n\t\t\"magna_b50\": \"<string>\",\n\t\t\"fugiat0\": \"<string>\",\n\t\t\"esse_f5\": \"<string>\",\n\t\t\"in_ad\": \"<string>\",\n\t\t\"non_d6\": \"<string>\",\n\t\t\"occaecatd\": \"<string>\",\n\t\t\"irure612\": \"<string>\",\n\t\t\"cupidatate2_\": \"<string>\",\n\t\t\"incididunt97\": \"<string>\",\n\t\t\"auteae\": \"<string>\",\n\t\t\"occaecat2\": \"<string>\",\n\t\t\"eiusmod_b6f\": \"<string>\",\n\t\t\"sitfd\": \"<string>\",\n\t\t\"consequat_c\": \"<string>\",\n\t\t\"esse432\": \"<string>\",\n\t\t\"sint_0f\": \"<string>\",\n\t\t\"culpaed8\": \"<string>\",\n\t\t\"ullamco08c\": \"<string>\",\n\t\t\"exercitationb4\": \"<string>\",\n\t\t\"velitd_\": \"<string>\",\n\t\t\"fugiat6e1\": \"<string>\",\n\t\t\"veniam_14\": \"<string>\",\n\t\t\"utc1c\": \"<string>\",\n\t\t\"est2c0\": \"<string>\",\n\t\t\"culpa_6\": \"<string>\",\n\t\t\"magna27e\": \"<string>\",\n\t\t\"non7ff\": \"<string>\",\n\t\t\"consectetur_9\": \"<string>\",\n\t\t\"occaecat_d2e\": \"<string>\",\n\t\t\"ad__5\": \"<string>\",\n\t\t\"proident06f\": \"<string>\",\n\t\t\"ut_6\": \"<string>\",\n\t\t\"commodo_90e\": \"<string>\",\n\t\t\"reprehenderit_dbb\": \"<string>\",\n\t\t\"veniame\": \"<string>\",\n\t\t\"qui_0\": \"<string>\",\n\t\t\"elitf\": \"<string>\",\n\t\t\"aliqua9\": \"<string>\",\n\t\t\"mollit_fad\": \"<string>\",\n\t\t\"quis1\": \"<string>\",\n\t\t\"occaecat_621\": \"<string>\",\n\t\t\"nisi_d1\": \"<string>\",\n\t\t\"minim_\": \"<string>\",\n\t\t\"officia_970\": \"<string>\",\n\t\t\"officia_1\": \"<string>\",\n\t\t\"mollit_dc3\": \"<string>\",\n\t\t\"velit8\": \"<string>\",\n\t\t\"Lorem3b\": \"<string>\",\n\t\t\"velitb\": \"<string>\",\n\t\t\"inb\": \"<string>\",\n\t\t\"adipisicingf4\": \"<string>\",\n\t\t\"culpa_ab5\": \"<string>\",\n\t\t\"laborum_55\": \"<string>\",\n\t\t\"quid\": \"<string>\",\n\t\t\"eiusmod_f6c\": \"<string>\",\n\t\t\"fugiat_7\": \"<string>\",\n\t\t\"ut8d\": \"<string>\",\n\t\t\"proidentc8\": \"<string>\",\n\t\t\"quis_5\": \"<string>\",\n\t\t\"ullamco_4\": \"<string>\",\n\t\t\"in128\": \"<string>\",\n\t\t\"sit_d\": \"<string>\",\n\t\t\"eiusmod_819\": \"<string>\",\n\t\t\"qui_6b\": \"<string>\",\n\t\t\"do_6\": \"<string>\",\n\t\t\"exercitation6d\": \"<string>\",\n\t\t\"laboris6f\": \"<string>\",\n\t\t\"consequat05\": \"<string>\",\n\t\t\"ea_6\": \"<string>\",\n\t\t\"sed4bf\": \"<string>\",\n\t\t\"Excepteur9\": \"<string>\",\n\t\t\"enim_4a2\": \"<string>\",\n\t\t\"reprehenderit_06c\": \"<string>\",\n\t\t\"irure_72\": \"<string>\",\n\t\t\"mollitc0\": \"<string>\",\n\t\t\"ullamco_9_\": \"<string>\",\n\t\t\"qui_a\": \"<string>\",\n\t\t\"exercitation_14\": \"<string>\",\n\t\t\"adipisicing9\": \"<string>\",\n\t\t\"amet_\": \"<string>\",\n\t\t\"esse58\": \"<string>\",\n\t\t\"labore1\": \"<string>\",\n\t\t\"enima13\": \"<string>\",\n\t\t\"pariatur11a\": \"<string>\",\n\t\t\"aliqua6\": \"<string>\",\n\t\t\"exe9\": \"<string>\",\n\t\t\"fugiat_5\": \"<string>\",\n\t\t\"in1f_\": \"<string>\",\n\t\t\"nulla__\": \"<string>\",\n\t\t\"non_5\": \"<string>\",\n\t\t\"velit5e\": \"<string>\",\n\t\t\"dolor0_\": \"<string>\",\n\t\t\"nostrudc\": \"<string>\",\n\t\t\"et5b4\": \"<string>\",\n\t\t\"eu_1c9\": \"<string>\",\n\t\t\"ut_4\": \"<string>\",\n\t\t\"consectetur_05\": \"<string>\",\n\t\t\"sit_7cc\": \"<string>\",\n\t\t\"autef\": \"<string>\",\n\t\t\"laborum4\": \"<string>\",\n\t\t\"consequat_7c\": \"<string>\",\n\t\t\"enim__e0\": \"<string>\",\n\t\t\"aliqua4f\": \"<string>\",\n\t\t\"anim_9b\": \"<string>\",\n\t\t\"exercitation5f1\": \"<string>\",\n\t\t\"ad_9f\": \"<string>\",\n\t\t\"voluptate274\": \"<string>\",\n\t\t\"tempor_8\": \"<string>\",\n\t\t\"magnad2\": \"<string>\",\n\t\t\"nostrud8\": \"<string>\",\n\t\t\"ex3a\": \"<string>\",\n\t\t\"et895\": \"<string>\",\n\t\t\"quisf2a\": \"<string>\",\n\t\t\"incididunt_a\": \"<string>\",\n\t\t\"non6ae\": \"<string>\",\n\t\t\"sit2d\": \"<string>\",\n\t\t\"dolorbf9\": \"<string>\",\n\t\t\"Utbf7\": \"<string>\",\n\t\t\"minim71a\": \"<string>\",\n\t\t\"in_a\": \"<string>\",\n\t\t\"culpad3\": \"<string>\",\n\t\t\"sit_13\": \"<string>\",\n\t\t\"enim9\": \"<string>\",\n\t\t\"incididunte0\": \"<string>\",\n\t\t\"quise57\": \"<string>\",\n\t\t\"doloree2\": \"<string>\",\n\t\t\"ut_7e4\": \"<string>\",\n\t\t\"ad3\": \"<string>\",\n\t\t\"et_8_e\": \"<string>\",\n\t\t\"ea_9\": \"<string>\",\n\t\t\"sunt609\": \"<string>\",\n\t\t\"laborum5\": \"<string>\",\n\t\t\"dolore_148\": \"<string>\",\n\t\t\"commodo__6e\": \"<string>\",\n\t\t\"laborumbed\": \"<string>\",\n\t\t\"ex_8\": \"<string>\",\n\t\t\"pariatur7a\": \"<string>\",\n\t\t\"in_9c5\": \"<string>\",\n\t\t\"ad_a\": \"<string>\",\n\t\t\"adipisicing_30\": \"<string>\",\n\t\t\"sed27\": \"<string>\",\n\t\t\"sinta5\": \"<string>\",\n\t\t\"adipisicing_c\": \"<string>\",\n\t\t\"est7\": \"<string>\",\n\t\t\"sed_611\": \"<string>\",\n\t\t\"nostrud_b\": \"<string>\",\n\t\t\"dolor5\": \"<string>\",\n\t\t\"eiusmod5d\": \"<string>\",\n\t\t\"ea7\": \"<string>\",\n\t\t\"labore_7\": \"<string>\",\n\t\t\"inc22\": \"<string>\",\n\t\t\"exercitation_01\": \"<string>\",\n\t\t\"mollit1a\": \"<string>\",\n\t\t\"dolore9\": \"<string>\",\n\t\t\"proident0\": \"<string>\",\n\t\t\"minim729\": \"<string>\",\n\t\t\"commodo_5f\": \"<string>\",\n\t\t\"velit_8b\": \"<string>\",\n\t\t\"est_9b\": \"<string>\",\n\t\t\"ullamco_b\": \"<string>\",\n\t\t\"anim_c52\": \"<string>\",\n\t\t\"deserunt_1\": \"<string>\",\n\t\t\"dolore_7c\": \"<string>\",\n\t\t\"nostrud685\": \"<string>\",\n\t\t\"este6\": \"<string>\",\n\t\t\"sed_116\": \"<string>\",\n\t\t\"nostrude1e\": \"<string>\",\n\t\t\"ad__bb\": \"<string>\",\n\t\t\"fugiatc\": \"<string>\",\n\t\t\"sit3e\": \"<string>\",\n\t\t\"dolor8\": \"<string>\",\n\t\t\"magna_8\": \"<string>\",\n\t\t\"culpae\": \"<string>\",\n\t\t\"nostrud_8\": \"<string>\",\n\t\t\"irure_4b9\": \"<string>\",\n\t\t\"occaecat_9\": \"<string>\",\n\t\t\"dolore862\": \"<string>\",\n\t\t\"elit76\": \"<string>\",\n\t\t\"dolore_f0\": \"<string>\",\n\t\t\"sintab\": \"<string>\",\n\t\t\"in_58\": \"<string>\",\n\t\t\"laborum78f\": \"<string>\",\n\t\t\"commodo_6_\": \"<string>\",\n\t\t\"eiusmodc6\": \"<string>\",\n\t\t\"et_9\": \"<string>\",\n\t\t\"et2\": \"<string>\",\n\t\t\"non_1\": \"<string>\",\n\t\t\"aliquip__db\": \"<string>\",\n\t\t\"anim_a7\": \"<string>\",\n\t\t\"cupidatat0d\": \"<string>\",\n\t\t\"aliqua_cf7\": \"<string>\",\n\t\t\"sint_d\": \"<string>\",\n\t\t\"aliqua_9fb\": \"<string>\",\n\t\t\"eiusmod4df\": \"<string>\",\n\t\t\"veniam_04\": \"<string>\",\n\t\t\"culpaa3\": \"<string>\",\n\t\t\"idb\": \"<string>\",\n\t\t\"anim_b58\": \"<string>\",\n\t\t\"sita\": \"<string>\",\n\t\t\"mollitd\": \"<string>\",\n\t\t\"tempord4\": \"<string>\",\n\t\t\"veniam_d\": \"<string>\",\n\t\t\"labore_c\": \"<string>\",\n\t\t\"mollita\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"amet0\": \"<string>\",\n\t\t\"inb3\": \"<string>\",\n\t\t\"pariaturd8\": \"<string>\",\n\t\t\"officia_7\": \"<string>\",\n\t\t\"aliquabd\": \"<string>\",\n\t\t\"est5\": \"<string>\",\n\t\t\"Excepteur_08\": \"<string>\",\n\t\t\"dolore_e5\": \"<string>\",\n\t\t\"laborum07\": \"<string>\",\n\t\t\"aute_2\": \"<string>\",\n\t\t\"ullamco_6d2\": \"<string>\",\n\t\t\"Lorem_ee\": \"<string>\",\n\t\t\"proident_1\": \"<string>\",\n\t\t\"dolore5bf\": \"<string>\",\n\t\t\"magna50d\": \"<string>\",\n\t\t\"enimd7\": \"<string>\",\n\t\t\"Lorem_0\": \"<string>\",\n\t\t\"ina94\": \"<string>\",\n\t\t\"deserunt_48d\": \"<string>\",\n\t\t\"consectetur54\": \"<string>\",\n\t\t\"aute_20\": \"<string>\",\n\t\t\"reprehenderita2\": \"<string>\",\n\t\t\"occaecat__\": \"<string>\",\n\t\t\"laborum_3d1\": \"<string>\",\n\t\t\"aute5\": \"<string>\",\n\t\t\"laboris1\": \"<string>\",\n\t\t\"autea\": \"<string>\",\n\t\t\"qui5_\": \"<string>\",\n\t\t\"fugiat9\": \"<string>\",\n\t\t\"sit4\": \"<string>\",\n\t\t\"sint7f4\": \"<string>\",\n\t\t\"laboris0\": \"<string>\",\n\t\t\"ea_12\": \"<string>\",\n\t\t\"consectetur_c9\": \"<string>\",\n\t\t\"et_676\": \"<string>\",\n\t\t\"ut5\": \"<string>\",\n\t\t\"labore80c\": \"<string>\",\n\t\t\"ipsum_5\": \"<string>\",\n\t\t\"magna01\": \"<string>\",\n\t\t\"incididunt6\": \"<string>\",\n\t\t\"ad_0d\": \"<string>\",\n\t\t\"eiusmod_9_8\": \"<string>\",\n\t\t\"laborum_996\": \"<string>\",\n\t\t\"id15\": \"<string>\",\n\t\t\"et_db5\": \"<string>\",\n\t\t\"dolore_e\": \"<string>\",\n\t\t\"ea164\": \"<string>\",\n\t\t\"ipsum_be\": \"<string>\",\n\t\t\"consectetur_616\": \"<string>\",\n\t\t\"nullac6\": \"<string>\",\n\t\t\"aliquip_a1\": \"<string>\",\n\t\t\"cupidatat_19\": \"<string>\",\n\t\t\"sunt7bc\": \"<string>\",\n\t\t\"officia0\": \"<string>\",\n\t\t\"ex4ec\": \"<string>\",\n\t\t\"veniam_069\": \"<string>\",\n\t\t\"adipisicing3e0\": \"<string>\",\n\t\t\"mollit5b\": \"<string>\",\n\t\t\"in_33\": \"<string>\",\n\t\t\"cupidatat91c\": \"<string>\",\n\t\t\"Excepteur_58\": \"<string>\",\n\t\t\"Ut_a\": \"<string>\",\n\t\t\"mollitca1\": \"<string>\",\n\t\t\"dolore67\": \"<string>\",\n\t\t\"et8\": \"<string>\",\n\t\t\"qui_60c\": \"<string>\",\n\t\t\"deserunt_5f\": \"<string>\",\n\t\t\"do4a4\": \"<string>\",\n\t\t\"non_005\": \"<string>\",\n\t\t\"nulla_5\": \"<string>\",\n\t\t\"exercitationf4a\": \"<string>\",\n\t\t\"inb8\": \"<string>\",\n\t\t\"enim_85\": \"<string>\",\n\t\t\"ullamco_91_\": \"<string>\",\n\t\t\"sed90\": \"<string>\",\n\t\t\"nostrudb9\": \"<string>\",\n\t\t\"pariatur_d\": \"<string>\",\n\t\t\"Duised5\": \"<string>\",\n\t\t\"voluptate_38\": \"<string>\",\n\t\t\"et71c\": \"<string>\",\n\t\t\"ut_06\": \"<string>\",\n\t\t\"elit_e\": \"<string>\",\n\t\t\"irure_5\": \"<string>\",\n\t\t\"exa\": \"<string>\",\n\t\t\"incididunt_13\": \"<string>\",\n\t\t\"sed7d\": \"<string>\",\n\t\t\"adipisicing7\": \"<string>\",\n\t\t\"ad2b8\": \"<string>\",\n\t\t\"tempor_0\": \"<string>\",\n\t\t\"Lorem_61\": \"<string>\",\n\t\t\"amet_d_\": \"<string>\",\n\t\t\"nullab\": \"<string>\",\n\t\t\"ut10\": \"<string>\",\n\t\t\"cupidatat_e\": \"<string>\",\n\t\t\"minim_090\": \"<string>\",\n\t\t\"Ut_7e\": \"<string>\",\n\t\t\"in_8\": \"<string>\",\n\t\t\"in4\": \"<string>\",\n\t\t\"quis_3\": \"<string>\",\n\t\t\"exercitation_e\": \"<string>\",\n\t\t\"mollit_8\": \"<string>\",\n\t\t\"in3\": \"<string>\",\n\t\t\"quis0\": \"<string>\",\n\t\t\"ullamco_d3\": \"<string>\",\n\t\t\"ullamco_3a\": \"<string>\",\n\t\t\"proidentf_a\": \"<string>\",\n\t\t\"minim_56\": \"<string>\",\n\t\t\"ea7f\": \"<string>\",\n\t\t\"non36\": \"<string>\",\n\t\t\"velit_81\": \"<string>\",\n\t\t\"minimd8\": \"<string>\",\n\t\t\"exercitation_d_\": \"<string>\",\n\t\t\"in531\": \"<string>\",\n\t\t\"sint_a5\": \"<string>\",\n\t\t\"culpa_b21\": \"<string>\",\n\t\t\"amet57\": \"<string>\",\n\t\t\"officiab52\": \"<string>\",\n\t\t\"sed_da\": \"<string>\",\n\t\t\"culpa7\": \"<string>\",\n\t\t\"fugiat11\": \"<string>\",\n\t\t\"consectetur_6f\": \"<string>\",\n\t\t\"in_b9\": \"<string>\",\n\t\t\"minim3a\": \"<string>\",\n\t\t\"id2c\": \"<string>\",\n\t\t\"laborum2a1\": \"<string>\",\n\t\t\"proident11\": \"<string>\",\n\t\t\"pariaturee2\": \"<string>\",\n\t\t\"deserunt_cf\": \"<string>\",\n\t\t\"magna_e54\": \"<string>\",\n\t\t\"reprehenderit_6a\": \"<string>\",\n\t\t\"dolor_71\": \"<string>\",\n\t\t\"pariatur1\": \"<string>\",\n\t\t\"commodo_c5\": \"<string>\",\n\t\t\"irureeca\": \"<string>\",\n\t\t\"proident6b_\": \"<string>\",\n\t\t\"sunt_8f\": \"<string>\",\n\t\t\"consequat_b\": \"<string>\",\n\t\t\"sunte\": \"<string>\",\n\t\t\"minimf\": \"<string>\",\n\t\t\"sint_56\": \"<string>\",\n\t\t\"sunt_0_\": \"<string>\",\n\t\t\"est_7_7\": \"<string>\",\n\t\t\"velit_e9\": \"<string>\",\n\t\t\"magnab\": \"<string>\",\n\t\t\"magnadb\": \"<string>\",\n\t\t\"id_7df\": \"<string>\",\n\t\t\"occaecat_e9\": \"<string>\",\n\t\t\"id_e95\": \"<string>\",\n\t\t\"ut7\": \"<string>\",\n\t\t\"consequat3\": \"<string>\",\n\t\t\"dolore_c15\": \"<string>\",\n\t\t\"esse_ad7\": \"<string>\",\n\t\t\"anim_cc1\": \"<string>\",\n\t\t\"commodo_c7f\": \"<string>\",\n\t\t\"do6\": \"<string>\",\n\t\t\"fugiat_11a\": \"<string>\",\n\t\t\"non_1e3\": \"<string>\",\n\t\t\"consectetur7d\": \"<string>\",\n\t\t\"magna_eb\": \"<string>\",\n\t\t\"nisi_28\": \"<string>\",\n\t\t\"cupidatat172\": \"<string>\",\n\t\t\"dolore_6\": \"<string>\",\n\t\t\"minim8\": \"<string>\",\n\t\t\"nisie\": \"<string>\",\n\t\t\"veniamd82\": \"<string>\",\n\t\t\"proident3\": \"<string>\",\n\t\t\"in_46\": \"<string>\",\n\t\t\"laboris31\": \"<string>\",\n\t\t\"qui_5e\": \"<string>\",\n\t\t\"elit_d3\": \"<string>\",\n\t\t\"mollitc9\": \"<string>\",\n\t\t\"occaecat63\": \"<string>\",\n\t\t\"magnad_\": \"<string>\",\n\t\t\"id_1b\": \"<string>\",\n\t\t\"fugiat_a\": \"<string>\",\n\t\t\"ut3\": \"<string>\",\n\t\t\"labore_6dd\": \"<string>\",\n\t\t\"cillum_c1\": \"<string>\",\n\t\t\"mollit10\": \"<string>\",\n\t\t\"Duisc6a\": \"<string>\",\n\t\t\"consequat_c2\": \"<string>\",\n\t\t\"consecteturff9\": \"<string>\",\n\t\t\"ipsum_b\": \"<string>\",\n\t\t\"mollit8fd\": \"<string>\",\n\t\t\"laborum__1\": \"<string>\",\n\t\t\"ullamcod7\": \"<string>\",\n\t\t\"nulla_d\": \"<string>\",\n\t\t\"nostrud_97\": \"<string>\",\n\t\t\"ullamco_8\": \"<string>\",\n\t\t\"eiusmod_b\": \"<string>\",\n\t\t\"exercitation14\": \"<string>\",\n\t\t\"fugiatd\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authenticationproviders",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "authenticationproviders"]
                },
                "description": "Configures an Authentication Provider on the tenant.\n\nAn authentication or identity provider (IdP) is a platform that is typically used to store and manage user accounts on behalf of an organisation or a service provider. MATTR VII uses the authentication provider to authenticate end users before issuing them credentials.\n\n> Only one authentication provider can be configured on a tenant.\n\nThe `/.well-known/openid-configuration` endpoint of the Authentication Provider must contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported`.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_CREATE_START\n* USER_AUTHENTICATION_PROVIDER_CREATE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Authentication Provider configured",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"url\": \"http://PehiPRtulgBhLOSPoPgqxsJonnlfrV.zkDoVdM3Ku3IAynvDFosgukpjereESlyneVynPXzJCPSg\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"mollitac2\": \"<string>\",\n\t\t\"enimc\": \"<string>\",\n\t\t\"occaecat_81\": \"<string>\",\n\t\t\"dolor_77\": \"<string>\",\n\t\t\"magna_b50\": \"<string>\",\n\t\t\"fugiat0\": \"<string>\",\n\t\t\"esse_f5\": \"<string>\",\n\t\t\"in_ad\": \"<string>\",\n\t\t\"non_d6\": \"<string>\",\n\t\t\"occaecatd\": \"<string>\",\n\t\t\"irure612\": \"<string>\",\n\t\t\"cupidatate2_\": \"<string>\",\n\t\t\"incididunt97\": \"<string>\",\n\t\t\"auteae\": \"<string>\",\n\t\t\"occaecat2\": \"<string>\",\n\t\t\"eiusmod_b6f\": \"<string>\",\n\t\t\"sitfd\": \"<string>\",\n\t\t\"consequat_c\": \"<string>\",\n\t\t\"esse432\": \"<string>\",\n\t\t\"sint_0f\": \"<string>\",\n\t\t\"culpaed8\": \"<string>\",\n\t\t\"ullamco08c\": \"<string>\",\n\t\t\"exercitationb4\": \"<string>\",\n\t\t\"velitd_\": \"<string>\",\n\t\t\"fugiat6e1\": \"<string>\",\n\t\t\"veniam_14\": \"<string>\",\n\t\t\"utc1c\": \"<string>\",\n\t\t\"est2c0\": \"<string>\",\n\t\t\"culpa_6\": \"<string>\",\n\t\t\"magna27e\": \"<string>\",\n\t\t\"non7ff\": \"<string>\",\n\t\t\"consectetur_9\": \"<string>\",\n\t\t\"occaecat_d2e\": \"<string>\",\n\t\t\"ad__5\": \"<string>\",\n\t\t\"proident06f\": \"<string>\",\n\t\t\"ut_6\": \"<string>\",\n\t\t\"commodo_90e\": \"<string>\",\n\t\t\"reprehenderit_dbb\": \"<string>\",\n\t\t\"veniame\": \"<string>\",\n\t\t\"qui_0\": \"<string>\",\n\t\t\"elitf\": \"<string>\",\n\t\t\"aliqua9\": \"<string>\",\n\t\t\"mollit_fad\": \"<string>\",\n\t\t\"quis1\": \"<string>\",\n\t\t\"occaecat_621\": \"<string>\",\n\t\t\"nisi_d1\": \"<string>\",\n\t\t\"minim_\": \"<string>\",\n\t\t\"officia_970\": \"<string>\",\n\t\t\"officia_1\": \"<string>\",\n\t\t\"mollit_dc3\": \"<string>\",\n\t\t\"velit8\": \"<string>\",\n\t\t\"Lorem3b\": \"<string>\",\n\t\t\"velitb\": \"<string>\",\n\t\t\"inb\": \"<string>\",\n\t\t\"adipisicingf4\": \"<string>\",\n\t\t\"culpa_ab5\": \"<string>\",\n\t\t\"laborum_55\": \"<string>\",\n\t\t\"quid\": \"<string>\",\n\t\t\"eiusmod_f6c\": \"<string>\",\n\t\t\"fugiat_7\": \"<string>\",\n\t\t\"ut8d\": \"<string>\",\n\t\t\"proidentc8\": \"<string>\",\n\t\t\"quis_5\": \"<string>\",\n\t\t\"ullamco_4\": \"<string>\",\n\t\t\"in128\": \"<string>\",\n\t\t\"sit_d\": \"<string>\",\n\t\t\"eiusmod_819\": \"<string>\",\n\t\t\"qui_6b\": \"<string>\",\n\t\t\"do_6\": \"<string>\",\n\t\t\"exercitation6d\": \"<string>\",\n\t\t\"laboris6f\": \"<string>\",\n\t\t\"consequat05\": \"<string>\",\n\t\t\"ea_6\": \"<string>\",\n\t\t\"sed4bf\": \"<string>\",\n\t\t\"Excepteur9\": \"<string>\",\n\t\t\"enim_4a2\": \"<string>\",\n\t\t\"reprehenderit_06c\": \"<string>\",\n\t\t\"irure_72\": \"<string>\",\n\t\t\"mollitc0\": \"<string>\",\n\t\t\"ullamco_9_\": \"<string>\",\n\t\t\"qui_a\": \"<string>\",\n\t\t\"exercitation_14\": \"<string>\",\n\t\t\"adipisicing9\": \"<string>\",\n\t\t\"amet_\": \"<string>\",\n\t\t\"esse58\": \"<string>\",\n\t\t\"labore1\": \"<string>\",\n\t\t\"enima13\": \"<string>\",\n\t\t\"pariatur11a\": \"<string>\",\n\t\t\"aliqua6\": \"<string>\",\n\t\t\"exe9\": \"<string>\",\n\t\t\"fugiat_5\": \"<string>\",\n\t\t\"in1f_\": \"<string>\",\n\t\t\"nulla__\": \"<string>\",\n\t\t\"non_5\": \"<string>\",\n\t\t\"velit5e\": \"<string>\",\n\t\t\"dolor0_\": \"<string>\",\n\t\t\"nostrudc\": \"<string>\",\n\t\t\"et5b4\": \"<string>\",\n\t\t\"eu_1c9\": \"<string>\",\n\t\t\"ut_4\": \"<string>\",\n\t\t\"consectetur_05\": \"<string>\",\n\t\t\"sit_7cc\": \"<string>\",\n\t\t\"autef\": \"<string>\",\n\t\t\"laborum4\": \"<string>\",\n\t\t\"consequat_7c\": \"<string>\",\n\t\t\"enim__e0\": \"<string>\",\n\t\t\"aliqua4f\": \"<string>\",\n\t\t\"anim_9b\": \"<string>\",\n\t\t\"exercitation5f1\": \"<string>\",\n\t\t\"ad_9f\": \"<string>\",\n\t\t\"voluptate274\": \"<string>\",\n\t\t\"tempor_8\": \"<string>\",\n\t\t\"magnad2\": \"<string>\",\n\t\t\"nostrud8\": \"<string>\",\n\t\t\"ex3a\": \"<string>\",\n\t\t\"et895\": \"<string>\",\n\t\t\"quisf2a\": \"<string>\",\n\t\t\"incididunt_a\": \"<string>\",\n\t\t\"non6ae\": \"<string>\",\n\t\t\"sit2d\": \"<string>\",\n\t\t\"dolorbf9\": \"<string>\",\n\t\t\"Utbf7\": \"<string>\",\n\t\t\"minim71a\": \"<string>\",\n\t\t\"in_a\": \"<string>\",\n\t\t\"culpad3\": \"<string>\",\n\t\t\"sit_13\": \"<string>\",\n\t\t\"enim9\": \"<string>\",\n\t\t\"incididunte0\": \"<string>\",\n\t\t\"quise57\": \"<string>\",\n\t\t\"doloree2\": \"<string>\",\n\t\t\"ut_7e4\": \"<string>\",\n\t\t\"ad3\": \"<string>\",\n\t\t\"et_8_e\": \"<string>\",\n\t\t\"ea_9\": \"<string>\",\n\t\t\"sunt609\": \"<string>\",\n\t\t\"laborum5\": \"<string>\",\n\t\t\"dolore_148\": \"<string>\",\n\t\t\"commodo__6e\": \"<string>\",\n\t\t\"laborumbed\": \"<string>\",\n\t\t\"ex_8\": \"<string>\",\n\t\t\"pariatur7a\": \"<string>\",\n\t\t\"in_9c5\": \"<string>\",\n\t\t\"ad_a\": \"<string>\",\n\t\t\"adipisicing_30\": \"<string>\",\n\t\t\"sed27\": \"<string>\",\n\t\t\"sinta5\": \"<string>\",\n\t\t\"adipisicing_c\": \"<string>\",\n\t\t\"est7\": \"<string>\",\n\t\t\"sed_611\": \"<string>\",\n\t\t\"nostrud_b\": \"<string>\",\n\t\t\"dolor5\": \"<string>\",\n\t\t\"eiusmod5d\": \"<string>\",\n\t\t\"ea7\": \"<string>\",\n\t\t\"labore_7\": \"<string>\",\n\t\t\"inc22\": \"<string>\",\n\t\t\"exercitation_01\": \"<string>\",\n\t\t\"mollit1a\": \"<string>\",\n\t\t\"dolore9\": \"<string>\",\n\t\t\"proident0\": \"<string>\",\n\t\t\"minim729\": \"<string>\",\n\t\t\"commodo_5f\": \"<string>\",\n\t\t\"velit_8b\": \"<string>\",\n\t\t\"est_9b\": \"<string>\",\n\t\t\"ullamco_b\": \"<string>\",\n\t\t\"anim_c52\": \"<string>\",\n\t\t\"deserunt_1\": \"<string>\",\n\t\t\"dolore_7c\": \"<string>\",\n\t\t\"nostrud685\": \"<string>\",\n\t\t\"este6\": \"<string>\",\n\t\t\"sed_116\": \"<string>\",\n\t\t\"nostrude1e\": \"<string>\",\n\t\t\"ad__bb\": \"<string>\",\n\t\t\"fugiatc\": \"<string>\",\n\t\t\"sit3e\": \"<string>\",\n\t\t\"dolor8\": \"<string>\",\n\t\t\"magna_8\": \"<string>\",\n\t\t\"culpae\": \"<string>\",\n\t\t\"nostrud_8\": \"<string>\",\n\t\t\"irure_4b9\": \"<string>\",\n\t\t\"occaecat_9\": \"<string>\",\n\t\t\"dolore862\": \"<string>\",\n\t\t\"elit76\": \"<string>\",\n\t\t\"dolore_f0\": \"<string>\",\n\t\t\"sintab\": \"<string>\",\n\t\t\"in_58\": \"<string>\",\n\t\t\"laborum78f\": \"<string>\",\n\t\t\"commodo_6_\": \"<string>\",\n\t\t\"eiusmodc6\": \"<string>\",\n\t\t\"et_9\": \"<string>\",\n\t\t\"et2\": \"<string>\",\n\t\t\"non_1\": \"<string>\",\n\t\t\"aliquip__db\": \"<string>\",\n\t\t\"anim_a7\": \"<string>\",\n\t\t\"cupidatat0d\": \"<string>\",\n\t\t\"aliqua_cf7\": \"<string>\",\n\t\t\"sint_d\": \"<string>\",\n\t\t\"aliqua_9fb\": \"<string>\",\n\t\t\"eiusmod4df\": \"<string>\",\n\t\t\"veniam_04\": \"<string>\",\n\t\t\"culpaa3\": \"<string>\",\n\t\t\"idb\": \"<string>\",\n\t\t\"anim_b58\": \"<string>\",\n\t\t\"sita\": \"<string>\",\n\t\t\"mollitd\": \"<string>\",\n\t\t\"tempord4\": \"<string>\",\n\t\t\"veniam_d\": \"<string>\",\n\t\t\"labore_c\": \"<string>\",\n\t\t\"mollita\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"amet0\": \"<string>\",\n\t\t\"inb3\": \"<string>\",\n\t\t\"pariaturd8\": \"<string>\",\n\t\t\"officia_7\": \"<string>\",\n\t\t\"aliquabd\": \"<string>\",\n\t\t\"est5\": \"<string>\",\n\t\t\"Excepteur_08\": \"<string>\",\n\t\t\"dolore_e5\": \"<string>\",\n\t\t\"laborum07\": \"<string>\",\n\t\t\"aute_2\": \"<string>\",\n\t\t\"ullamco_6d2\": \"<string>\",\n\t\t\"Lorem_ee\": \"<string>\",\n\t\t\"proident_1\": \"<string>\",\n\t\t\"dolore5bf\": \"<string>\",\n\t\t\"magna50d\": \"<string>\",\n\t\t\"enimd7\": \"<string>\",\n\t\t\"Lorem_0\": \"<string>\",\n\t\t\"ina94\": \"<string>\",\n\t\t\"deserunt_48d\": \"<string>\",\n\t\t\"consectetur54\": \"<string>\",\n\t\t\"aute_20\": \"<string>\",\n\t\t\"reprehenderita2\": \"<string>\",\n\t\t\"occaecat__\": \"<string>\",\n\t\t\"laborum_3d1\": \"<string>\",\n\t\t\"aute5\": \"<string>\",\n\t\t\"laboris1\": \"<string>\",\n\t\t\"autea\": \"<string>\",\n\t\t\"qui5_\": \"<string>\",\n\t\t\"fugiat9\": \"<string>\",\n\t\t\"sit4\": \"<string>\",\n\t\t\"sint7f4\": \"<string>\",\n\t\t\"laboris0\": \"<string>\",\n\t\t\"ea_12\": \"<string>\",\n\t\t\"consectetur_c9\": \"<string>\",\n\t\t\"et_676\": \"<string>\",\n\t\t\"ut5\": \"<string>\",\n\t\t\"labore80c\": \"<string>\",\n\t\t\"ipsum_5\": \"<string>\",\n\t\t\"magna01\": \"<string>\",\n\t\t\"incididunt6\": \"<string>\",\n\t\t\"ad_0d\": \"<string>\",\n\t\t\"eiusmod_9_8\": \"<string>\",\n\t\t\"laborum_996\": \"<string>\",\n\t\t\"id15\": \"<string>\",\n\t\t\"et_db5\": \"<string>\",\n\t\t\"dolore_e\": \"<string>\",\n\t\t\"ea164\": \"<string>\",\n\t\t\"ipsum_be\": \"<string>\",\n\t\t\"consectetur_616\": \"<string>\",\n\t\t\"nullac6\": \"<string>\",\n\t\t\"aliquip_a1\": \"<string>\",\n\t\t\"cupidatat_19\": \"<string>\",\n\t\t\"sunt7bc\": \"<string>\",\n\t\t\"officia0\": \"<string>\",\n\t\t\"ex4ec\": \"<string>\",\n\t\t\"veniam_069\": \"<string>\",\n\t\t\"adipisicing3e0\": \"<string>\",\n\t\t\"mollit5b\": \"<string>\",\n\t\t\"in_33\": \"<string>\",\n\t\t\"cupidatat91c\": \"<string>\",\n\t\t\"Excepteur_58\": \"<string>\",\n\t\t\"Ut_a\": \"<string>\",\n\t\t\"mollitca1\": \"<string>\",\n\t\t\"dolore67\": \"<string>\",\n\t\t\"et8\": \"<string>\",\n\t\t\"qui_60c\": \"<string>\",\n\t\t\"deserunt_5f\": \"<string>\",\n\t\t\"do4a4\": \"<string>\",\n\t\t\"non_005\": \"<string>\",\n\t\t\"nulla_5\": \"<string>\",\n\t\t\"exercitationf4a\": \"<string>\",\n\t\t\"inb8\": \"<string>\",\n\t\t\"enim_85\": \"<string>\",\n\t\t\"ullamco_91_\": \"<string>\",\n\t\t\"sed90\": \"<string>\",\n\t\t\"nostrudb9\": \"<string>\",\n\t\t\"pariatur_d\": \"<string>\",\n\t\t\"Duised5\": \"<string>\",\n\t\t\"voluptate_38\": \"<string>\",\n\t\t\"et71c\": \"<string>\",\n\t\t\"ut_06\": \"<string>\",\n\t\t\"elit_e\": \"<string>\",\n\t\t\"irure_5\": \"<string>\",\n\t\t\"exa\": \"<string>\",\n\t\t\"incididunt_13\": \"<string>\",\n\t\t\"sed7d\": \"<string>\",\n\t\t\"adipisicing7\": \"<string>\",\n\t\t\"ad2b8\": \"<string>\",\n\t\t\"tempor_0\": \"<string>\",\n\t\t\"Lorem_61\": \"<string>\",\n\t\t\"amet_d_\": \"<string>\",\n\t\t\"nullab\": \"<string>\",\n\t\t\"ut10\": \"<string>\",\n\t\t\"cupidatat_e\": \"<string>\",\n\t\t\"minim_090\": \"<string>\",\n\t\t\"Ut_7e\": \"<string>\",\n\t\t\"in_8\": \"<string>\",\n\t\t\"in4\": \"<string>\",\n\t\t\"quis_3\": \"<string>\",\n\t\t\"exercitation_e\": \"<string>\",\n\t\t\"mollit_8\": \"<string>\",\n\t\t\"in3\": \"<string>\",\n\t\t\"quis0\": \"<string>\",\n\t\t\"ullamco_d3\": \"<string>\",\n\t\t\"ullamco_3a\": \"<string>\",\n\t\t\"proidentf_a\": \"<string>\",\n\t\t\"minim_56\": \"<string>\",\n\t\t\"ea7f\": \"<string>\",\n\t\t\"non36\": \"<string>\",\n\t\t\"velit_81\": \"<string>\",\n\t\t\"minimd8\": \"<string>\",\n\t\t\"exercitation_d_\": \"<string>\",\n\t\t\"in531\": \"<string>\",\n\t\t\"sint_a5\": \"<string>\",\n\t\t\"culpa_b21\": \"<string>\",\n\t\t\"amet57\": \"<string>\",\n\t\t\"officiab52\": \"<string>\",\n\t\t\"sed_da\": \"<string>\",\n\t\t\"culpa7\": \"<string>\",\n\t\t\"fugiat11\": \"<string>\",\n\t\t\"consectetur_6f\": \"<string>\",\n\t\t\"in_b9\": \"<string>\",\n\t\t\"minim3a\": \"<string>\",\n\t\t\"id2c\": \"<string>\",\n\t\t\"laborum2a1\": \"<string>\",\n\t\t\"proident11\": \"<string>\",\n\t\t\"pariaturee2\": \"<string>\",\n\t\t\"deserunt_cf\": \"<string>\",\n\t\t\"magna_e54\": \"<string>\",\n\t\t\"reprehenderit_6a\": \"<string>\",\n\t\t\"dolor_71\": \"<string>\",\n\t\t\"pariatur1\": \"<string>\",\n\t\t\"commodo_c5\": \"<string>\",\n\t\t\"irureeca\": \"<string>\",\n\t\t\"proident6b_\": \"<string>\",\n\t\t\"sunt_8f\": \"<string>\",\n\t\t\"consequat_b\": \"<string>\",\n\t\t\"sunte\": \"<string>\",\n\t\t\"minimf\": \"<string>\",\n\t\t\"sint_56\": \"<string>\",\n\t\t\"sunt_0_\": \"<string>\",\n\t\t\"est_7_7\": \"<string>\",\n\t\t\"velit_e9\": \"<string>\",\n\t\t\"magnab\": \"<string>\",\n\t\t\"magnadb\": \"<string>\",\n\t\t\"id_7df\": \"<string>\",\n\t\t\"occaecat_e9\": \"<string>\",\n\t\t\"id_e95\": \"<string>\",\n\t\t\"ut7\": \"<string>\",\n\t\t\"consequat3\": \"<string>\",\n\t\t\"dolore_c15\": \"<string>\",\n\t\t\"esse_ad7\": \"<string>\",\n\t\t\"anim_cc1\": \"<string>\",\n\t\t\"commodo_c7f\": \"<string>\",\n\t\t\"do6\": \"<string>\",\n\t\t\"fugiat_11a\": \"<string>\",\n\t\t\"non_1e3\": \"<string>\",\n\t\t\"consectetur7d\": \"<string>\",\n\t\t\"magna_eb\": \"<string>\",\n\t\t\"nisi_28\": \"<string>\",\n\t\t\"cupidatat172\": \"<string>\",\n\t\t\"dolore_6\": \"<string>\",\n\t\t\"minim8\": \"<string>\",\n\t\t\"nisie\": \"<string>\",\n\t\t\"veniamd82\": \"<string>\",\n\t\t\"proident3\": \"<string>\",\n\t\t\"in_46\": \"<string>\",\n\t\t\"laboris31\": \"<string>\",\n\t\t\"qui_5e\": \"<string>\",\n\t\t\"elit_d3\": \"<string>\",\n\t\t\"mollitc9\": \"<string>\",\n\t\t\"occaecat63\": \"<string>\",\n\t\t\"magnad_\": \"<string>\",\n\t\t\"id_1b\": \"<string>\",\n\t\t\"fugiat_a\": \"<string>\",\n\t\t\"ut3\": \"<string>\",\n\t\t\"labore_6dd\": \"<string>\",\n\t\t\"cillum_c1\": \"<string>\",\n\t\t\"mollit10\": \"<string>\",\n\t\t\"Duisc6a\": \"<string>\",\n\t\t\"consequat_c2\": \"<string>\",\n\t\t\"consecteturff9\": \"<string>\",\n\t\t\"ipsum_b\": \"<string>\",\n\t\t\"mollit8fd\": \"<string>\",\n\t\t\"laborum__1\": \"<string>\",\n\t\t\"ullamcod7\": \"<string>\",\n\t\t\"nulla_d\": \"<string>\",\n\t\t\"nostrud_97\": \"<string>\",\n\t\t\"ullamco_8\": \"<string>\",\n\t\t\"eiusmod_b\": \"<string>\",\n\t\t\"exercitation14\": \"<string>\",\n\t\t\"fugiatd\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"redirectUrl\": \"<uri>\",\n\t\"url\": \"<uri>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"labore7b1\": \"<string>\",\n\t\t\"nostrude1\": \"<string>\",\n\t\t\"adipisicing_5c\": \"<string>\",\n\t\t\"adipisicing_1ed\": \"<string>\",\n\t\t\"eiusmodb\": \"<string>\",\n\t\t\"nostrudb4\": \"<string>\",\n\t\t\"in28\": \"<string>\",\n\t\t\"animdd\": \"<string>\",\n\t\t\"dolor_09a\": \"<string>\",\n\t\t\"eu_e1\": \"<string>\",\n\t\t\"consectetur483\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"url\": \"http://PehiPRtulgBhLOSPoPgqxsJonnlfrV.zkDoVdM3Ku3IAynvDFosgukpjereESlyneVynPXzJCPSg\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"mollitac2\": \"<string>\",\n\t\t\"enimc\": \"<string>\",\n\t\t\"occaecat_81\": \"<string>\",\n\t\t\"dolor_77\": \"<string>\",\n\t\t\"magna_b50\": \"<string>\",\n\t\t\"fugiat0\": \"<string>\",\n\t\t\"esse_f5\": \"<string>\",\n\t\t\"in_ad\": \"<string>\",\n\t\t\"non_d6\": \"<string>\",\n\t\t\"occaecatd\": \"<string>\",\n\t\t\"irure612\": \"<string>\",\n\t\t\"cupidatate2_\": \"<string>\",\n\t\t\"incididunt97\": \"<string>\",\n\t\t\"auteae\": \"<string>\",\n\t\t\"occaecat2\": \"<string>\",\n\t\t\"eiusmod_b6f\": \"<string>\",\n\t\t\"sitfd\": \"<string>\",\n\t\t\"consequat_c\": \"<string>\",\n\t\t\"esse432\": \"<string>\",\n\t\t\"sint_0f\": \"<string>\",\n\t\t\"culpaed8\": \"<string>\",\n\t\t\"ullamco08c\": \"<string>\",\n\t\t\"exercitationb4\": \"<string>\",\n\t\t\"velitd_\": \"<string>\",\n\t\t\"fugiat6e1\": \"<string>\",\n\t\t\"veniam_14\": \"<string>\",\n\t\t\"utc1c\": \"<string>\",\n\t\t\"est2c0\": \"<string>\",\n\t\t\"culpa_6\": \"<string>\",\n\t\t\"magna27e\": \"<string>\",\n\t\t\"non7ff\": \"<string>\",\n\t\t\"consectetur_9\": \"<string>\",\n\t\t\"occaecat_d2e\": \"<string>\",\n\t\t\"ad__5\": \"<string>\",\n\t\t\"proident06f\": \"<string>\",\n\t\t\"ut_6\": \"<string>\",\n\t\t\"commodo_90e\": \"<string>\",\n\t\t\"reprehenderit_dbb\": \"<string>\",\n\t\t\"veniame\": \"<string>\",\n\t\t\"qui_0\": \"<string>\",\n\t\t\"elitf\": \"<string>\",\n\t\t\"aliqua9\": \"<string>\",\n\t\t\"mollit_fad\": \"<string>\",\n\t\t\"quis1\": \"<string>\",\n\t\t\"occaecat_621\": \"<string>\",\n\t\t\"nisi_d1\": \"<string>\",\n\t\t\"minim_\": \"<string>\",\n\t\t\"officia_970\": \"<string>\",\n\t\t\"officia_1\": \"<string>\",\n\t\t\"mollit_dc3\": \"<string>\",\n\t\t\"velit8\": \"<string>\",\n\t\t\"Lorem3b\": \"<string>\",\n\t\t\"velitb\": \"<string>\",\n\t\t\"inb\": \"<string>\",\n\t\t\"adipisicingf4\": \"<string>\",\n\t\t\"culpa_ab5\": \"<string>\",\n\t\t\"laborum_55\": \"<string>\",\n\t\t\"quid\": \"<string>\",\n\t\t\"eiusmod_f6c\": \"<string>\",\n\t\t\"fugiat_7\": \"<string>\",\n\t\t\"ut8d\": \"<string>\",\n\t\t\"proidentc8\": \"<string>\",\n\t\t\"quis_5\": \"<string>\",\n\t\t\"ullamco_4\": \"<string>\",\n\t\t\"in128\": \"<string>\",\n\t\t\"sit_d\": \"<string>\",\n\t\t\"eiusmod_819\": \"<string>\",\n\t\t\"qui_6b\": \"<string>\",\n\t\t\"do_6\": \"<string>\",\n\t\t\"exercitation6d\": \"<string>\",\n\t\t\"laboris6f\": \"<string>\",\n\t\t\"consequat05\": \"<string>\",\n\t\t\"ea_6\": \"<string>\",\n\t\t\"sed4bf\": \"<string>\",\n\t\t\"Excepteur9\": \"<string>\",\n\t\t\"enim_4a2\": \"<string>\",\n\t\t\"reprehenderit_06c\": \"<string>\",\n\t\t\"irure_72\": \"<string>\",\n\t\t\"mollitc0\": \"<string>\",\n\t\t\"ullamco_9_\": \"<string>\",\n\t\t\"qui_a\": \"<string>\",\n\t\t\"exercitation_14\": \"<string>\",\n\t\t\"adipisicing9\": \"<string>\",\n\t\t\"amet_\": \"<string>\",\n\t\t\"esse58\": \"<string>\",\n\t\t\"labore1\": \"<string>\",\n\t\t\"enima13\": \"<string>\",\n\t\t\"pariatur11a\": \"<string>\",\n\t\t\"aliqua6\": \"<string>\",\n\t\t\"exe9\": \"<string>\",\n\t\t\"fugiat_5\": \"<string>\",\n\t\t\"in1f_\": \"<string>\",\n\t\t\"nulla__\": \"<string>\",\n\t\t\"non_5\": \"<string>\",\n\t\t\"velit5e\": \"<string>\",\n\t\t\"dolor0_\": \"<string>\",\n\t\t\"nostrudc\": \"<string>\",\n\t\t\"et5b4\": \"<string>\",\n\t\t\"eu_1c9\": \"<string>\",\n\t\t\"ut_4\": \"<string>\",\n\t\t\"consectetur_05\": \"<string>\",\n\t\t\"sit_7cc\": \"<string>\",\n\t\t\"autef\": \"<string>\",\n\t\t\"laborum4\": \"<string>\",\n\t\t\"consequat_7c\": \"<string>\",\n\t\t\"enim__e0\": \"<string>\",\n\t\t\"aliqua4f\": \"<string>\",\n\t\t\"anim_9b\": \"<string>\",\n\t\t\"exercitation5f1\": \"<string>\",\n\t\t\"ad_9f\": \"<string>\",\n\t\t\"voluptate274\": \"<string>\",\n\t\t\"tempor_8\": \"<string>\",\n\t\t\"magnad2\": \"<string>\",\n\t\t\"nostrud8\": \"<string>\",\n\t\t\"ex3a\": \"<string>\",\n\t\t\"et895\": \"<string>\",\n\t\t\"quisf2a\": \"<string>\",\n\t\t\"incididunt_a\": \"<string>\",\n\t\t\"non6ae\": \"<string>\",\n\t\t\"sit2d\": \"<string>\",\n\t\t\"dolorbf9\": \"<string>\",\n\t\t\"Utbf7\": \"<string>\",\n\t\t\"minim71a\": \"<string>\",\n\t\t\"in_a\": \"<string>\",\n\t\t\"culpad3\": \"<string>\",\n\t\t\"sit_13\": \"<string>\",\n\t\t\"enim9\": \"<string>\",\n\t\t\"incididunte0\": \"<string>\",\n\t\t\"quise57\": \"<string>\",\n\t\t\"doloree2\": \"<string>\",\n\t\t\"ut_7e4\": \"<string>\",\n\t\t\"ad3\": \"<string>\",\n\t\t\"et_8_e\": \"<string>\",\n\t\t\"ea_9\": \"<string>\",\n\t\t\"sunt609\": \"<string>\",\n\t\t\"laborum5\": \"<string>\",\n\t\t\"dolore_148\": \"<string>\",\n\t\t\"commodo__6e\": \"<string>\",\n\t\t\"laborumbed\": \"<string>\",\n\t\t\"ex_8\": \"<string>\",\n\t\t\"pariatur7a\": \"<string>\",\n\t\t\"in_9c5\": \"<string>\",\n\t\t\"ad_a\": \"<string>\",\n\t\t\"adipisicing_30\": \"<string>\",\n\t\t\"sed27\": \"<string>\",\n\t\t\"sinta5\": \"<string>\",\n\t\t\"adipisicing_c\": \"<string>\",\n\t\t\"est7\": \"<string>\",\n\t\t\"sed_611\": \"<string>\",\n\t\t\"nostrud_b\": \"<string>\",\n\t\t\"dolor5\": \"<string>\",\n\t\t\"eiusmod5d\": \"<string>\",\n\t\t\"ea7\": \"<string>\",\n\t\t\"labore_7\": \"<string>\",\n\t\t\"inc22\": \"<string>\",\n\t\t\"exercitation_01\": \"<string>\",\n\t\t\"mollit1a\": \"<string>\",\n\t\t\"dolore9\": \"<string>\",\n\t\t\"proident0\": \"<string>\",\n\t\t\"minim729\": \"<string>\",\n\t\t\"commodo_5f\": \"<string>\",\n\t\t\"velit_8b\": \"<string>\",\n\t\t\"est_9b\": \"<string>\",\n\t\t\"ullamco_b\": \"<string>\",\n\t\t\"anim_c52\": \"<string>\",\n\t\t\"deserunt_1\": \"<string>\",\n\t\t\"dolore_7c\": \"<string>\",\n\t\t\"nostrud685\": \"<string>\",\n\t\t\"este6\": \"<string>\",\n\t\t\"sed_116\": \"<string>\",\n\t\t\"nostrude1e\": \"<string>\",\n\t\t\"ad__bb\": \"<string>\",\n\t\t\"fugiatc\": \"<string>\",\n\t\t\"sit3e\": \"<string>\",\n\t\t\"dolor8\": \"<string>\",\n\t\t\"magna_8\": \"<string>\",\n\t\t\"culpae\": \"<string>\",\n\t\t\"nostrud_8\": \"<string>\",\n\t\t\"irure_4b9\": \"<string>\",\n\t\t\"occaecat_9\": \"<string>\",\n\t\t\"dolore862\": \"<string>\",\n\t\t\"elit76\": \"<string>\",\n\t\t\"dolore_f0\": \"<string>\",\n\t\t\"sintab\": \"<string>\",\n\t\t\"in_58\": \"<string>\",\n\t\t\"laborum78f\": \"<string>\",\n\t\t\"commodo_6_\": \"<string>\",\n\t\t\"eiusmodc6\": \"<string>\",\n\t\t\"et_9\": \"<string>\",\n\t\t\"et2\": \"<string>\",\n\t\t\"non_1\": \"<string>\",\n\t\t\"aliquip__db\": \"<string>\",\n\t\t\"anim_a7\": \"<string>\",\n\t\t\"cupidatat0d\": \"<string>\",\n\t\t\"aliqua_cf7\": \"<string>\",\n\t\t\"sint_d\": \"<string>\",\n\t\t\"aliqua_9fb\": \"<string>\",\n\t\t\"eiusmod4df\": \"<string>\",\n\t\t\"veniam_04\": \"<string>\",\n\t\t\"culpaa3\": \"<string>\",\n\t\t\"idb\": \"<string>\",\n\t\t\"anim_b58\": \"<string>\",\n\t\t\"sita\": \"<string>\",\n\t\t\"mollitd\": \"<string>\",\n\t\t\"tempord4\": \"<string>\",\n\t\t\"veniam_d\": \"<string>\",\n\t\t\"labore_c\": \"<string>\",\n\t\t\"mollita\": \"<string>\",\n\t\t\"ut_9_\": \"<string>\",\n\t\t\"amet0\": \"<string>\",\n\t\t\"inb3\": \"<string>\",\n\t\t\"pariaturd8\": \"<string>\",\n\t\t\"officia_7\": \"<string>\",\n\t\t\"aliquabd\": \"<string>\",\n\t\t\"est5\": \"<string>\",\n\t\t\"Excepteur_08\": \"<string>\",\n\t\t\"dolore_e5\": \"<string>\",\n\t\t\"laborum07\": \"<string>\",\n\t\t\"aute_2\": \"<string>\",\n\t\t\"ullamco_6d2\": \"<string>\",\n\t\t\"Lorem_ee\": \"<string>\",\n\t\t\"proident_1\": \"<string>\",\n\t\t\"dolore5bf\": \"<string>\",\n\t\t\"magna50d\": \"<string>\",\n\t\t\"enimd7\": \"<string>\",\n\t\t\"Lorem_0\": \"<string>\",\n\t\t\"ina94\": \"<string>\",\n\t\t\"deserunt_48d\": \"<string>\",\n\t\t\"consectetur54\": \"<string>\",\n\t\t\"aute_20\": \"<string>\",\n\t\t\"reprehenderita2\": \"<string>\",\n\t\t\"occaecat__\": \"<string>\",\n\t\t\"laborum_3d1\": \"<string>\",\n\t\t\"aute5\": \"<string>\",\n\t\t\"laboris1\": \"<string>\",\n\t\t\"autea\": \"<string>\",\n\t\t\"qui5_\": \"<string>\",\n\t\t\"fugiat9\": \"<string>\",\n\t\t\"sit4\": \"<string>\",\n\t\t\"sint7f4\": \"<string>\",\n\t\t\"laboris0\": \"<string>\",\n\t\t\"ea_12\": \"<string>\",\n\t\t\"consectetur_c9\": \"<string>\",\n\t\t\"et_676\": \"<string>\",\n\t\t\"ut5\": \"<string>\",\n\t\t\"labore80c\": \"<string>\",\n\t\t\"ipsum_5\": \"<string>\",\n\t\t\"magna01\": \"<string>\",\n\t\t\"incididunt6\": \"<string>\",\n\t\t\"ad_0d\": \"<string>\",\n\t\t\"eiusmod_9_8\": \"<string>\",\n\t\t\"laborum_996\": \"<string>\",\n\t\t\"id15\": \"<string>\",\n\t\t\"et_db5\": \"<string>\",\n\t\t\"dolore_e\": \"<string>\",\n\t\t\"ea164\": \"<string>\",\n\t\t\"ipsum_be\": \"<string>\",\n\t\t\"consectetur_616\": \"<string>\",\n\t\t\"nullac6\": \"<string>\",\n\t\t\"aliquip_a1\": \"<string>\",\n\t\t\"cupidatat_19\": \"<string>\",\n\t\t\"sunt7bc\": \"<string>\",\n\t\t\"officia0\": \"<string>\",\n\t\t\"ex4ec\": \"<string>\",\n\t\t\"veniam_069\": \"<string>\",\n\t\t\"adipisicing3e0\": \"<string>\",\n\t\t\"mollit5b\": \"<string>\",\n\t\t\"in_33\": \"<string>\",\n\t\t\"cupidatat91c\": \"<string>\",\n\t\t\"Excepteur_58\": \"<string>\",\n\t\t\"Ut_a\": \"<string>\",\n\t\t\"mollitca1\": \"<string>\",\n\t\t\"dolore67\": \"<string>\",\n\t\t\"et8\": \"<string>\",\n\t\t\"qui_60c\": \"<string>\",\n\t\t\"deserunt_5f\": \"<string>\",\n\t\t\"do4a4\": \"<string>\",\n\t\t\"non_005\": \"<string>\",\n\t\t\"nulla_5\": \"<string>\",\n\t\t\"exercitationf4a\": \"<string>\",\n\t\t\"inb8\": \"<string>\",\n\t\t\"enim_85\": \"<string>\",\n\t\t\"ullamco_91_\": \"<string>\",\n\t\t\"sed90\": \"<string>\",\n\t\t\"nostrudb9\": \"<string>\",\n\t\t\"pariatur_d\": \"<string>\",\n\t\t\"Duised5\": \"<string>\",\n\t\t\"voluptate_38\": \"<string>\",\n\t\t\"et71c\": \"<string>\",\n\t\t\"ut_06\": \"<string>\",\n\t\t\"elit_e\": \"<string>\",\n\t\t\"irure_5\": \"<string>\",\n\t\t\"exa\": \"<string>\",\n\t\t\"incididunt_13\": \"<string>\",\n\t\t\"sed7d\": \"<string>\",\n\t\t\"adipisicing7\": \"<string>\",\n\t\t\"ad2b8\": \"<string>\",\n\t\t\"tempor_0\": \"<string>\",\n\t\t\"Lorem_61\": \"<string>\",\n\t\t\"amet_d_\": \"<string>\",\n\t\t\"nullab\": \"<string>\",\n\t\t\"ut10\": \"<string>\",\n\t\t\"cupidatat_e\": \"<string>\",\n\t\t\"minim_090\": \"<string>\",\n\t\t\"Ut_7e\": \"<string>\",\n\t\t\"in_8\": \"<string>\",\n\t\t\"in4\": \"<string>\",\n\t\t\"quis_3\": \"<string>\",\n\t\t\"exercitation_e\": \"<string>\",\n\t\t\"mollit_8\": \"<string>\",\n\t\t\"in3\": \"<string>\",\n\t\t\"quis0\": \"<string>\",\n\t\t\"ullamco_d3\": \"<string>\",\n\t\t\"ullamco_3a\": \"<string>\",\n\t\t\"proidentf_a\": \"<string>\",\n\t\t\"minim_56\": \"<string>\",\n\t\t\"ea7f\": \"<string>\",\n\t\t\"non36\": \"<string>\",\n\t\t\"velit_81\": \"<string>\",\n\t\t\"minimd8\": \"<string>\",\n\t\t\"exercitation_d_\": \"<string>\",\n\t\t\"in531\": \"<string>\",\n\t\t\"sint_a5\": \"<string>\",\n\t\t\"culpa_b21\": \"<string>\",\n\t\t\"amet57\": \"<string>\",\n\t\t\"officiab52\": \"<string>\",\n\t\t\"sed_da\": \"<string>\",\n\t\t\"culpa7\": \"<string>\",\n\t\t\"fugiat11\": \"<string>\",\n\t\t\"consectetur_6f\": \"<string>\",\n\t\t\"in_b9\": \"<string>\",\n\t\t\"minim3a\": \"<string>\",\n\t\t\"id2c\": \"<string>\",\n\t\t\"laborum2a1\": \"<string>\",\n\t\t\"proident11\": \"<string>\",\n\t\t\"pariaturee2\": \"<string>\",\n\t\t\"deserunt_cf\": \"<string>\",\n\t\t\"magna_e54\": \"<string>\",\n\t\t\"reprehenderit_6a\": \"<string>\",\n\t\t\"dolor_71\": \"<string>\",\n\t\t\"pariatur1\": \"<string>\",\n\t\t\"commodo_c5\": \"<string>\",\n\t\t\"irureeca\": \"<string>\",\n\t\t\"proident6b_\": \"<string>\",\n\t\t\"sunt_8f\": \"<string>\",\n\t\t\"consequat_b\": \"<string>\",\n\t\t\"sunte\": \"<string>\",\n\t\t\"minimf\": \"<string>\",\n\t\t\"sint_56\": \"<string>\",\n\t\t\"sunt_0_\": \"<string>\",\n\t\t\"est_7_7\": \"<string>\",\n\t\t\"velit_e9\": \"<string>\",\n\t\t\"magnab\": \"<string>\",\n\t\t\"magnadb\": \"<string>\",\n\t\t\"id_7df\": \"<string>\",\n\t\t\"occaecat_e9\": \"<string>\",\n\t\t\"id_e95\": \"<string>\",\n\t\t\"ut7\": \"<string>\",\n\t\t\"consequat3\": \"<string>\",\n\t\t\"dolore_c15\": \"<string>\",\n\t\t\"esse_ad7\": \"<string>\",\n\t\t\"anim_cc1\": \"<string>\",\n\t\t\"commodo_c7f\": \"<string>\",\n\t\t\"do6\": \"<string>\",\n\t\t\"fugiat_11a\": \"<string>\",\n\t\t\"non_1e3\": \"<string>\",\n\t\t\"consectetur7d\": \"<string>\",\n\t\t\"magna_eb\": \"<string>\",\n\t\t\"nisi_28\": \"<string>\",\n\t\t\"cupidatat172\": \"<string>\",\n\t\t\"dolore_6\": \"<string>\",\n\t\t\"minim8\": \"<string>\",\n\t\t\"nisie\": \"<string>\",\n\t\t\"veniamd82\": \"<string>\",\n\t\t\"proident3\": \"<string>\",\n\t\t\"in_46\": \"<string>\",\n\t\t\"laboris31\": \"<string>\",\n\t\t\"qui_5e\": \"<string>\",\n\t\t\"elit_d3\": \"<string>\",\n\t\t\"mollitc9\": \"<string>\",\n\t\t\"occaecat63\": \"<string>\",\n\t\t\"magnad_\": \"<string>\",\n\t\t\"id_1b\": \"<string>\",\n\t\t\"fugiat_a\": \"<string>\",\n\t\t\"ut3\": \"<string>\",\n\t\t\"labore_6dd\": \"<string>\",\n\t\t\"cillum_c1\": \"<string>\",\n\t\t\"mollit10\": \"<string>\",\n\t\t\"Duisc6a\": \"<string>\",\n\t\t\"consequat_c2\": \"<string>\",\n\t\t\"consecteturff9\": \"<string>\",\n\t\t\"ipsum_b\": \"<string>\",\n\t\t\"mollit8fd\": \"<string>\",\n\t\t\"laborum__1\": \"<string>\",\n\t\t\"ullamcod7\": \"<string>\",\n\t\t\"nulla_d\": \"<string>\",\n\t\t\"nostrud_97\": \"<string>\",\n\t\t\"ullamco_8\": \"<string>\",\n\t\t\"eiusmod_b\": \"<string>\",\n\t\t\"exercitation14\": \"<string>\",\n\t\t\"fugiatd\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Authentication Providers",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authenticationproviders",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "authenticationproviders"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned entries, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of entries",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of all Authentication Providers on your tenant.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_START\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Authentication Providers retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"clientId\": \"<string>\",\n\t\t\t\"clientSecret\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"redirectUrl\": \"<uri>\",\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"scope\": [\n\t\t\t\t\"openid\",\n\t\t\t\t\"profile\",\n\t\t\t\t\"email\"\n\t\t\t],\n\t\t\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\t\t\"staticRequestParameters\": {\n\t\t\t\t\"dolore_b8b\": \"<string>\",\n\t\t\t\t\"cupidatat3c\": \"<string>\",\n\t\t\t\t\"mollitf75\": \"<string>\",\n\t\t\t\t\"laborum14_\": \"<string>\",\n\t\t\t\t\"culpab8\": \"<string>\",\n\t\t\t\t\"utec0\": \"<string>\",\n\t\t\t\t\"pariaturcbc\": \"<string>\",\n\t\t\t\t\"quis666\": \"<string>\",\n\t\t\t\t\"minim7a\": \"<string>\",\n\t\t\t\t\"ut_0\": \"<string>\",\n\t\t\t\t\"sint_3\": \"<string>\",\n\t\t\t\t\"cillum552\": \"<string>\",\n\t\t\t\t\"exercitation_6e_\": \"<string>\",\n\t\t\t\t\"culpa_e\": \"<string>\",\n\t\t\t\t\"doloref\": \"<string>\",\n\t\t\t\t\"Excepteura0c\": \"<string>\",\n\t\t\t\t\"utef\": \"<string>\",\n\t\t\t\t\"Lorem_9\": \"<string>\",\n\t\t\t\t\"et_9\": \"<string>\",\n\t\t\t\t\"Excepteurb\": \"<string>\",\n\t\t\t\t\"laboris_06\": \"<string>\",\n\t\t\t\t\"ipsum2\": \"<string>\",\n\t\t\t\t\"enim5\": \"<string>\",\n\t\t\t\t\"nullaf05\": \"<string>\",\n\t\t\t\t\"estf0\": \"<string>\",\n\t\t\t\t\"dolor5\": \"<string>\",\n\t\t\t\t\"est_5c\": \"<string>\",\n\t\t\t\t\"ead_1\": \"<string>\",\n\t\t\t\t\"aute7\": \"<string>\",\n\t\t\t\t\"exercitationf65\": \"<string>\",\n\t\t\t\t\"aliqua_a2\": \"<string>\",\n\t\t\t\t\"consectetur120\": \"<string>\",\n\t\t\t\t\"esse4bd\": \"<string>\",\n\t\t\t\t\"aliqua_9\": \"<string>\",\n\t\t\t\t\"dolore09\": \"<string>\",\n\t\t\t\t\"officia_fa1\": \"<string>\",\n\t\t\t\t\"Excepteur_8\": \"<string>\",\n\t\t\t\t\"aliquipa5\": \"<string>\",\n\t\t\t\t\"anim1d\": \"<string>\",\n\t\t\t\t\"elitd9\": \"<string>\",\n\t\t\t\t\"et392\": \"<string>\",\n\t\t\t\t\"esse_7\": \"<string>\",\n\t\t\t\t\"dolore4ce\": \"<string>\",\n\t\t\t\t\"irure_7\": \"<string>\",\n\t\t\t\t\"culpa_df\": \"<string>\",\n\t\t\t\t\"quis4\": \"<string>\",\n\t\t\t\t\"laboris_9\": \"<string>\",\n\t\t\t\t\"aliquip_1\": \"<string>\",\n\t\t\t\t\"aliquipfb0\": \"<string>\",\n\t\t\t\t\"commodo2_\": \"<string>\",\n\t\t\t\t\"magna_6b\": \"<string>\",\n\t\t\t\t\"nostrud6be\": \"<string>\",\n\t\t\t\t\"sitba5\": \"<string>\",\n\t\t\t\t\"dolore_64\": \"<string>\",\n\t\t\t\t\"eiusmod_3c\": \"<string>\",\n\t\t\t\t\"Excepteur_6\": \"<string>\",\n\t\t\t\t\"mollit_fa\": \"<string>\",\n\t\t\t\t\"Duis_5\": \"<string>\",\n\t\t\t\t\"aute_c\": \"<string>\",\n\t\t\t\t\"dolor_1\": \"<string>\",\n\t\t\t\t\"consequat_f84\": \"<string>\",\n\t\t\t\t\"irure_\": \"<string>\",\n\t\t\t\t\"eu_cf6\": \"<string>\",\n\t\t\t\t\"aliquipa__\": \"<string>\",\n\t\t\t\t\"magna2\": \"<string>\",\n\t\t\t\t\"sunt_0d_\": \"<string>\",\n\t\t\t\t\"dolore_1f\": \"<string>\",\n\t\t\t\t\"eiusmod_9c9\": \"<string>\",\n\t\t\t\t\"dolor_b\": \"<string>\",\n\t\t\t\t\"labore_76\": \"<string>\",\n\t\t\t\t\"est_69\": \"<string>\",\n\t\t\t\t\"ullamco28\": \"<string>\",\n\t\t\t\t\"velit_2\": \"<string>\",\n\t\t\t\t\"nostrud_82\": \"<string>\",\n\t\t\t\t\"cupidatat_fba\": \"<string>\",\n\t\t\t\t\"aliquip_4\": \"<string>\",\n\t\t\t\t\"pariatur5b\": \"<string>\",\n\t\t\t\t\"eu_23e\": \"<string>\",\n\t\t\t\t\"in_d5\": \"<string>\",\n\t\t\t\t\"consequat_3\": \"<string>\",\n\t\t\t\t\"officia_cb5\": \"<string>\",\n\t\t\t\t\"occaecate\": \"<string>\",\n\t\t\t\t\"laborum7\": \"<string>\",\n\t\t\t\t\"cupidatat0\": \"<string>\",\n\t\t\t\t\"non34\": \"<string>\",\n\t\t\t\t\"irure5e7\": \"<string>\",\n\t\t\t\t\"esse19\": \"<string>\",\n\t\t\t\t\"non_fe\": \"<string>\",\n\t\t\t\t\"minim_b7\": \"<string>\",\n\t\t\t\t\"dolore_df0\": \"<string>\",\n\t\t\t\t\"eiusmod_469\": \"<string>\",\n\t\t\t\t\"dolor_e2\": \"<string>\",\n\t\t\t\t\"tempor9c9\": \"<string>\",\n\t\t\t\t\"Ut58\": \"<string>\",\n\t\t\t\t\"mollit48_\": \"<string>\",\n\t\t\t\t\"exercitationa9\": \"<string>\",\n\t\t\t\t\"consectetur81b\": \"<string>\",\n\t\t\t\t\"pariatur_0d\": \"<string>\",\n\t\t\t\t\"ullamco5\": \"<string>\",\n\t\t\t\t\"Duis_74\": \"<string>\",\n\t\t\t\t\"ut_26\": \"<string>\",\n\t\t\t\t\"cillum_b0_\": \"<string>\",\n\t\t\t\t\"fugiat99\": \"<string>\",\n\t\t\t\t\"in_48\": \"<string>\",\n\t\t\t\t\"aliquip_9\": \"<string>\",\n\t\t\t\t\"non_1fd\": \"<string>\",\n\t\t\t\t\"laborum_1c\": \"<string>\",\n\t\t\t\t\"incididunt_d0\": \"<string>\",\n\t\t\t\t\"fugiat_263\": \"<string>\",\n\t\t\t\t\"est_8\": \"<string>\",\n\t\t\t\t\"ipsumf4\": \"<string>\",\n\t\t\t\t\"minimff\": \"<string>\",\n\t\t\t\t\"quidbb\": \"<string>\",\n\t\t\t\t\"ullamco_89\": \"<string>\",\n\t\t\t\t\"veniamea0\": \"<string>\",\n\t\t\t\t\"non43\": \"<string>\",\n\t\t\t\t\"incididunt_9\": \"<string>\",\n\t\t\t\t\"enim58\": \"<string>\",\n\t\t\t\t\"est_5\": \"<string>\",\n\t\t\t\t\"utee6\": \"<string>\",\n\t\t\t\t\"eua\": \"<string>\",\n\t\t\t\t\"eu_c2\": \"<string>\",\n\t\t\t\t\"sed9\": \"<string>\",\n\t\t\t\t\"quis_6\": \"<string>\",\n\t\t\t\t\"ex_858\": \"<string>\",\n\t\t\t\t\"amet_38b\": \"<string>\",\n\t\t\t\t\"velit5\": \"<string>\",\n\t\t\t\t\"dolora5\": \"<string>\",\n\t\t\t\t\"proident_63\": \"<string>\",\n\t\t\t\t\"occaecat1f\": \"<string>\",\n\t\t\t\t\"dolore76_\": \"<string>\",\n\t\t\t\t\"quicc\": \"<string>\",\n\t\t\t\t\"culpa_b4\": \"<string>\",\n\t\t\t\t\"deserunt_5_\": \"<string>\",\n\t\t\t\t\"occaecata\": \"<string>\",\n\t\t\t\t\"ex_71\": \"<string>\",\n\t\t\t\t\"labore_8\": \"<string>\",\n\t\t\t\t\"dolore015\": \"<string>\",\n\t\t\t\t\"occaecat74\": \"<string>\",\n\t\t\t\t\"quis_9c\": \"<string>\",\n\t\t\t\t\"eiusmod7\": \"<string>\",\n\t\t\t\t\"eu_4\": \"<string>\",\n\t\t\t\t\"Duis_7\": \"<string>\",\n\t\t\t\t\"nostrud_fd\": \"<string>\",\n\t\t\t\t\"officia18\": \"<string>\",\n\t\t\t\t\"dolore_0_\": \"<string>\",\n\t\t\t\t\"consectetur_6a\": \"<string>\",\n\t\t\t\t\"consectetur__c\": \"<string>\",\n\t\t\t\t\"noned\": \"<string>\",\n\t\t\t\t\"incididunt96\": \"<string>\",\n\t\t\t\t\"adipisicing_4d\": \"<string>\",\n\t\t\t\t\"elit5f\": \"<string>\",\n\t\t\t\t\"aute_4\": \"<string>\",\n\t\t\t\t\"etf0\": \"<string>\",\n\t\t\t\t\"pariatur_05\": \"<string>\",\n\t\t\t\t\"commodo_a51\": \"<string>\",\n\t\t\t\t\"inb\": \"<string>\",\n\t\t\t\t\"pariatur_001\": \"<string>\",\n\t\t\t\t\"non4_\": \"<string>\",\n\t\t\t\t\"aliqua0f3\": \"<string>\",\n\t\t\t\t\"sed012\": \"<string>\",\n\t\t\t\t\"cupidatate7\": \"<string>\",\n\t\t\t\t\"enimc4\": \"<string>\",\n\t\t\t\t\"pariatur_10d\": \"<string>\",\n\t\t\t\t\"officia_5\": \"<string>\",\n\t\t\t\t\"mollit3\": \"<string>\",\n\t\t\t\t\"laborum__c\": \"<string>\",\n\t\t\t\t\"exercitation_8c\": \"<string>\",\n\t\t\t\t\"ipsumd\": \"<string>\",\n\t\t\t\t\"non1c\": \"<string>\",\n\t\t\t\t\"Ut_5\": \"<string>\",\n\t\t\t\t\"pariatur_e5_\": \"<string>\",\n\t\t\t\t\"nisic8\": \"<string>\",\n\t\t\t\t\"nulla_63\": \"<string>\",\n\t\t\t\t\"ut_bd3\": \"<string>\",\n\t\t\t\t\"velit_c11\": \"<string>\",\n\t\t\t\t\"Duis11\": \"<string>\",\n\t\t\t\t\"est643\": \"<string>\",\n\t\t\t\t\"Lorem_14\": \"<string>\",\n\t\t\t\t\"ine6\": \"<string>\",\n\t\t\t\t\"aliquip_de\": \"<string>\",\n\t\t\t\t\"tempor7\": \"<string>\",\n\t\t\t\t\"occaecat_b\": \"<string>\",\n\t\t\t\t\"velit_47\": \"<string>\",\n\t\t\t\t\"ameta8\": \"<string>\",\n\t\t\t\t\"sint_811\": \"<string>\",\n\t\t\t\t\"tempora7b\": \"<string>\",\n\t\t\t\t\"consectetur_0\": \"<string>\",\n\t\t\t\t\"est4e0\": \"<string>\",\n\t\t\t\t\"ad_06\": \"<string>\",\n\t\t\t\t\"pariature5\": \"<string>\",\n\t\t\t\t\"labore_c\": \"<string>\",\n\t\t\t\t\"dolor_7_d\": \"<string>\",\n\t\t\t\t\"tempor_ebe\": \"<string>\",\n\t\t\t\t\"laborum4\": \"<string>\",\n\t\t\t\t\"laborum6\": \"<string>\",\n\t\t\t\t\"ida9\": \"<string>\",\n\t\t\t\t\"pariatur_e\": \"<string>\",\n\t\t\t\t\"ut_14\": \"<string>\",\n\t\t\t\t\"exercitation_64\": \"<string>\",\n\t\t\t\t\"pariatur_a\": \"<string>\",\n\t\t\t\t\"dolor06\": \"<string>\",\n\t\t\t\t\"proident69\": \"<string>\",\n\t\t\t\t\"Lorem_7b\": \"<string>\",\n\t\t\t\t\"nostrud_5\": \"<string>\",\n\t\t\t\t\"id9\": \"<string>\",\n\t\t\t\t\"proident_81\": \"<string>\",\n\t\t\t\t\"dolorec\": \"<string>\",\n\t\t\t\t\"Ut9\": \"<string>\",\n\t\t\t\t\"ut6\": \"<string>\",\n\t\t\t\t\"eu6b4\": \"<string>\",\n\t\t\t\t\"amet8\": \"<string>\",\n\t\t\t\t\"minim8\": \"<string>\",\n\t\t\t\t\"ut1\": \"<string>\",\n\t\t\t\t\"Utb6\": \"<string>\"\n\t\t\t},\n\t\t\t\"forwardedRequestParameters\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"clientId\": \"<string>\",\n\t\t\t\"clientSecret\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"redirectUrl\": \"<uri>\",\n\t\t\t\"url\": \"<uri>\",\n\t\t\t\"scope\": [\n\t\t\t\t\"openid\",\n\t\t\t\t\"profile\",\n\t\t\t\t\"email\"\n\t\t\t],\n\t\t\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\t\t\"staticRequestParameters\": {\n\t\t\t\t\"ullamco_f\": \"<string>\",\n\t\t\t\t\"adipisicing0\": \"<string>\",\n\t\t\t\t\"nisi_d\": \"<string>\",\n\t\t\t\t\"Lorem5c\": \"<string>\",\n\t\t\t\t\"consequat_b_\": \"<string>\",\n\t\t\t\t\"dolore_f9\": \"<string>\",\n\t\t\t\t\"utc\": \"<string>\",\n\t\t\t\t\"Ut_3_9\": \"<string>\",\n\t\t\t\t\"consectetur_d\": \"<string>\",\n\t\t\t\t\"consequat_e\": \"<string>\",\n\t\t\t\t\"nullaab\": \"<string>\",\n\t\t\t\t\"nostrud0df\": \"<string>\",\n\t\t\t\t\"velit_10\": \"<string>\",\n\t\t\t\t\"Duis1df\": \"<string>\",\n\t\t\t\t\"magnaad\": \"<string>\",\n\t\t\t\t\"fugiat21\": \"<string>\",\n\t\t\t\t\"non_959\": \"<string>\",\n\t\t\t\t\"nullab\": \"<string>\",\n\t\t\t\t\"aliquip__\": \"<string>\",\n\t\t\t\t\"minim2e\": \"<string>\",\n\t\t\t\t\"proident_ca5\": \"<string>\",\n\t\t\t\t\"est_aef\": \"<string>\",\n\t\t\t\t\"minim_7\": \"<string>\",\n\t\t\t\t\"magna_54\": \"<string>\",\n\t\t\t\t\"reprehenderit_7d\": \"<string>\",\n\t\t\t\t\"sitf9b\": \"<string>\",\n\t\t\t\t\"do2f\": \"<string>\",\n\t\t\t\t\"ullamcoe\": \"<string>\",\n\t\t\t\t\"do_6c\": \"<string>\",\n\t\t\t\t\"cillum_ad\": \"<string>\",\n\t\t\t\t\"veniam8_f\": \"<string>\",\n\t\t\t\t\"aute135\": \"<string>\",\n\t\t\t\t\"cupidatatcb9\": \"<string>\",\n\t\t\t\t\"cillum_9da\": \"<string>\",\n\t\t\t\t\"ut3\": \"<string>\",\n\t\t\t\t\"idca9\": \"<string>\",\n\t\t\t\t\"commodobae\": \"<string>\",\n\t\t\t\t\"magna_d89\": \"<string>\",\n\t\t\t\t\"ut79\": \"<string>\",\n\t\t\t\t\"velit_f\": \"<string>\",\n\t\t\t\t\"anim_c26\": \"<string>\",\n\t\t\t\t\"ullamco_93\": \"<string>\",\n\t\t\t\t\"velit_4_6\": \"<string>\",\n\t\t\t\t\"magna__\": \"<string>\",\n\t\t\t\t\"Lorem_94_\": \"<string>\",\n\t\t\t\t\"velit_b24\": \"<string>\",\n\t\t\t\t\"ipsum5_2\": \"<string>\",\n\t\t\t\t\"Duis_4c0\": \"<string>\",\n\t\t\t\t\"doloree\": \"<string>\",\n\t\t\t\t\"laboris_e6\": \"<string>\",\n\t\t\t\t\"deserunt_0a\": \"<string>\",\n\t\t\t\t\"minimb7\": \"<string>\",\n\t\t\t\t\"nullacf\": \"<string>\",\n\t\t\t\t\"sit_00\": \"<string>\",\n\t\t\t\t\"Excepteur_3\": \"<string>\",\n\t\t\t\t\"id_5\": \"<string>\",\n\t\t\t\t\"in_f81\": \"<string>\",\n\t\t\t\t\"reprehenderit_5d\": \"<string>\",\n\t\t\t\t\"pariatur_a\": \"<string>\",\n\t\t\t\t\"veniam1\": \"<string>\",\n\t\t\t\t\"pariatur_96\": \"<string>\",\n\t\t\t\t\"id__\": \"<string>\",\n\t\t\t\t\"elit_4e\": \"<string>\",\n\t\t\t\t\"nisi7\": \"<string>\",\n\t\t\t\t\"cillum2\": \"<string>\",\n\t\t\t\t\"ut09_\": \"<string>\",\n\t\t\t\t\"in280\": \"<string>\",\n\t\t\t\t\"Duis_f\": \"<string>\",\n\t\t\t\t\"eiusmodcf\": \"<string>\",\n\t\t\t\t\"labore_1\": \"<string>\",\n\t\t\t\t\"ut1\": \"<string>\",\n\t\t\t\t\"nostrud_\": \"<string>\",\n\t\t\t\t\"dolor7a8\": \"<string>\",\n\t\t\t\t\"officia2\": \"<string>\",\n\t\t\t\t\"reprehenderit1f\": \"<string>\",\n\t\t\t\t\"deserunt4b\": \"<string>\",\n\t\t\t\t\"voluptate_e\": \"<string>\",\n\t\t\t\t\"nisi_0a\": \"<string>\",\n\t\t\t\t\"dolore2c\": \"<string>\",\n\t\t\t\t\"consequat_9\": \"<string>\",\n\t\t\t\t\"ut266\": \"<string>\",\n\t\t\t\t\"sede4\": \"<string>\",\n\t\t\t\t\"et3\": \"<string>\",\n\t\t\t\t\"dolore\": \"<string>\",\n\t\t\t\t\"cupidatatb3d\": \"<string>\",\n\t\t\t\t\"in2f5\": \"<string>\",\n\t\t\t\t\"suntb4\": \"<string>\",\n\t\t\t\t\"ut7b\": \"<string>\",\n\t\t\t\t\"adipisicingf38\": \"<string>\",\n\t\t\t\t\"eu_8f\": \"<string>\",\n\t\t\t\t\"ad_261\": \"<string>\",\n\t\t\t\t\"nulla_46\": \"<string>\",\n\t\t\t\t\"uta68\": \"<string>\",\n\t\t\t\t\"sed5dc\": \"<string>\",\n\t\t\t\t\"adipisicing0b9\": \"<string>\",\n\t\t\t\t\"elit_e\": \"<string>\",\n\t\t\t\t\"occaecat09\": \"<string>\",\n\t\t\t\t\"laboruma\": \"<string>\",\n\t\t\t\t\"esse7\": \"<string>\",\n\t\t\t\t\"adipisicing6\": \"<string>\",\n\t\t\t\t\"do_7e1\": \"<string>\",\n\t\t\t\t\"sed_55\": \"<string>\",\n\t\t\t\t\"eta\": \"<string>\",\n\t\t\t\t\"qui035\": \"<string>\",\n\t\t\t\t\"aliqua4a\": \"<string>\",\n\t\t\t\t\"tempor1\": \"<string>\",\n\t\t\t\t\"do_d\": \"<string>\",\n\t\t\t\t\"id_9\": \"<string>\",\n\t\t\t\t\"ullamco_c\": \"<string>\",\n\t\t\t\t\"ullamco_d\": \"<string>\",\n\t\t\t\t\"nisi24f\": \"<string>\",\n\t\t\t\t\"consectetur92\": \"<string>\",\n\t\t\t\t\"voluptated83\": \"<string>\",\n\t\t\t\t\"in28\": \"<string>\",\n\t\t\t\t\"officia1e\": \"<string>\",\n\t\t\t\t\"et6c3\": \"<string>\",\n\t\t\t\t\"Ut5c\": \"<string>\",\n\t\t\t\t\"occaecat_3b\": \"<string>\",\n\t\t\t\t\"aute_0\": \"<string>\",\n\t\t\t\t\"ut19_\": \"<string>\",\n\t\t\t\t\"Excepteur0_a\": \"<string>\",\n\t\t\t\t\"Loremf4\": \"<string>\",\n\t\t\t\t\"incididunt56\": \"<string>\",\n\t\t\t\t\"amet_9b\": \"<string>\",\n\t\t\t\t\"in_0\": \"<string>\",\n\t\t\t\t\"non82\": \"<string>\",\n\t\t\t\t\"occaecat_3ea\": \"<string>\",\n\t\t\t\t\"nisi9b\": \"<string>\",\n\t\t\t\t\"minim_66b\": \"<string>\",\n\t\t\t\t\"enim_5f2\": \"<string>\",\n\t\t\t\t\"veniam_3\": \"<string>\",\n\t\t\t\t\"irureb9\": \"<string>\",\n\t\t\t\t\"adipisicing6f7\": \"<string>\",\n\t\t\t\t\"tempor0f\": \"<string>\",\n\t\t\t\t\"ipsum_7\": \"<string>\",\n\t\t\t\t\"incididunt_03\": \"<string>\",\n\t\t\t\t\"elit_9_\": \"<string>\",\n\t\t\t\t\"nostrud__2\": \"<string>\",\n\t\t\t\t\"euf3\": \"<string>\",\n\t\t\t\t\"nostrud_9\": \"<string>\",\n\t\t\t\t\"enimde\": \"<string>\",\n\t\t\t\t\"nisi8\": \"<string>\",\n\t\t\t\t\"adipisicing_0\": \"<string>\",\n\t\t\t\t\"sedd9_\": \"<string>\",\n\t\t\t\t\"labore_521\": \"<string>\",\n\t\t\t\t\"quis4_3\": \"<string>\",\n\t\t\t\t\"ad__8\": \"<string>\",\n\t\t\t\t\"sed_a13\": \"<string>\",\n\t\t\t\t\"enimb1_\": \"<string>\",\n\t\t\t\t\"proident60d\": \"<string>\",\n\t\t\t\t\"sunt_2\": \"<string>\",\n\t\t\t\t\"laborume46\": \"<string>\",\n\t\t\t\t\"exercitationb0\": \"<string>\",\n\t\t\t\t\"sunt68\": \"<string>\",\n\t\t\t\t\"in_f\": \"<string>\",\n\t\t\t\t\"sed_11b\": \"<string>\",\n\t\t\t\t\"minim_ac_\": \"<string>\",\n\t\t\t\t\"pariatur_05\": \"<string>\",\n\t\t\t\t\"Excepteur_04e\": \"<string>\",\n\t\t\t\t\"dolorea\": \"<string>\",\n\t\t\t\t\"fugiat_c5\": \"<string>\",\n\t\t\t\t\"in_8b\": \"<string>\",\n\t\t\t\t\"dolore3\": \"<string>\",\n\t\t\t\t\"et59\": \"<string>\",\n\t\t\t\t\"occaecat47\": \"<string>\",\n\t\t\t\t\"nostrudd2\": \"<string>\",\n\t\t\t\t\"deserunt_46\": \"<string>\",\n\t\t\t\t\"sunt_f\": \"<string>\",\n\t\t\t\t\"non_66\": \"<string>\",\n\t\t\t\t\"veniam4e\": \"<string>\",\n\t\t\t\t\"nulla1\": \"<string>\",\n\t\t\t\t\"nisi_f_\": \"<string>\",\n\t\t\t\t\"esse_7\": \"<string>\",\n\t\t\t\t\"officia_0bc\": \"<string>\",\n\t\t\t\t\"nostrud_50\": \"<string>\",\n\t\t\t\t\"velit_607\": \"<string>\",\n\t\t\t\t\"sunt_c\": \"<string>\",\n\t\t\t\t\"dolore9\": \"<string>\",\n\t\t\t\t\"reprehenderit5f\": \"<string>\",\n\t\t\t\t\"dolor6\": \"<string>\",\n\t\t\t\t\"proident9\": \"<string>\",\n\t\t\t\t\"quis3\": \"<string>\",\n\t\t\t\t\"sunt_2d\": \"<string>\",\n\t\t\t\t\"id_31e\": \"<string>\",\n\t\t\t\t\"tempor3\": \"<string>\",\n\t\t\t\t\"deserunt4\": \"<string>\",\n\t\t\t\t\"minimd\": \"<string>\",\n\t\t\t\t\"idfe8\": \"<string>\",\n\t\t\t\t\"in_0_\": \"<string>\",\n\t\t\t\t\"sed_87\": \"<string>\",\n\t\t\t\t\"occaecat__e1\": \"<string>\",\n\t\t\t\t\"ea11f\": \"<string>\",\n\t\t\t\t\"commodo_f74\": \"<string>\",\n\t\t\t\t\"Excepteur_4\": \"<string>\",\n\t\t\t\t\"ex8e\": \"<string>\",\n\t\t\t\t\"quisd3b\": \"<string>\",\n\t\t\t\t\"culpa2\": \"<string>\",\n\t\t\t\t\"officia_3e\": \"<string>\",\n\t\t\t\t\"ipsumda\": \"<string>\",\n\t\t\t\t\"sed_b\": \"<string>\",\n\t\t\t\t\"dolore__\": \"<string>\",\n\t\t\t\t\"dolore8c\": \"<string>\",\n\t\t\t\t\"reprehenderite\": \"<string>\",\n\t\t\t\t\"sit_7\": \"<string>\",\n\t\t\t\t\"dolore_a\": \"<string>\",\n\t\t\t\t\"ut_5f\": \"<string>\",\n\t\t\t\t\"cillum94\": \"<string>\",\n\t\t\t\t\"pariatur03_\": \"<string>\",\n\t\t\t\t\"nulla79\": \"<string>\",\n\t\t\t\t\"dolor4b3\": \"<string>\",\n\t\t\t\t\"eiusmod__35\": \"<string>\",\n\t\t\t\t\"pariatur6\": \"<string>\",\n\t\t\t\t\"voluptatebf3\": \"<string>\",\n\t\t\t\t\"in_c\": \"<string>\",\n\t\t\t\t\"reprehenderit_0e\": \"<string>\",\n\t\t\t\t\"adipisicingc\": \"<string>\",\n\t\t\t\t\"aute615\": \"<string>\",\n\t\t\t\t\"eiusmod8\": \"<string>\",\n\t\t\t\t\"velit5\": \"<string>\",\n\t\t\t\t\"ad_5e\": \"<string>\",\n\t\t\t\t\"ut_338\": \"<string>\",\n\t\t\t\t\"magna_7e\": \"<string>\",\n\t\t\t\t\"non9\": \"<string>\",\n\t\t\t\t\"cillum_7\": \"<string>\",\n\t\t\t\t\"adipisicing2\": \"<string>\",\n\t\t\t\t\"quisa\": \"<string>\",\n\t\t\t\t\"ute31\": \"<string>\",\n\t\t\t\t\"sint61\": \"<string>\",\n\t\t\t\t\"nulla__de\": \"<string>\",\n\t\t\t\t\"sint_f__\": \"<string>\",\n\t\t\t\t\"voluptate_410\": \"<string>\",\n\t\t\t\t\"id_\": \"<string>\",\n\t\t\t\t\"exercitation_0\": \"<string>\",\n\t\t\t\t\"sedeb\": \"<string>\",\n\t\t\t\t\"animd_0\": \"<string>\",\n\t\t\t\t\"dolor568\": \"<string>\",\n\t\t\t\t\"Lorem_d5\": \"<string>\",\n\t\t\t\t\"voluptate_c1\": \"<string>\",\n\t\t\t\t\"culpa7e\": \"<string>\",\n\t\t\t\t\"in0e\": \"<string>\",\n\t\t\t\t\"labore4\": \"<string>\",\n\t\t\t\t\"occaecat3a9\": \"<string>\",\n\t\t\t\t\"enim_fe1\": \"<string>\",\n\t\t\t\t\"cupidatatb\": \"<string>\",\n\t\t\t\t\"id_f\": \"<string>\",\n\t\t\t\t\"exercitationa\": \"<string>\",\n\t\t\t\t\"dolordb\": \"<string>\",\n\t\t\t\t\"consequatb5\": \"<string>\",\n\t\t\t\t\"consectetur_e3a\": \"<string>\",\n\t\t\t\t\"fugiat2a\": \"<string>\",\n\t\t\t\t\"deserunt__\": \"<string>\",\n\t\t\t\t\"in6_\": \"<string>\",\n\t\t\t\t\"Ut_54\": \"<string>\",\n\t\t\t\t\"pariatur94\": \"<string>\",\n\t\t\t\t\"ut_fc9\": \"<string>\",\n\t\t\t\t\"quise_\": \"<string>\",\n\t\t\t\t\"id_62\": \"<string>\",\n\t\t\t\t\"veniam_49\": \"<string>\",\n\t\t\t\t\"adipisicing__\": \"<string>\",\n\t\t\t\t\"doloref\": \"<string>\",\n\t\t\t\t\"laborum_78e\": \"<string>\",\n\t\t\t\t\"Excepteur_713\": \"<string>\",\n\t\t\t\t\"eu_b26\": \"<string>\",\n\t\t\t\t\"qui_a\": \"<string>\",\n\t\t\t\t\"Excepteur5_\": \"<string>\",\n\t\t\t\t\"esse_d\": \"<string>\",\n\t\t\t\t\"eu__\": \"<string>\",\n\t\t\t\t\"commodo_d\": \"<string>\",\n\t\t\t\t\"velitd31\": \"<string>\",\n\t\t\t\t\"aute9fa\": \"<string>\",\n\t\t\t\t\"dolor_7\": \"<string>\",\n\t\t\t\t\"velit_a9\": \"<string>\",\n\t\t\t\t\"consequatd\": \"<string>\",\n\t\t\t\t\"laborum_3\": \"<string>\",\n\t\t\t\t\"labore_3fe\": \"<string>\",\n\t\t\t\t\"occaecat7\": \"<string>\",\n\t\t\t\t\"id_e_9\": \"<string>\",\n\t\t\t\t\"non_346\": \"<string>\",\n\t\t\t\t\"et_9\": \"<string>\",\n\t\t\t\t\"Ut_81f\": \"<string>\",\n\t\t\t\t\"eu_c55\": \"<string>\",\n\t\t\t\t\"et1d3\": \"<string>\",\n\t\t\t\t\"ullamcoe70\": \"<string>\",\n\t\t\t\t\"dolord4\": \"<string>\",\n\t\t\t\t\"irure46\": \"<string>\",\n\t\t\t\t\"autead3\": \"<string>\",\n\t\t\t\t\"velit_9e\": \"<string>\",\n\t\t\t\t\"est_5\": \"<string>\",\n\t\t\t\t\"sunt_8\": \"<string>\",\n\t\t\t\t\"adipisicing_54\": \"<string>\",\n\t\t\t\t\"occaecat23\": \"<string>\",\n\t\t\t\t\"laborisc\": \"<string>\",\n\t\t\t\t\"magnaf72\": \"<string>\",\n\t\t\t\t\"commodo_a\": \"<string>\",\n\t\t\t\t\"Ut_9de\": \"<string>\",\n\t\t\t\t\"id96\": \"<string>\",\n\t\t\t\t\"et1\": \"<string>\",\n\t\t\t\t\"adipisicingb\": \"<string>\",\n\t\t\t\t\"velitd\": \"<string>\",\n\t\t\t\t\"officia_1_\": \"<string>\",\n\t\t\t\t\"Lorem1b\": \"<string>\",\n\t\t\t\t\"officia_d\": \"<string>\",\n\t\t\t\t\"ipsum_e\": \"<string>\",\n\t\t\t\t\"uta\": \"<string>\",\n\t\t\t\t\"ut_2d\": \"<string>\",\n\t\t\t\t\"pariatur_1c6\": \"<string>\",\n\t\t\t\t\"Ut_48\": \"<string>\",\n\t\t\t\t\"cupidatat__7\": \"<string>\",\n\t\t\t\t\"ullamco5a\": \"<string>\",\n\t\t\t\t\"esse__\": \"<string>\",\n\t\t\t\t\"cupidatat3c1\": \"<string>\",\n\t\t\t\t\"Lorem_247\": \"<string>\",\n\t\t\t\t\"ipsum4\": \"<string>\",\n\t\t\t\t\"pariatur_df\": \"<string>\",\n\t\t\t\t\"id1\": \"<string>\",\n\t\t\t\t\"aliqua_9\": \"<string>\",\n\t\t\t\t\"cupidatat5\": \"<string>\",\n\t\t\t\t\"enim7\": \"<string>\",\n\t\t\t\t\"cupidatatea0\": \"<string>\",\n\t\t\t\t\"doe_\": \"<string>\",\n\t\t\t\t\"sunt150\": \"<string>\",\n\t\t\t\t\"Ut0e8\": \"<string>\",\n\t\t\t\t\"suntc1\": \"<string>\",\n\t\t\t\t\"Excepteurad\": \"<string>\",\n\t\t\t\t\"in_9\": \"<string>\",\n\t\t\t\t\"aliqua_f17\": \"<string>\",\n\t\t\t\t\"cillum_f4e\": \"<string>\",\n\t\t\t\t\"Duisae\": \"<string>\",\n\t\t\t\t\"consequat_7\": \"<string>\",\n\t\t\t\t\"pariatur9d0\": \"<string>\",\n\t\t\t\t\"eiusmoda8f\": \"<string>\",\n\t\t\t\t\"ut_4\": \"<string>\",\n\t\t\t\t\"voluptate3b\": \"<string>\",\n\t\t\t\t\"dolore_a_\": \"<string>\",\n\t\t\t\t\"labore36d\": \"<string>\",\n\t\t\t\t\"utd\": \"<string>\",\n\t\t\t\t\"eiusmodb\": \"<string>\",\n\t\t\t\t\"id_8d\": \"<string>\",\n\t\t\t\t\"laboris_b\": \"<string>\",\n\t\t\t\t\"do___\": \"<string>\",\n\t\t\t\t\"pariatur_06_\": \"<string>\",\n\t\t\t\t\"Duis_97\": \"<string>\",\n\t\t\t\t\"in_c4e\": \"<string>\",\n\t\t\t\t\"ad4c3\": \"<string>\",\n\t\t\t\t\"occaecat_a\": \"<string>\",\n\t\t\t\t\"sint_4f\": \"<string>\",\n\t\t\t\t\"sint__d2\": \"<string>\",\n\t\t\t\t\"irure9_\": \"<string>\",\n\t\t\t\t\"cillum4\": \"<string>\",\n\t\t\t\t\"ut_19\": \"<string>\",\n\t\t\t\t\"Duisc6\": \"<string>\",\n\t\t\t\t\"ad_e83\": \"<string>\",\n\t\t\t\t\"fugiat__8\": \"<string>\",\n\t\t\t\t\"Excepteura\": \"<string>\",\n\t\t\t\t\"cillum_a\": \"<string>\",\n\t\t\t\t\"sint_9\": \"<string>\",\n\t\t\t\t\"officia_6\": \"<string>\",\n\t\t\t\t\"aute9_\": \"<string>\",\n\t\t\t\t\"enim_69c\": \"<string>\",\n\t\t\t\t\"sed_ab1\": \"<string>\",\n\t\t\t\t\"adipisicing9\": \"<string>\",\n\t\t\t\t\"aliqua_e5_\": \"<string>\",\n\t\t\t\t\"dolore8\": \"<string>\",\n\t\t\t\t\"anim1f4\": \"<string>\",\n\t\t\t\t\"eiusmod_c\": \"<string>\",\n\t\t\t\t\"este6d\": \"<string>\",\n\t\t\t\t\"nulla__a5\": \"<string>\",\n\t\t\t\t\"laborumc\": \"<string>\",\n\t\t\t\t\"magna_8b\": \"<string>\",\n\t\t\t\t\"labore__\": \"<string>\",\n\t\t\t\t\"pariatur__d\": \"<string>\",\n\t\t\t\t\"ad_0\": \"<string>\",\n\t\t\t\t\"sinte2\": \"<string>\",\n\t\t\t\t\"pariatur4\": \"<string>\",\n\t\t\t\t\"commodo8\": \"<string>\",\n\t\t\t\t\"ut4\": \"<string>\",\n\t\t\t\t\"minim_f8b\": \"<string>\",\n\t\t\t\t\"Excepteur__0_\": \"<string>\",\n\t\t\t\t\"in_f3\": \"<string>\",\n\t\t\t\t\"Excepteurc\": \"<string>\",\n\t\t\t\t\"ut__3\": \"<string>\",\n\t\t\t\t\"incididunt_5\": \"<string>\",\n\t\t\t\t\"fugiat2\": \"<string>\",\n\t\t\t\t\"est_eb\": \"<string>\"\n\t\t\t},\n\t\t\t\"forwardedRequestParameters\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t]\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve an Authentication Provider",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Authentication Provider ID"
                    }
                  ]
                },
                "description": "Retrieve an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_START\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Authentication Provider retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"redirectUrl\": \"<uri>\",\n\t\"url\": \"<uri>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"labore7b1\": \"<string>\",\n\t\t\"nostrude1\": \"<string>\",\n\t\t\"adipisicing_5c\": \"<string>\",\n\t\t\"adipisicing_1ed\": \"<string>\",\n\t\t\"eiusmodb\": \"<string>\",\n\t\t\"nostrudb4\": \"<string>\",\n\t\t\"in28\": \"<string>\",\n\t\t\"animdd\": \"<string>\",\n\t\t\"dolor_09a\": \"<string>\",\n\t\t\"eu_e1\": \"<string>\",\n\t\t\"consectetur483\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Authentication Provider not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update an Authentication Provider",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"non_0\": \"<string>\",\n\t\t\"Lorem_426\": \"<string>\",\n\t\t\"ullamco6\": \"<string>\",\n\t\t\"labore_ac\": \"<string>\",\n\t\t\"proident1_4\": \"<string>\",\n\t\t\"laborum9c\": \"<string>\",\n\t\t\"fugiatab\": \"<string>\",\n\t\t\"Excepteur_7\": \"<string>\",\n\t\t\"laborisc\": \"<string>\",\n\t\t\"sint_f59\": \"<string>\",\n\t\t\"culpa_7_\": \"<string>\",\n\t\t\"sunt_24\": \"<string>\",\n\t\t\"adipisicing97\": \"<string>\",\n\t\t\"commodo_503\": \"<string>\",\n\t\t\"eu_23b\": \"<string>\",\n\t\t\"elite0b\": \"<string>\",\n\t\t\"sed0f\": \"<string>\",\n\t\t\"et4\": \"<string>\",\n\t\t\"veniam_97\": \"<string>\",\n\t\t\"dolore_f2\": \"<string>\",\n\t\t\"sed3\": \"<string>\",\n\t\t\"magna94\": \"<string>\",\n\t\t\"aute_7\": \"<string>\",\n\t\t\"culpa_ee\": \"<string>\",\n\t\t\"sint_c0\": \"<string>\",\n\t\t\"cillumb\": \"<string>\",\n\t\t\"proident_e65\": \"<string>\",\n\t\t\"veniam__\": \"<string>\",\n\t\t\"Lorem_a\": \"<string>\",\n\t\t\"dolore14\": \"<string>\",\n\t\t\"Ut_8\": \"<string>\",\n\t\t\"reprehenderit7b\": \"<string>\",\n\t\t\"utd2e\": \"<string>\",\n\t\t\"do_b\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Authentication Provider ID"
                    }
                  ]
                },
                "description": "Updates an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_UPDATE_START\n* USER_AUTHENTICATION_PROVIDER_UPDATE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Authentication Provider updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"non_0\": \"<string>\",\n\t\t\"Lorem_426\": \"<string>\",\n\t\t\"ullamco6\": \"<string>\",\n\t\t\"labore_ac\": \"<string>\",\n\t\t\"proident1_4\": \"<string>\",\n\t\t\"laborum9c\": \"<string>\",\n\t\t\"fugiatab\": \"<string>\",\n\t\t\"Excepteur_7\": \"<string>\",\n\t\t\"laborisc\": \"<string>\",\n\t\t\"sint_f59\": \"<string>\",\n\t\t\"culpa_7_\": \"<string>\",\n\t\t\"sunt_24\": \"<string>\",\n\t\t\"adipisicing97\": \"<string>\",\n\t\t\"commodo_503\": \"<string>\",\n\t\t\"eu_23b\": \"<string>\",\n\t\t\"elite0b\": \"<string>\",\n\t\t\"sed0f\": \"<string>\",\n\t\t\"et4\": \"<string>\",\n\t\t\"veniam_97\": \"<string>\",\n\t\t\"dolore_f2\": \"<string>\",\n\t\t\"sed3\": \"<string>\",\n\t\t\"magna94\": \"<string>\",\n\t\t\"aute_7\": \"<string>\",\n\t\t\"culpa_ee\": \"<string>\",\n\t\t\"sint_c0\": \"<string>\",\n\t\t\"cillumb\": \"<string>\",\n\t\t\"proident_e65\": \"<string>\",\n\t\t\"veniam__\": \"<string>\",\n\t\t\"Lorem_a\": \"<string>\",\n\t\t\"dolore14\": \"<string>\",\n\t\t\"Ut_8\": \"<string>\",\n\t\t\"reprehenderit7b\": \"<string>\",\n\t\t\"utd2e\": \"<string>\",\n\t\t\"do_b\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"clientId\": \"<string>\",\n\t\"clientSecret\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"redirectUrl\": \"<uri>\",\n\t\"url\": \"<uri>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"labore7b1\": \"<string>\",\n\t\t\"nostrude1\": \"<string>\",\n\t\t\"adipisicing_5c\": \"<string>\",\n\t\t\"adipisicing_1ed\": \"<string>\",\n\t\t\"eiusmodb\": \"<string>\",\n\t\t\"nostrudb4\": \"<string>\",\n\t\t\"in28\": \"<string>\",\n\t\t\"animdd\": \"<string>\",\n\t\t\"dolor_09a\": \"<string>\",\n\t\t\"eu_e1\": \"<string>\",\n\t\t\"consectetur483\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"non_0\": \"<string>\",\n\t\t\"Lorem_426\": \"<string>\",\n\t\t\"ullamco6\": \"<string>\",\n\t\t\"labore_ac\": \"<string>\",\n\t\t\"proident1_4\": \"<string>\",\n\t\t\"laborum9c\": \"<string>\",\n\t\t\"fugiatab\": \"<string>\",\n\t\t\"Excepteur_7\": \"<string>\",\n\t\t\"laborisc\": \"<string>\",\n\t\t\"sint_f59\": \"<string>\",\n\t\t\"culpa_7_\": \"<string>\",\n\t\t\"sunt_24\": \"<string>\",\n\t\t\"adipisicing97\": \"<string>\",\n\t\t\"commodo_503\": \"<string>\",\n\t\t\"eu_23b\": \"<string>\",\n\t\t\"elite0b\": \"<string>\",\n\t\t\"sed0f\": \"<string>\",\n\t\t\"et4\": \"<string>\",\n\t\t\"veniam_97\": \"<string>\",\n\t\t\"dolore_f2\": \"<string>\",\n\t\t\"sed3\": \"<string>\",\n\t\t\"magna94\": \"<string>\",\n\t\t\"aute_7\": \"<string>\",\n\t\t\"culpa_ee\": \"<string>\",\n\t\t\"sint_c0\": \"<string>\",\n\t\t\"cillumb\": \"<string>\",\n\t\t\"proident_e65\": \"<string>\",\n\t\t\"veniam__\": \"<string>\",\n\t\t\"Lorem_a\": \"<string>\",\n\t\t\"dolore14\": \"<string>\",\n\t\t\"Ut_8\": \"<string>\",\n\t\t\"reprehenderit7b\": \"<string>\",\n\t\t\"utd2e\": \"<string>\",\n\t\t\"do_b\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Authentication Provider not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"clientId\": \"<string>\",\n\t\"scope\": [\n\t\t\"openid\",\n\t\t\"profile\",\n\t\t\"email\"\n\t],\n\t\"clientSecret\": \"<string>\",\n\t\"tokenEndpointAuthMethod\": \"client_secret_basic\",\n\t\"staticRequestParameters\": {\n\t\t\"non_0\": \"<string>\",\n\t\t\"Lorem_426\": \"<string>\",\n\t\t\"ullamco6\": \"<string>\",\n\t\t\"labore_ac\": \"<string>\",\n\t\t\"proident1_4\": \"<string>\",\n\t\t\"laborum9c\": \"<string>\",\n\t\t\"fugiatab\": \"<string>\",\n\t\t\"Excepteur_7\": \"<string>\",\n\t\t\"laborisc\": \"<string>\",\n\t\t\"sint_f59\": \"<string>\",\n\t\t\"culpa_7_\": \"<string>\",\n\t\t\"sunt_24\": \"<string>\",\n\t\t\"adipisicing97\": \"<string>\",\n\t\t\"commodo_503\": \"<string>\",\n\t\t\"eu_23b\": \"<string>\",\n\t\t\"elite0b\": \"<string>\",\n\t\t\"sed0f\": \"<string>\",\n\t\t\"et4\": \"<string>\",\n\t\t\"veniam_97\": \"<string>\",\n\t\t\"dolore_f2\": \"<string>\",\n\t\t\"sed3\": \"<string>\",\n\t\t\"magna94\": \"<string>\",\n\t\t\"aute_7\": \"<string>\",\n\t\t\"culpa_ee\": \"<string>\",\n\t\t\"sint_c0\": \"<string>\",\n\t\t\"cillumb\": \"<string>\",\n\t\t\"proident_e65\": \"<string>\",\n\t\t\"veniam__\": \"<string>\",\n\t\t\"Lorem_a\": \"<string>\",\n\t\t\"dolore14\": \"<string>\",\n\t\t\"Ut_8\": \"<string>\",\n\t\t\"reprehenderit7b\": \"<string>\",\n\t\t\"utd2e\": \"<string>\",\n\t\t\"do_b\": \"<string>\"\n\t},\n\t\"forwardedRequestParameters\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete an Authentication Provider",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Authentication Provider ID"
                    }
                  ]
                },
                "description": "Deletes an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_DELETE_START\n* USER_AUTHENTICATION_PROVIDER_DELETE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Authentication Provider deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Authentication Provider not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authenticationproviders/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "authenticationproviders", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Interaction Hook",
          "item": [
            {
              "name": "Configure Interaction Hook",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true\n\t}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/configuration",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "configuration"]
                },
                "description": "Configure the Interaction Hook for the OpenID4VCI protocol on your tenant.\nMany credential issuance journeys require the issuer to perform custom interactions with the user. This could be gathering more information, performing additional authentication steps (E.g, 2FA, MFA or biometric checks) or communicating the terms of service. To facilitate this requirement, you can configure MATTR VII to invoke an interaction hook which will redirect the user to a custom component during the credential issuance journey. This redirect happens **after** the user is authenticated with your configured identity provider but **before** the credential is issued to the user. Upon successful completion of the interaction hook, your custom component will redirect the user back to their digital wallet to complete the credential issuance flow. Your interaction hook component can be either a web or native application.  We recommend using a web interface because it's more compatible with most scenarios.\n> You can only configure one interaction hook on your MATTR VII tenant. If you require several custom interactions as part of the credential issuance workflow, they should all be linked into a single interaction hook component.\n\n### **Analytic events**\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_START\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Interaction Hook configured",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "configuration"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true,\n\t\t\"secret\": \"<string>\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "configuration"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Interaction Hook",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/configuration",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "configuration"]
                },
                "description": "Retrieves the Interaction Hook configuration from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Interaction Hook configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "configuration"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"interactionHook\": {\n\t\t\"url\": \"<uri>\",\n\t\t\"sessionTimeoutInSec\": \"<number>\",\n\t\t\"disabled\": true,\n\t\t\"secret\": \"<string>\"\n\t}\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Claims Source",
          "item": [
            {
              "name": "Configure a claims source",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claimsources",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claimsources"]
                },
                "description": "Configures a new claims source for your tenant. When issuing a new credential, MATTR VII will make either a GET or a POST request to the claims source using the configured request parameters and fetch available data. This fetched data can then be included in the issued credential.\n\n### **Analytic event**\n* CLAIM_SOURCE_CREATE_START\n* CLAIM_SOURCE_CREATE_SUCCESS\n* CLAIM_SOURCE_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source configured",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"requestMethod\": \"POST\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all claims sources",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claimsources",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claimsources"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned entries, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of entries",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of all claims sources configured on your tenant.\n\n### **Analytic event**\n* CLAIM_SOURCE_RETRIEVE_LIST_START\n* CLAIM_SOURCE_RETRIEVE_LIST_SUCCESS\n* CLAIM_SOURCE_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims sources retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"authorization\": {\n\t\t\t\t\"type\": \"api-key\",\n\t\t\t\t\"value\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"requestParameters\": {\n\t\t\t\t\"mapFrom\": \"<string>\"\n\t\t\t},\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"requestMethod\": \"GET\"\n\t\t},\n\t\t{\n\t\t\t\"authorization\": {\n\t\t\t\t\"type\": \"api-key\",\n\t\t\t\t\"value\": \"<string>\"\n\t\t\t},\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"requestParameters\": {\n\t\t\t\t\"mapFrom\": \"<string>\"\n\t\t\t},\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"requestMethod\": \"GET\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a claims source",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claimsources", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Claims source ID"
                    }
                  ]
                },
                "description": "Retrieves an existing claims source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_RETRIEVE_START\n* CLAIM_SOURCE_RETRIEVE_SUCCESS\n* CLAIM_SOURCE_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"requestMethod\": \"POST\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Claims source not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update a claims source",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claimsources", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Claims source ID"
                    }
                  ]
                },
                "description": "Updates an existing claim source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_UPDATE_START\n* CLAIM_SOURCE_UPDATE_SUCCESS\n* CLAIM_SOURCE_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"requestMethod\": \"POST\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Claims source not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"authorization\": {\n\t\t\"type\": \"api-key\",\n\t\t\"value\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"requestParameters\": {\n\t\t\"mapFrom\": \"<string>\"\n\t},\n\t\"url\": \"<string>\",\n\t\"requestMethod\": \"POST\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete a claims source",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claimsources", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Claims source ID"
                    }
                  ]
                },
                "description": "Deletes an existing claims source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_DELETE_START\n* CLAIM_SOURCE_DELETE_SUCCESS\n* CLAIM_SOURCE_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Claims source not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claimsources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claimsources", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Credential configuration",
          "item": [
            {
              "name": "Compact Credentials Configuration",
              "item": [
                {
                  "name": "Create a Compact Credential configuration",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_9\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmodd0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"exercitation_666\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"velit1d7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "configurations"]
                    },
                    "description": "Creates a new Compact Credential configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Compact Credential configuration created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_9\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmodd0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"exercitation_666\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"velit1d7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations"]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"claimMappings\": {\n\t\t\"dolor728\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmod_0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ipsum5\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ad74d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"<string>\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_9\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmodd0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"exercitation_666\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"velit1d7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations"]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Compact Credential configurations",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "configurations"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The optional credential type to filter on",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "Returns a list of all Comapct Credential configurations from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Compact Credential configurations retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "<number>",
                              "description": "Range size of returned entries, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the range of entries",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "The optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"inbec\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"tempor_5ca\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"dolorb\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "<number>",
                              "description": "Range size of returned entries, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the range of entries",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "The optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a Compact Credential configuration",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Compact Credential configuration."
                        }
                      ]
                    },
                    "description": "Returns a Compact Credential Configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Compact Credential configuration retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"claimMappings\": {\n\t\t\"dolor728\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmod_0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ipsum5\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ad74d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"<string>\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Compact Credential configuration not found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a Compact Credential configuration",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_9\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmodd0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"exercitation_666\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"velit1d7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Compact Credential configuration."
                        }
                      ]
                    },
                    "description": "Updates an existing Compact Credential configuration by providing its ID.\n        \n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Compact Credential configuration updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_9\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmodd0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"exercitation_666\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"velit1d7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"claimMappings\": {\n\t\t\"dolor728\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmod_0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ipsum5\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ad74d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"<string>\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_9\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmodd0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"exercitation_666\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"velit1d7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Compact Credential configuration not found",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"culpa_9\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eiusmodd0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"exercitation_666\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"velit1d7\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"<string>\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a Compact Credential configuration",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Compact Credential configuration."
                        }
                      ]
                    },
                    "description": "Deletes an exising Compact Credential configuration by providing its ID.\n \n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Compact Credential configuration deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "The Credential Configuration is not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Compact Semantic Credentials Configuration",
              "item": [
                {
                  "name": "Create a Compact Semantic Credential Configuration",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claimMappings\": {\n\t\t\"in_1_\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"enim15a\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eu_8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"irure qui\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "configurations"]
                    },
                    "description": "Creates a new Compact Semantic Credential configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Credential configuration created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"in_1_\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"enim15a\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eu_8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"irure qui\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations"]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"claimMappings\": {\n\t\t\"in33\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ipsumf\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"enim commodo\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"in_1_\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"enim15a\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eu_8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"irure qui\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations"]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Compact Semantic Credential configurations",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "configurations"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The optional credential type to filter on",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "Returns a list of all Comapct Semantic Credential configurations from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Compact Semantic Credential configurations retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "<number>",
                              "description": "Range size of returned entries, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the range of entries",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "The optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"in_5bd\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"amet57e\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"et_d\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"sint amet velit est\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"consequat_3_\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"eu_2c\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"fugiat_09\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"mollit_0\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"revocable\": true,\n\t\t\t\"type\": \"commodo proident sed\",\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "<number>",
                              "description": "Range size of returned entries, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the range of entries",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "The optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a Compact Semantic Credential Configuration",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Compact Semantic Credential configuration."
                        }
                      ]
                    },
                    "description": "Returns a Compact Semantic Credential Configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Compact Semantic Credential configuration retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"claimMappings\": {\n\t\t\"in33\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ipsumf\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"enim commodo\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "The Credential Configuration is not found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a Compact Semantic Credential configuration",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claimMappings\": {\n\t\t\"in_1_\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"enim15a\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eu_8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"irure qui\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Compact Semantic Credential configuration."
                        }
                      ]
                    },
                    "description": "Updates an existing Compact Semantic Credential configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Compact Semantic Credential configuration updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"in_1_\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"enim15a\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eu_8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"irure qui\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"claimMappings\": {\n\t\t\"in33\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"ipsumf\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"id\": \"<uuid>\",\n\t\"revocable\": true,\n\t\"type\": \"enim commodo\",\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"in_1_\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"enim15a\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eu_8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"irure qui\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "The Credential Configuration is not found",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"claimMappings\": {\n\t\t\"in_1_\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"enim15a\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"eu_8\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"type\": \"irure qui\",\n\t\"revocable\": true,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a Compact Semantic Credential configuration",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Compact Semantic Credential configuration."
                        }
                      ]
                    },
                    "description": "Deletes an exising Compact Semantic Credential configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Compact Semantic Credential configuration deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "The Credential Configuration is not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "compact-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Web Credentials Configuration",
              "item": [
                {
                  "name": "Create a Web Credential configuration",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"exercitationf0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"amet_0d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v2", "credentials", "web-semantic", "configurations"]
                    },
                    "description": "Creates a new Web Credential configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Web Credential configuration created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"exercitationf0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"amet_0d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations"]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"minim30d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"Lorem_54\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"laboris_ace\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"exercitationf0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"amet_0d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations"]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Web Credential configurations",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v2", "credentials", "web-semantic", "configurations"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "The optional credential type to filter on",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "Returns a list of all Web Credential Configurations on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Web Credential configurations retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "<number>",
                              "description": "Range size of returned entries, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the range of entries",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "The optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"issuer\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"persist\": false,\n\t\t\t\"revocable\": true,\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"additionalTypes\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"contexts\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"proofType\": \"Ed25519Signature2018\",\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"commodo_4_e\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"includeId\": false,\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"issuer\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"persist\": false,\n\t\t\t\"revocable\": true,\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"additionalTypes\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"contexts\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"proofType\": \"Ed25519Signature2018\",\n\t\t\t\"credentialBranding\": {\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"adipisicinge1d\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"veniam73\": {\n\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"includeId\": false,\n\t\t\t\"claimSourceId\": \"<uuid>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "<number>",
                              "description": "Range size of returned entries, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the range of entries",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "The optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a Web Credential configuration",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Web Credential configuration unique identifier"
                        }
                      ]
                    },
                    "description": "Retrieve a Web Credential configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Web Credential configuration retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"minim30d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"Lorem_54\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"laboris_ace\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "The Credential Configuration is not found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a Web Credential configuration",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"exercitationf0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"amet_0d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Web Credential configuration unique identifier"
                        }
                      ]
                    },
                    "description": "Updates an existing Web Credential configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Web Credential configuration updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"exercitationf0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"amet_0d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"id\": \"<uuid>\",\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"BbsSignature2022\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"minim30d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"Lorem_54\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"laboris_ace\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"exercitationf0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"amet_0d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "The Credential Configuration is not found",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"name\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"issuer\": {\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"description\": \"<string>\",\n\t\"additionalTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"contexts\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"proofType\": \"Ed25519Signature2018\",\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"exercitationf0\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t},\n\t\t\"amet_0d\": {\n\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\"required\": \"<boolean>\",\n\t\t\t\"defaultValue\": \"<string>\"\n\t\t}\n\t},\n\t\"persist\": false,\n\t\"revocable\": true,\n\t\"includeId\": false,\n\t\"claimSourceId\": \"<uuid>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a Web Credential configuration",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Web Credential configuration unique identifier"
                        }
                      ]
                    },
                    "description": "Deletes an existing Web Credential configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Web Credential configuration deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "The Credential Configuration is not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["core", "v2", "credentials", "web-semantic", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Mobile Credential Configuration",
              "item": [
                {
                  "name": "Create a Mobile Credential configuration",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations"]
                    },
                    "description": "Creates a new Mobile Credential configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Mobile Credential configuration created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations"]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"id\": \"<uuid>\",\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t},\n\t\"claimSourceId\": \"<uuid>\"\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations"]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Mobile Credential configurations",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "Optional credential type to filter on",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "Retrieves all Mobile Credential Configurations from your tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Mobile Credential configurations retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "Optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\t\"type\": \"binary\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimSourceId\": \"<uuid>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"expiresIn\": {\n\t\t\t\t\"years\": \"<number>\",\n\t\t\t\t\"months\": \"<number>\",\n\t\t\t\t\"weeks\": \"<number>\",\n\t\t\t\t\"days\": \"<number>\",\n\t\t\t\t\"hours\": \"<number>\",\n\t\t\t\t\"minutes\": \"<number>\",\n\t\t\t\t\"seconds\": \"<number>\"\n\t\t\t},\n\t\t\t\"claimMappings\": {\n\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\"additionalProperties\": {\n\t\t\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\t\t\"type\": \"number\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"branding\": {\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\",\n\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\"watermarkImage\": \"<string>\",\n\t\t\t\t\"issuerLogo\": \"<string>\",\n\t\t\t\t\"issuerIcon\": \"<string>\"\n\t\t\t},\n\t\t\t\"claimSourceId\": \"<uuid>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations"],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100",
                              "description": "Range size of the list, default 100",
                              "disabled": true
                            },
                            {
                              "key": "cursor",
                              "value": "<string>",
                              "description": "Starting point for the list",
                              "disabled": true
                            },
                            {
                              "key": "type",
                              "value": "<string>",
                              "description": "Optional credential type to filter on",
                              "disabled": true
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a Mobile Credential configuration",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Mobile Credential Configuration ID"
                        }
                      ]
                    },
                    "description": "Retrieves an existing Mobile Credential Configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Mobile Credential configuration retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"id\": \"<uuid>\",\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t},\n\t\"claimSourceId\": \"<uuid>\"\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Mobile Credential configuration Not Found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a Mobile Credential configuration",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Mobile Credential Configuration ID"
                        }
                      ]
                    },
                    "description": "Updates an existing Mobile Credential configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Mobile Credential configuration updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"id\": \"<uuid>\",\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t},\n\t\"claimSourceId\": \"<uuid>\"\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Mobile Credential configuration not Found",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"type\": \"<string>\",\n\t\"expiresIn\": {\n\t\t\"years\": \"<number>\",\n\t\t\"months\": \"<number>\",\n\t\t\"weeks\": \"<number>\",\n\t\t\"days\": \"<number>\",\n\t\t\"hours\": \"<number>\",\n\t\t\"minutes\": \"<number>\",\n\t\t\"seconds\": \"<number>\"\n\t},\n\t\"claimMappings\": {\n\t\t\"additionalProperties\": {\n\t\t\t\"additionalProperties\": {\n\t\t\t\t\"mapFrom\": \"<string>\",\n\t\t\t\t\"type\": \"array\",\n\t\t\t\t\"required\": false,\n\t\t\t\t\"defaultValue\": \"<string>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"claimSourceId\": \"<uuid>\",\n\t\"branding\": {\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\",\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImage\": \"<string>\",\n\t\t\"issuerLogo\": \"<string>\",\n\t\t\"issuerIcon\": \"<string>\"\n\t}\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a Mobile Credential configuration",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Mobile Credential Configuration ID"
                        }
                      ]
                    },
                    "description": "Deletes an existing Mobile Credential configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Mobile Credential configuration deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    },
                    {
                      "name": "Mobile Credential configuration not Found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "credentials", "mobile", "configurations", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Credential Issuance",
          "item": [
            {
              "name": "Request authorization for access to resources",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "oauth", "authorize"],
                  "query": [
                    {
                      "key": "response_type",
                      "value": "code",
                      "description": "(Required) The response type, which must be 'code'."
                    },
                    {
                      "key": "client_id",
                      "value": "<string>",
                      "description": "(Required) The client identifier."
                    },
                    {
                      "key": "redirect_uri",
                      "value": "<string>",
                      "description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
                    },
                    {
                      "key": "scope",
                      "value": "<string>",
                      "description": "(Required) The scope of the access request."
                    },
                    {
                      "key": "state",
                      "value": "<string>",
                      "description": "An opaque value used by the client to maintain state between the request and callback.",
                      "disabled": true
                    },
                    {
                      "key": "code_challenge_method",
                      "value": "S256",
                      "description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
                    },
                    {
                      "key": "code_challenge",
                      "value": "<string>",
                      "description": "(Required) A high entropy random challenge generated by the client."
                    }
                  ]
                },
                "description": "This endpoint is used to request authorization from the user for access to the requested resources. After the user approves the request, an authorization code is returned to the client.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-authorization-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-authorization-endpoint)\nSee [https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1)\n\n### **Analytic events**\n* OPENID_AUTHORIZE_START\n* OPENID_AUTHORIZE_SUCCESS\n* OPENID_AUTHORIZE_FAIL\n"
              },
              "response": [
                {
                  "name": "Redirection to client application with authorization code",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "code",
                          "description": "(Required) The response type, which must be 'code'."
                        },
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) The scope of the access request."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "An opaque value used by the client to maintain state between the request and callback.",
                          "disabled": true
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "S256",
                          "description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>",
                          "description": "(Required) A high entropy random challenge generated by the client."
                        }
                      ]
                    }
                  },
                  "status": "Found",
                  "code": 302,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Location",
                      "value": "<string>",
                      "description": {
                        "content": "URL to redirect to with the authorization code",
                        "type": "text/plain"
                      }
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "code",
                          "description": "(Required) The response type, which must be 'code'."
                        },
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) The scope of the access request."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "An opaque value used by the client to maintain state between the request and callback.",
                          "disabled": true
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "S256",
                          "description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>",
                          "description": "(Required) A high entropy random challenge generated by the client."
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unauthorized. The client is not authorized to access this resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "code",
                          "description": "(Required) The response type, which must be 'code'."
                        },
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) The scope of the access request."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "An opaque value used by the client to maintain state between the request and callback.",
                          "disabled": true
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "S256",
                          "description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>",
                          "description": "(Required) A high entropy random challenge generated by the client."
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden. The authorization server refuses to grant the client access to the resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "code",
                          "description": "(Required) The response type, which must be 'code'."
                        },
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) The scope of the access request."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "An opaque value used by the client to maintain state between the request and callback.",
                          "disabled": true
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "S256",
                          "description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>",
                          "description": "(Required) A high entropy random challenge generated by the client."
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal server error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=code&client_id=<string>&redirect_uri=<string>&scope=<string>&code_challenge_method=S256&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "code",
                          "description": "(Required) The response type, which must be 'code'."
                        },
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
                        },
                        {
                          "key": "scope",
                          "value": "<string>",
                          "description": "(Required) The scope of the access request."
                        },
                        {
                          "key": "state",
                          "value": "<string>",
                          "description": "An opaque value used by the client to maintain state between the request and callback.",
                          "disabled": true
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "S256",
                          "description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>",
                          "description": "(Required) A high entropy random challenge generated by the client."
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Exchange authorization code for access token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "client_id",
                      "value": "<string>",
                      "description": "(Required) The client identifier."
                    },
                    {
                      "key": "grant_type",
                      "value": "authorization_code",
                      "description": "(Required) The grant type, which must be 'authorization_code'."
                    },
                    {
                      "key": "redirect_uri",
                      "value": "<string>",
                      "description": "(Required) The redirect URI that was used in the authorization request."
                    },
                    {
                      "key": "code",
                      "value": "<string>",
                      "description": "(Required) The authorization code obtained from the authorization endpoint."
                    },
                    {
                      "key": "code_verifier",
                      "value": "<string>",
                      "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/oauth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "oauth", "token"]
                },
                "description": "This endpoint is used to exchange an authorization code for an access token. The authorization code is obtained from the authorization endpoint after the user has authenticated and granted access.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-token-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-token-endpoint)\n\n### **Analytic events**\n* OPENID_TOKEN_START\n* OPENID_TOKEN_SUCCESS\n* OPENID_TOKEN_FAIL\n"
              },
              "response": [
                {
                  "name": "Access token successfully returned.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "authorization_code",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"access_token\": \"<string>\",\n\t\"token_type\": \"Bearer\",\n\t\"expires_in\": \"<integer>\",\n\t\"scope\": \"<string>\"\n}"
                },
                {
                  "name": "Bad request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "authorization_code",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unauthorized. The client is not authorized to access this resource.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "authorization_code",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden. The authorization server refuses to grant the client access to the resource.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "authorization_code",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal server error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "authorization_code",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Issue a verifiable credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"format\": \"ldp_vc\",\n\t\"credential_definition\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t]\n\t},\n\t\"proof\": {\n\t\t\"proof_type\": \"jwt\",\n\t\t\"jwt\": \"<string>\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/credential",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "credential"]
                },
                "description": "Issues a verifiable credential to a subject as part of the OpenID4VCI protocol.\n\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-credential-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-credential-endpoint)\n\n### **Analytic events**\n* OPENID_CREDENTIAL_START\n* OPENID_CREDENTIAL_SUCCESS\n* OPENID_CREDENTIAL_FAIL"
              },
              "response": [
                {
                  "name": "Credential issued",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"format\": \"ldp_vc\",\n\t\"credential_definition\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t]\n\t},\n\t\"proof\": {\n\t\t\"proof_type\": \"jwt\",\n\t\t\"jwt\": \"<string>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/credential",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "credential"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"credential\": {\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"format\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Create an OpenID4VCI credential offer",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"credentials\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"request_parameters\": {\n\t\t\"login_hint\": \"<string>\",\n\t\t\"prompt\": \"<string>\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/offers",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "offers"]
                },
                "description": "Returns an OpenID4VCI credential offer URI.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#section-10.1](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#section-10.1)\n\n### **Analytic events**\n* OPENID_OFFER_CREATE_START\n* OPENID_OFFER_CREATE_SUCCESS\n* OPENID_OFFER_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Credential offer URI created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"credentials\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"request_parameters\": {\n\t\t\"login_hint\": \"<string>\",\n\t\t\"prompt\": \"<string>\"\n\t}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/offers",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "offers"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"uri\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve OpenID4VCI issuer metadata",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/.well-known/openid-credential-issuer",
                  "host": ["{{baseUrl}}"],
                  "path": [".well-known", "openid-credential-issuer"]
                },
                "description": "Returns OpenID4VCI issuer metadata. This is the standard OpenID4VCI Well Known endpoint for your tenant.\n\nThis endpoint is unprotected, public facing and can be deterministically found at the root of the tenant subdomain or alias by any party wishing to discover the OpenID4VCI capabilities."
              },
              "response": [
                {
                  "name": "OpenID4VCI credential issuer metadata retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/openid-credential-issuer",
                      "host": ["{{baseUrl}}"],
                      "path": [".well-known", "openid-credential-issuer"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"issuer\": \"<uri>\",\n\t\"authorization_endpoint\": \"<uri>\",\n\t\"token_endpoint\": \"<uri>\",\n\t\"scopes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"response_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"response_modes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grant_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"code_challenge_methods_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"credential_issuer\": \"<uri>\",\n\t\"credential_endpoint\": \"<uri>\",\n\t\"credentials_supported\": [\n\t\t{\n\t\t\t\"format\": \"<string>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"scope\": \"<string>\",\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {},\n\t\t\t\"cryptographic_binding_methods_supported\": \"<string>\",\n\t\t\t\"cryptographic_suites_supported\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"format\": \"<string>\",\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"scope\": \"<string>\",\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {},\n\t\t\t\"cryptographic_binding_methods_supported\": \"<string>\",\n\t\t\t\"cryptographic_suites_supported\": \"<string>\"\n\t\t}\n\t],\n\t\"mdoc_iacas_uri\": \"<uri>\"\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Users",
          "item": [
            {
              "name": "Search users",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"claims\": {},\n\t\"authenticationProvider\": {\n\t\t\"providerId\": \"<string>\",\n\t\t\"subjectId\": \"<string>\"\n\t},\n\t\"limit\": \"<number>\",\n\t\"cursor\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/search",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "search"]
                },
                "description": "Returns a list of users from the tenant that match the provided search criteria.\n\n### **Analytic events**\n* USER_SEARCH_START\n* USER_SEARCH_SUCCESS\n* USER_SEARCH_FAIL"
              },
              "response": [
                {
                  "name": "Users retrieved",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claims\": {},\n\t\"authenticationProvider\": {\n\t\t\"providerId\": \"<string>\",\n\t\t\"subjectId\": \"<string>\"\n\t},\n\t\"limit\": \"<number>\",\n\t\"cursor\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/search",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "search"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {},\n\t\t\t\"authenticationProvider\": {\n\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\"subjectId\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {},\n\t\t\t\"authenticationProvider\": {\n\t\t\t\t\"url\": \"<string>\",\n\t\t\t\t\"subjectId\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claims\": {},\n\t\"authenticationProvider\": {\n\t\t\"providerId\": \"<string>\",\n\t\t\"subjectId\": \"<string>\"\n\t},\n\t\"limit\": \"<number>\",\n\t\"cursor\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/search",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "search"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all users",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned entries, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of entries",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of all users on your tenant.\n\n### **Analytic events**\n* USER_RETRIEVE_LIST_START\n* USER_RETRIEVE_LIST_SUCCESS\n* USER_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Users retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<uuid>\",\n\t\t\t\"claims\": {}\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a user",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    }
                  ]
                },
                "description": "Retrieve an existing user by providing its ID.\n* USER_RETRIEVE_START\n* USER_RETRIEVE_SUCCESS\n* USER_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "User retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"claims\": {}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update a User",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"claims\": {}\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    }
                  ]
                },
                "description": "Updates an existing user by providing its ID.\n\n* USER_UPDATE_START\n* USER_UPDATE_SUCCESS\n* USER_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "User updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claims\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<uuid>\",\n\t\"claims\": {}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claims\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"claims\": {}\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete a user",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    }
                  ]
                },
                "description": "Deletes a user and removes any persisted data related to them by providing the user ID.\n\n> Any credentials issued to the user remain valid even after the user is deleted.\n  \n### **Analytic events**\n* USER_DELETE_START\n* USER_DELETE_SUCCESS\n* USER_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "User deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "User not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all user credentials data",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:userId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":userId", "credentials"],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    }
                  ]
                },
                "description": "Returns a list of metadata for all the credentials referenced by the provided `userId`.\n"
              },
              "response": [
                {
                  "name": "User credentials retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:userId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":userId", "credentials"],
                      "variable": [
                        {
                          "key": "userId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"profile\": \"web-semantic\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"profile\": \"web-semantic\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:userId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":userId", "credentials"],
                      "variable": [
                        {
                          "key": "userId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Credential Management",
      "item": [
        {
          "name": "Compact Credentials Management",
          "item": [
            {
              "name": "Delete Compact Credential metadata",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    }
                  ]
                },
                "description": "Deletes all credential metadata from the tenant for a specific credential by providing its ID. If the credential was set to be revocable, it will be permanently revoked upon metadata deletion.\n\nNote that only metadata of revocable credentials or credentials issued via the OpenID4VCI flow is saved.\n\n> Deleted metadata cannot be recovered."
              },
              "response": [
                {
                  "name": "Credential metadata deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid id parameter format",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Credential ID not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Compact Credential revocation lists",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "revocation-lists"]
                },
                "description": "Returns a list of all Compact Credential revocation lists on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_START\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation lists retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "revocation-lists"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t}\n]"
                }
              ]
            },
            {
              "name": "Retrieve Compact Credential revocation list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/cwt"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists/:listId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "revocation-lists", ":listId"],
                  "variable": [
                    {
                      "key": "listId",
                      "value": "<string>",
                      "description": "(Required) The unique identifier of the Revocation List you wish to retrieve."
                    }
                  ]
                },
                "description": "Returns a Compact Credential revocation list by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/cwt"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists/:listId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "revocation-lists", ":listId"],
                      "variable": [
                        {
                          "key": "listId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/cwt"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                }
              ]
            },
            {
              "name": "Update Compact Credential revocation status",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", ":id", "revocation-status"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier."
                    }
                  ]
                },
                "description": "Updates the credential status as revoked (invalid) or unrevoked (valid).\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_START\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_FAIL"
              },
              "response": [
                {
                  "name": "Revocation status updated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Id not found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve Compact Credential revocation status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", ":id", "revocation-status"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier."
                    }
                  ]
                },
                "description": "Retrieve the revocation status of a Compact Credential by providing its ID."
              },
              "response": [
                {
                  "name": "Revocation status retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Id not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Compact Semantic Credentials Management",
          "item": [
            {
              "name": "Delete Compact Semantic Credential metadata",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    }
                  ]
                },
                "description": "Deletes all credential metadata from the tenant for a specific credential by providing its ID. If the credential was set to be revocable, it will be permanently revoked upon metadata deletion.\n\nNote that only metadata of revocable credentials or credentials issued via the OpenID4VCI flow is saved.\n\n> Deleted metadata cannot be recovered."
              },
              "response": [
                {
                  "name": "Credential metadata deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid id parameter format",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Credential ID not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Compact Semantic Credential revocation lists",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "revocation-lists"]
                },
                "description": "Returns a list of all Compact Semantic Credential revocation lists on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation lists retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "revocation-lists"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\t\"nextCursor\": \"<string>\",\n\t\t\"data\": [\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"issuer\": \"<string>\",\n\t\t\t\t\"url\": \"<string>\"\n\t\t\t}\n\t\t]\n\t}\n]"
                }
              ]
            },
            {
              "name": "Retrieve Compact Semantic Credential revocation list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/cwt"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists/:listId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "revocation-lists", ":listId"],
                  "variable": [
                    {
                      "key": "listId",
                      "value": "<string>",
                      "description": "(Required) The unique identifier of the revocation list you wish to retrieve."
                    }
                  ]
                },
                "description": "Returns a Compact Semantic Credential revocation list by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/cwt"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists/:listId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "revocation-lists", ":listId"],
                      "variable": [
                        {
                          "key": "listId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/cwt"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                }
              ]
            },
            {
              "name": "Update Compact Semantic Credential revocation status",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", ":id", "revocation-status"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier (`jti`)"
                    }
                  ]
                },
                "description": "Updates the credential status as revoked (invalid) or unrevoked (valid).\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_FAIL"
              },
              "response": [
                {
                  "name": "Revocation status updated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Id not found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve Compact Semantic Credential revocation status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", ":id", "revocation-status"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier (`jti`)"
                    }
                  ]
                },
                "description": "Retrieve the revocation status of a Compact Semantic Credential by providing its ID."
              },
              "response": [
                {
                  "name": "Revocation status retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Id not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Web Credentials Management",
          "item": [
            {
              "name": "Retrieve all credential data",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic"],
                  "query": [
                    {
                      "key": "tag",
                      "value": "<string>",
                      "description": "Optional tag to filter on.",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "Optional credential type to filter on.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned credential entries, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of credential entries",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns all available data for existing credentials:\n- For credentials that were created with the `persist` flag set to `true`, the response contains both the credential and its metadata.\n- For credentials that were created with the persist flag set to `false`, the response only contains the metadata (`id`, `tag`, `credentialStatus`, `issuanceDate`).\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_START\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Credentials data retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic"],
                      "query": [
                        {
                          "key": "tag",
                          "value": "<string>",
                          "description": "Optional tag to filter on.",
                          "disabled": true
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "Optional credential type to filter on.",
                          "disabled": true
                        },
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned credential entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of credential entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"issuanceDate\": \"<string>\",\n\t\t\t\"credential\": {\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t},\n\t\t\t\"tag\": \"<string>\",\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"issuanceDate\": \"<string>\",\n\t\t\t\"credential\": {\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t},\n\t\t\t\"tag\": \"<string>\",\n\t\t\t\"credentialStatus\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t}\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad query parameters in request.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic"],
                      "query": [
                        {
                          "key": "tag",
                          "value": "<string>",
                          "description": "Optional tag to filter on.",
                          "disabled": true
                        },
                        {
                          "key": "type",
                          "value": "<string>",
                          "description": "Optional credential type to filter on.",
                          "disabled": true
                        },
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned credential entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of credential entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve credential data",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    }
                  ]
                },
                "description": "Returns all available data for an existing credential that matches the provided ID:\n- For credentials that were created with the `persist` flag set to `true`, the response contains both the credential and its metadata.\n- For credentials that were created with the persist flag set to `false`, the response only contains the metadata (`id`, `tag`, `credentialStatus`, `issuanceDate`)\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Credential data retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"issuanceDate\": \"<string>\",\n\t\"credential\": {\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\"iconUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialBranding\": {\n\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"tag\": \"<string>\",\n\t\"credentialStatus\": {\n\t\t\"id\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\"revocationListCredential\": \"<string>\"\n\t}\n}"
                },
                {
                  "name": "Credential ID not in a UUID format",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete credential data",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    }
                  ]
                },
                "description": "Deletes all stored data for an existing credential that matches the provided ID. If the credential is revocable, it will also be permanently revoked.\n\n> Removed credential data cannot be recovered.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_DELETE_START\n* CREDENTIAL_WEB_SEMANTIC_DELETE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Credential deleted and revoked if revocable",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid id parameter format",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Credential ID not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Set credential revocation status",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Credential ID"
                    }
                  ]
                },
                "description": "Sets the recovation status of the credential that matches the provided ID as `true` (revoked) or `false` (unrevoked).\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_FAIL\n"
              },
              "response": [
                {
                  "name": "Revocation status updated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve credential revocation status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Credential ID"
                    }
                  ]
                },
                "description": "Returns the revocation status of the credential matching the provided ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Credential status",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve revocation list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/revocation-lists/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "revocation-lists", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Revocation list ID. This value can be found within the credential you created. Look at the value for `Credentential.credential.credentialStatus.id`, the string after `https://tenant.vii.mattr.global/core/v1/revocation-lists/` is what you're looking for"
                    }
                  ]
                },
                "description": "Returns the revocation list matching the provided ID."
              },
              "response": [
                {
                  "name": "Revocation list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/revocation-lists/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "revocation-lists", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"@context\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"type\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"issuanceDate\": \"<dateTime>\",\n\t\"credentialSubject\": {\n\t\t\"givenName\": \"<string>\",\n\t\t\"familyName\": \"<string>\",\n\t\t\"alumniOf\": \"<string>\"\n\t},\n\t\"proof\": {\n\t\t\"type\": \"<string>\",\n\t\t\"created\": \"<dateTime>\",\n\t\t\"jws\": \"<string>\",\n\t\t\"proofPurpose\": \"<string>\",\n\t\t\"verificationMethod\": \"<string>\"\n\t},\n\t\"issuer\": {\n\t\t\"id\": \"<string>\",\n\t\t\"name\": \"<string>\",\n\t\t\"logoUrl\": \"<string>\",\n\t\t\"iconUrl\": \"<string>\"\n\t},\n\t\"credentialBranding\": {\n\t\t\"backgroundColor\": \"<string>\",\n\t\t\"watermarkImageUrl\": \"<string>\"\n\t},\n\t\"credentialStatus\": {\n\t\t\"id\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\"revocationListCredential\": \"<string>\"\n\t},\n\t\"name\": \"<string>\",\n\t\"description\": \"<string>\"\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/revocation-lists/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "revocation-lists", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Create a revocation message payload",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status/notification",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status", "notification"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the credential whose status has changed."
                    }
                  ]
                },
                "description": "Returns a message in JWM format that can be used to notify subjects based on their credential revocation status change.\n\nTo send a notification to the Subject DID holder, use the returned payload with the [encrypt](#operation/encryptMessage) and [send](#operation/sendMessage) endpoints.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation message payload created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"from\": \"<string>\",\n\t\"to\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status/notification",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id", "revocation-status", "notification"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"type\": \"<string>\",\n\t\"to\": [\n\t\t{\n\t\t\t\"string\": -27405162.50637172\n\t\t},\n\t\t{\n\t\t\t\"string\": -81011508.07576892\n\t\t}\n\t],\n\t\"from\": \"<string>\",\n\t\"created_time\": \"<number>\",\n\t\"body\": {\n\t\t\"revocationListCredential\": \"<string>\",\n\t\t\"revocationListIndex\": \"<string>\",\n\t\t\"isRevoked\": \"<boolean>\"\n\t}\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Mobile Credentials Management",
          "item": [
            {
              "name": "Delete Mobile Credential metadata",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Mobile Credential ID"
                    }
                  ]
                },
                "description": "Deletes all stored data for an existing Mobile Credential that matches the provided ID.\n\n> Removed credential data cannot be recovered.\n\n### **Analytic events**\n* USER_CREDENTIAL_DELETE_START\n* USER_CREDENTIAL_DELETE_SUCCESS\n* USER_CREDENTIAL_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Mobile Credential metadata deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid id parameter format",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Mobile Credential not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Credential Verification",
      "item": [
        {
          "name": "Compact Credentials Verification",
          "item": [
            {
              "name": "Verify a Compact Credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "value": "<string>",
                      "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                      "type": "text"
                    },
                    {
                      "key": "trustedIssuers",
                      "value": "<string>,<string>",
                      "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidFrom",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidUntil",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                      "type": "text"
                    },
                    {
                      "key": "checkRevocation",
                      "value": "true",
                      "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "verify"]
                },
                "description": "Verify a Compact Credential by providing the encoded payload and specifying verification options.\n\nYou can provide a valid Compact Credential as either an encoded string or a QR code in a PDF document or an image file.\n\nStandard checks performed on all verification requests:\n- Conformance of the string and encoded data. All string representations of Compact Credentials must be prefixed with `CSC/1`.\n- Decoded payload structure is a valid Compact Credential.\n- Issuer DID can be used to resolve its `did.json` document.\n- Public key from issuer's `did.json` document validates the proof signature, confirming the credential has not been tampered with.\n\nOptional parameter checks:\n- Credential was issued by a trusted issuer.\n- Current time is after the beginning of the credential validity period.\n- Current time is not after the end of the credential validity period.\n- Credential has not been revoked.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_VERIFY_START\n* CREDENTIAL_COMPACT_VERIFY_SUCCESS\n* CREDENTIAL_COMPACT_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"verified\": \"<boolean>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"type\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t},\n\t\"error\": {\n\t\t\"type\": \"<string>\",\n\t\t\"message\": \"<string>\",\n\t\t\"details\": {}\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Payload Too Large",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"]
                    }
                  },
                  "status": "Request Entity Too Large",
                  "code": 413,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unsupported Media Type",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"]
                    }
                  },
                  "status": "Unsupported Media Type",
                  "code": 415,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Compact Semantic Credentials Verification",
          "item": [
            {
              "name": "Verify a Compact Semantic Credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "value": "<string>",
                      "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                      "type": "text"
                    },
                    {
                      "key": "trustedIssuers",
                      "value": "<string>,<string>",
                      "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidFrom",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidUntil",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                      "type": "text"
                    },
                    {
                      "key": "checkRevocation",
                      "value": "true",
                      "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "verify"]
                },
                "description": "Verify a Compact Semantic Credential by providing the encoded payload and specifying verification options.\n\nYou can provide a valid Compact Semantic Credential as either an encoded string or a QR code in a PDF document or an image file.\n\nStandard checks performed on all verification requests:\n- Conformance of the string and encoded data. All string representations of Compact Credentials must be prefixed with `CSC/1`.\n- Decoded payload CWT structure and attributes can be validated.\n- Remote context schema can be resolved and validate claims can be dereferenced.\n- Issuer DID can be used to resolve its `did.json` document.\n- Public key from issuer's `did.json` document validates the proof signature, confirming the credential has not been tampered with.\n\nOptional parameter checks:\n- Credential was issued by a trusted issuer.\n- Current time is after the beginning of the credential validity period.\n- Current time is not after the end of the credential validity period.\n- Credential has not been revoked.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_START\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "verify"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"verified\": \"<boolean>\",\n\t\"decoded\": {\n\t\t\"iss\": \"<string>\",\n\t\t\"nbf\": \"<number>\",\n\t\t\"jti\": \"<string>\",\n\t\t\"vc\": {\n\t\t\t\"@context\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"type\": [\n\t\t\t\t\"<string>\",\n\t\t\t\t\"<string>\"\n\t\t\t],\n\t\t\t\"credentialSubject\": {\n\t\t\t\t\"ea__9_\": \"<string>\"\n\t\t\t}\n\t\t},\n\t\t\"exp\": \"<number>\",\n\t\t\"iat\": \"<number>\",\n\t\t\"aud\": \"<string>\",\n\t\t\"sub\": \"<string>\",\n\t\t\"status\": {\n\t\t\t\"url\": \"<string>\",\n\t\t\t\"index\": \"<number>\"\n\t\t}\n\t},\n\t\"error\": {\n\t\t\"type\": \"<string>\",\n\t\t\"message\": \"<string>\",\n\t\t\"details\": {}\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "verify"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Payload Too Large",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "verify"]
                    }
                  },
                  "status": "Request Entity Too Large",
                  "code": 413,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unsupported Media Type",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<string>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "<string>,<string>",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "verify"]
                    }
                  },
                  "status": "Unsupported Media Type",
                  "code": 415,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Web Credentials Verification",
          "item": [
            {
              "name": "Verify a Web Semantic Credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"assertExpiry\": true,\n\t\"checkRevocation\": true,\n\t\"assertValidFrom\": true,\n\t\"assertValidUntil\": false\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "verify"]
                },
                "description": "Verify a Web Semantic Credential by providing its payload. The credential is verified against the following criteria:\n- Issuer DID can be resolved, so that the referenced DID Document is available and valid and the public key is obtainable.\n- Proof is valid and the credential has not been tampered with.\n- JSON-LD context is valid for subject claims.\n\nOptional verification checks:\n- If `assertExpiry` is set to `true` and the credential has a set expiration date, verification will fail if the expiration date has passed.\n- If `checkRevocation` is set to `true` and the provided credential contains a revocation status list, verification will fail if the credential has been set to `revoked`.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_START\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"assertExpiry\": true,\n\t\"checkRevocation\": true,\n\t\"assertValidFrom\": true,\n\t\"assertValidUntil\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "verify"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"verified\": \"<boolean>\",\n\t\"reason\": {\n\t\t\"type\": \"<string>\",\n\t\t\"message\": \"<string>\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"payload\": {\n\t\t\"type\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\"credentialSubject\": {\n\t\t\t\"givenName\": \"<string>\",\n\t\t\t\"familyName\": \"<string>\",\n\t\t\t\"alumniOf\": \"<string>\"\n\t\t},\n\t\t\"proof\": {\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\"jws\": \"<string>\",\n\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\"verificationMethod\": \"<string>\"\n\t\t},\n\t\t\"id\": \"<string>\",\n\t\t\"@context\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"issuer\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t\"credentialStatus\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t},\n\t\t\"name\": \"<string>\",\n\t\t\"description\": \"<string>\"\n\t},\n\t\"assertExpiry\": true,\n\t\"checkRevocation\": true,\n\t\"assertValidFrom\": true,\n\t\"assertValidUntil\": false\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "verify"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Create a presentation template",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "presentations", "templates"]
                },
                "description": "Creates a presentation template defining what type of credential is required for a particular verification workflow. Presentation templates are used to create presentation requests that are shared with a specific holder.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation template created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Bad request, Invalid request body",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all presentation templates",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "presentations", "templates"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of the list, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of all presentation templates on your tenant.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Presentation templates retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of the list, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"domain\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"query\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"domain\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"query\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a presentation template",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Presentation template ID"
                    }
                  ]
                },
                "description": "Retrieve an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation template retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Invalid templateId parameter format",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete a presentation template",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Presentation template ID"
                    }
                  ]
                },
                "description": "Deletes an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation template deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid templateId parameter format.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update a presentation template",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"id\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Presentation template ID"
                    }
                  ]
                },
                "description": "Updates an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"id\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "templates", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"domain\": \"<string>\",\n\t\"name\": \"<string>\",\n\t\"query\": [\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"type\": \"<string>\",\n\t\t\t\"credentialQuery\": [\n\t\t\t\t{\n\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Create a presentation request",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"challenge\": \"<string>\",\n\t\"templateId\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"expiresTime\": \"<number>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "presentations", "requests"]
                },
                "description": "Creates a short lived presentation request based on an existing presentation template. The request is returned in the form of a JWM message and must be [signed](#operation/signMessage) and sent to the holder via one of the following methods:\n- QR code.\n- Deeplink.\n- [Encrypted](#operation/encryptMessage) and [sent](#operation/sendMessage) as a wallet notification.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_START\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation request created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"challenge\": \"<string>\",\n\t\"templateId\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"expiresTime\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "requests"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"id\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"request\": {\n\t\t\"id\": \"<uuid>\",\n\t\t\"type\": \"<uri>\",\n\t\t\"from\": \"<string>\",\n\t\t\"created_time\": \"<number>\",\n\t\t\"expires_time\": \"<number>\",\n\t\t\"reply_url\": \"<string>\",\n\t\t\"reply_to\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"body\": {\n\t\t\t\"id\": \"<string>\",\n\t\t\t\"domain\": \"<string>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"query\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"credentialQuery\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\"example\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\t\t\t\t\"trustedIssuer\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"required\": \"<boolean>\",\n\t\t\t\t\t\t\t\t\t\t\t\"issuer\": \"<string>\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"reason\": \"<string>\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"challenge\": \"<uuid>\"\n\t\t}\n\t},\n\t\"didcommUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"challenge\": \"<string>\",\n\t\"templateId\": \"<string>\",\n\t\"did\": \"<string>\",\n\t\"callbackUrl\": \"<uri>\",\n\t\"expiresTime\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "requests"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Verify a verifiable presentation",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"presentation\": {\n\t\t\"verifiableCredential\": [\n\t\t\t{\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<string>\",\n\t\t\"holder\": \"<string>\",\n\t\t\"proof\": [\n\t\t\t{\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<string>\",\n\t\t\t\t\"challenge\": \"<string>\",\n\t\t\t\t\"domain\": \"<string>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t\"challenge\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "presentations", "verify"]
                },
                "description": "Verifies a provided verifiable presentation that adheres to the [W3C Verifiable Credential Data Model](https://www.w3.org/TR/vc-data-model/#presentations):\n- Ensures the presentation conforms to the VC Data model.\n- For each `verifiableCredential` objects:\n  - Issuer DID can be resolved.\n  - JSON-LD context is valid for subject claims.\n  - Proof is valid & the credential has not been tampered with.\n  - Is not in a `revoked` status on a `RevocationList2020`.\n  - The proof is valid for each subjectDID to prove ownership.\n  - Valid proof exists for the presentation `holderDID`.\n\nThe request must include a `presentation` object that adheres to the [W3C Verifiable Credential Data Model](https://www.w3.org/TR/vc-data-model/#presentations).\n\nIf a `challenge` and/or `domain` is provided they are used for credential verification. Otherwise, the `challenge` and/or `domain` within the presentation proof is used instead.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_VERIFY_START\n* PRESENTATION_WEB_SEMANTIC_VERIFY_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Presentation verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"presentation\": {\n\t\t\"verifiableCredential\": [\n\t\t\t{\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<string>\",\n\t\t\"holder\": \"<string>\",\n\t\t\"proof\": [\n\t\t\t{\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<string>\",\n\t\t\t\t\"challenge\": \"<string>\",\n\t\t\t\t\"domain\": \"<string>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t\"challenge\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "verify"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"verified\": \"<boolean>\",\n\t\"reason\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"presentation\": {\n\t\t\"verifiableCredential\": [\n\t\t\t{\n\t\t\t\t\"@context\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"type\": [\n\t\t\t\t\t\"<string>\",\n\t\t\t\t\t\"<string>\"\n\t\t\t\t],\n\t\t\t\t\"issuanceDate\": \"<dateTime>\",\n\t\t\t\t\"credentialSubject\": {\n\t\t\t\t\t\"givenName\": \"<string>\",\n\t\t\t\t\t\"familyName\": \"<string>\",\n\t\t\t\t\t\"alumniOf\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"proof\": {\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"created\": \"<dateTime>\",\n\t\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"issuer\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\t\"logoUrl\": \"<string>\",\n\t\t\t\t\t\"iconUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialBranding\": {\n\t\t\t\t\t\"backgroundColor\": \"<string>\",\n\t\t\t\t\t\"watermarkImageUrl\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"credentialStatus\": {\n\t\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\t\"revocationListIndex\": \"<integer>\",\n\t\t\t\t\t\"revocationListCredential\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"description\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<string>\",\n\t\t\"holder\": \"<string>\",\n\t\t\"proof\": [\n\t\t\t{\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"created\": \"<string>\",\n\t\t\t\t\"challenge\": \"<string>\",\n\t\t\t\t\"domain\": \"<string>\",\n\t\t\t\t\"jws\": \"<string>\",\n\t\t\t\t\"proofPurpose\": \"<string>\",\n\t\t\t\t\"verificationMethod\": \"<string>\"\n\t\t\t}\n\t\t]\n\t},\n\t\"challenge\": \"<string>\",\n\t\"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "presentations", "verify"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "Mobile Credentials Verification",
          "item": []
        }
      ]
    },
    {
      "name": "OIDC Bridge Verification",
      "item": [
        {
          "name": "OIDC Verifier Auth",
          "item": [
            {
              "name": "Well Known OpenId Configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/.well-known/openid-configuration",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", ".well-known", "openid-configuration"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    }
                  ]
                },
                "description": "The standard OpenID Connect Well Known configuration metadata endpoint.\n\nThis endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n"
              },
              "response": [
                {
                  "name": "Returns OpenID configuration",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/.well-known/openid-configuration",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", ".well-known", "openid-configuration"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"authorization_endpoint\": \"<uri>\",\n\t\"claims_parameter_supported\": \"<boolean>\",\n\t\"claims_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"code_challenge_methods_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"end_session_endpoint\": \"<uri>\",\n\t\"grant_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"id_token_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"issuer\": \"<uri>\",\n\t\"jwks_uri\": \"<uri>\",\n\t\"registration_endpoint\": \"<uri>\",\n\t\"request_object_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"request_parameter_supported\": \"<boolean>\",\n\t\"request_uri_parameter_supported\": \"<boolean>\",\n\t\"require_request_uri_registration\": \"<boolean>\",\n\t\"response_modes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"response_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"scopes_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"subject_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"token_endpoint_auth_methods_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"token_endpoint_auth_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"token_endpoint\": \"<uri>\",\n\t\"userinfo_endpoint\": \"<uri>\",\n\t\"userinfo_signing_alg_values_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"claim_types_supported\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "example",
                      "value": "G1s1EPMml4L0zFd63R1YP",
                      "disabled": true
                    },
                    {
                      "key": "client_secret",
                      "value": "<string>",
                      "disabled": true
                    },
                    {
                      "key": "grant_type",
                      "value": "<string>",
                      "disabled": true
                    },
                    {
                      "key": "code",
                      "value": "<string>",
                      "disabled": true
                    },
                    {
                      "key": "redirect_uri",
                      "value": "<uri>",
                      "disabled": true
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "token"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    }
                  ]
                },
                "description": "> OIDC Token endpoint\n\nThe OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`\n\n### **Analytic events**\n* OIDC_VERIFIER_AUTH_START\n* OIDC_VERIFIER_AUTH_SUCCESS\n* OIDC_VERIFIER_AUTH_FAIL"
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "example",
                          "value": "G1s1EPMml4L0zFd63R1YP",
                          "disabled": true
                        },
                        {
                          "key": "client_secret",
                          "value": "<string>",
                          "disabled": true
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>",
                          "disabled": true
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "disabled": true
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<uri>",
                          "disabled": true
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "token"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"access_token\": \"<string>\",\n\t\"token_type\": \"bearer\",\n\t\"refresh_token\": \"<string>\",\n\t\"expires_in\": \"<integer>\",\n\t\"id_token\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "example",
                          "value": "G1s1EPMml4L0zFd63R1YP",
                          "disabled": true
                        },
                        {
                          "key": "client_secret",
                          "value": "<string>",
                          "disabled": true
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>",
                          "disabled": true
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "disabled": true
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<uri>",
                          "disabled": true
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "token"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "OIDC Verifiers",
          "item": [
            {
              "name": "Create an OIDC Verifier",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers"]
                },
                "description": "Creates a new OIDC Credential Verifier on the tenant.\n\nOnce created, this OIDC Verifier is publicly available on its `/.well-known/openid-configuration` path. The Authorization header is not required as it is intended for OIDC Client applications to resolve.\n\n### **Analytic events**\n* OIDC_VERIFIER_CREATE_START\n* OIDC_VERIFIER_CREATE_SUCCESS\n* OIDC_VERIFIER_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifier created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"id\": \"<uuid>\",\n\t\"includePresentation\": \"<boolean>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all OIDC Verifiers",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned verifier entries, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of verifier entries",
                      "disabled": true
                    }
                  ]
                },
                "description": "Returns a list of all OIDC Verifiers on the tenant.\n\n### **Analytic events**\n* OIDC_VERIFIER_RETRIEVE_LIST_START\n* OIDC_VERIFIER_RETRIEVE_LIST_SUCCESS\n* OIDC_VERIFIER_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifiers retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned verifier entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of verifier entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": {\n\t\t\"verifierDid\": \"<string>\",\n\t\t\"presentationTemplateId\": \"<uuid>\",\n\t\t\"claimMappings\": [\n\t\t\t{\n\t\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\t\"oidcClaim\": \"<string>\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\t\"oidcClaim\": \"<string>\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"<uuid>\",\n\t\t\"includePresentation\": \"<boolean>\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned verifier entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of verifier entries",
                          "disabled": true
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve an OIDC Verifier",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    }
                  ]
                },
                "description": "Retrieves an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_RETRIEVE_START\n* OIDC_VERIFIER_RETRIEVE_SUCCESS\n* OIDC_VERIFIER_RETRIEVE_FAIL      "
              },
              "response": [
                {
                  "name": "OIDC Verifier retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"id\": \"<uuid>\",\n\t\"includePresentation\": \"<boolean>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "OIDC Verifier not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update an OIDC Verifier",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    }
                  ]
                },
                "description": "Updates an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_UPDATE_START\n* OIDC_VERIFIER_UPDATE_SUCCESS\n* OIDC_VERIFIER_UPDATE_FAIL      \n"
              },
              "response": [
                {
                  "name": "OIDC Verifier updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"id\": \"<uuid>\",\n\t\"includePresentation\": \"<boolean>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "OIDC Verifier not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"verifierDid\": \"<string>\",\n\t\"presentationTemplateId\": \"<uuid>\",\n\t\"claimMappings\": [\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"jsonLdFqn\": \"<string>\",\n\t\t\t\"oidcClaim\": \"<string>\"\n\t\t}\n\t],\n\t\"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete an OIDC Verifier",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    }
                  ]
                },
                "description": "Deletes an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_DELETE_START\n* OIDC_VERIFIER_DELETE_SUCCESS\n* OIDC_VERIFIER_DELETE_FAIL      \n"
              },
              "response": [
                {
                  "name": "OIDC Verifier deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "OIDC Verifier not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "OIDC Verifier Client",
          "item": [
            {
              "name": "Configure an OIDC Client",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    }
                  ]
                },
                "description": "Configures an OIDC Verifier Client on your tenant.\n\nIn order to verify a credential using an OpenID Connect Authorization Code Flow, you need to set up an OIDC Client application. This is the client that will engage with your configured OIDC Verifier to inititate the verification workflow.\nThere is a list of OIDC Client apps, also known as Relying Party Libraries, on the [OpenID website](https://openid.net/developers/certified/). Pick one which you feel comfortable with.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_CREATE_START\n* OIDC_VERIFIER_CLIENT_CREATE_SUCCESS\n* OIDC_VERIFIER_CLIENT_CREATE_FAIL      "
              },
              "response": [
                {
                  "name": "OIDC Client configured",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"secret\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all OIDC Clients",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned client entries, default 100",
                      "disabled": true
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of client entries",
                      "disabled": true
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    }
                  ]
                },
                "description": "Returns a list of all OIDC Verifier Clients on the Tenant.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_START\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_SUCCESS\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_FAIL      \n"
              },
              "response": [
                {
                  "name": "OIDC Clients retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned client entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of client entries",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"nextCursor\": \"<string>\",\n\t\"data\": {\n\t\t\"name\": \"<string>\",\n\t\t\"redirectUris\": [\n\t\t\t\"<uri>\",\n\t\t\t\"<uri>\"\n\t\t],\n\t\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\t\"id\": \"<uuid>\",\n\t\t\"secret\": \"<string>\",\n\t\t\"responseTypes\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"grantTypes\": [\n\t\t\t\"<string>\",\n\t\t\t\"<string>\"\n\t\t],\n\t\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\t\"applicationType\": \"<string>\",\n\t\t\"logoUri\": \"<uri>\"\n\t}\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>",
                          "description": "Range size of returned client entries, default 100",
                          "disabled": true
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the range of client entries",
                          "disabled": true
                        }
                      ],
                      "variable": [
                        {
                          "key": "id"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Retrieve an OIDC Client",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier ID"
                    },
                    {
                      "key": "clientId",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier Client ID"
                    }
                  ]
                },
                "description": "Retrieves an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_RETRIEVE_START\n* OIDC_VERIFIER_CLIENT_RETRIEVE_SUCCESS\n* OIDC_VERIFIER_CLIENT_RETRIEVE_FAIL      "
              },
              "response": [
                {
                  "name": "OIDC Verifier Client retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"secret\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "OIDC Verifier Client not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Update an OIDC Client",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier ID"
                    },
                    {
                      "key": "clientId",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier Client ID"
                    }
                  ]
                },
                "description": "Updates an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_UPDATE_START\n* OIDC_VERIFIER_CLIENT_UPDATE_SUCCESS\n* OIDC_VERIFIER_CLIENT_UPDATE_FAIL      \n"
              },
              "response": [
                {
                  "name": "OIDC Verifier Client updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"id\": \"<uuid>\",\n\t\"secret\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "OIDC Verifier Client not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"name\": \"<string>\",\n\t\"redirectUris\": [\n\t\t\"<uri>\",\n\t\t\"<uri>\"\n\t],\n\t\"idTokenSignedResponseAlg\": \"<string>\",\n\t\"responseTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"grantTypes\": [\n\t\t\"<string>\",\n\t\t\"<string>\"\n\t],\n\t\"tokenEndpointAuthMethod\": \"<string>\",\n\t\"applicationType\": \"<string>\",\n\t\"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            },
            {
              "name": "Delete an OIDC Client",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier ID"
                    },
                    {
                      "key": "clientId",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier Client ID"
                    }
                  ]
                },
                "description": "Deletes an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_DELETE_START\n* OIDC_VERIFIER_CLIENT_DELETE_SUCCESS\n* OIDC_VERIFIER_CLIENT_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifier Client deleted.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                },
                {
                  "name": "OIDC Verifier Client not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients", ":clientId"],
                      "variable": [
                        {
                          "key": "id"
                        },
                        {
                          "key": "clientId"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n\t\"code\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"details\": [\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<string>\",\n\t\t\t\"msg\": \"<string>\",\n\t\t\t\"param\": \"<string>\",\n\t\t\t\"location\": \"<string>\"\n\t\t}\n\t]\n}"
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{bearerToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Refresh the OAuth token if necessary",
          "var tokenDate = new Date(2010, 1, 1);",
          "var tokenTimestamp = pm.environment.get(\"oauthTimestamp\");",
          "if (tokenTimestamp) {",
          "    tokenDate = Date.parse(tokenTimestamp);",
          "}",
          "var expiresInTime = pm.environment.get(\"expiresInTime\");",
          "if (!expiresInTime) {",
          "    expiresInTime = 300000; // Set default expiration time to 5 minutes",
          "}",
          "    pm.sendRequest({",
          "        url: pm.environment.get(\"auth0Base\"),",
          "        method: 'POST',",
          "        header: {",
          "            'Accept': 'application/json',",
          "            'Content-Type': 'application/json',",
          "        },",
          "        body: JSON.stringify({",
          "            client_id: pm.environment.get(\"tenantClientId\"),",
          "            client_secret: pm.environment.get(\"tenantClientSecret\"),",
          "            audience: pm.environment.get(\"tenantAudience\"),",
          "            grant_type: \"client_credentials\"",
          "        })",
          "    }, function (err, res) {",
          "        pm.environment.set(\"bearerToken\", res.json().access_token);",
          "        pm.environment.set(\"oauthTimestamp\", new Date());",
          "        // Set the ExpiresInTime variable to the time given in the response if it exists",
          "        if (res.json().expires_in) {",
          "            expiresInTime = res.json().expires_in * 1000;",
          "        }",
          "        pm.environment.set(\"expiresInTime\", expiresInTime);",
          "    });"
        ]
      }
    }
  ]
}

{
  "info": {
    "_postman_id": "66df968a-8f07-42e9-96b0-364fa03bd223",
    "name": "MATTR VII Platform API (v9.0.0)",
    "description": "# Introduction\nThe MATTR VII API defines a set of capabilities that can be used to manage and interact with a MATTR VII tenant. This includes managing a Verifiable Credential across its lifecycle (issue-hold-verify) as well as various tenant administration and management tasks such as setting up a custom domain, creating identifiers and configuring issuance and verification workflows.\n\n# Getting Started with our APIs\nAs a MATTR VII user, you are provided with the following details, required for accessing and engaging with your MATTR VII tenant:\n\n``` json\n{\n  \"audience\": \"YOUR_AUDIENCE_URL\",\n  \"auth_url\": \"YOUR_AUTH_URL\",\n  \"tenant_url\": \"YOUR_TENANT_URL\",\n  \"client_id\": \"YOUR_CLIENT_ID\",\n  \"client_secret\": \"YOUR_CLIENT_SECRET\"\n}\n```\n\n1. Use the `auth_url`, `audience`, `client_id` and `client_secret` to [obtain an access token](https://learn.mattr.global/api-reference/latest/tag/Security#operation/authToken).\n2. To make a request to your tenant, suffix the `tenant_url` with the endpoint route and include the obtained access token as a header bearer token. For example:\n\n```\nGET https://{tenant_url}/v1/dids\n```\n\n# Pagination\nMost list operations in the API enable cursor pagination using the `cursor` and `limit` query parameters:\n\n**Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n```\nGET https://{tenant-url}/core/v2/credentials\n?limit=100\n&cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n```\n\n* `limit`: determines how many entries are returned in that request, with a maximum value of 1000.\n* `cursor`: sets the location in the retrieved list to get the next batch of entries from. This is based on the returned `nextCursor`, found at the beginning of each returned range and identifies the last object in the list.\n\nRequesting an entry after the last list value will return an empty `data` object:\n\n``` json\n{\n\"data\": []\n}\n```\n\nNot providing a query parameter defaults the response to return the first range of entries with a `limit` of 100.\n\n# Authorization\nAccess to the API is granted by our authorization provider. Use the `auth_url`, `audience`, `client_id` and `client_secret` provided with your tenant details to [make a request](https://learn.mattr.global/api-reference/latest/tag/Security#operation/authToken) to receive a bearer token from the auth provider. This token must then be used as an `authorization` header for all requests to protected endpoints (this is required for the majority of operations).\n\n> The returned bearer token will only enable access to endpoints as per your client's defined role. Refer to [Access Control](#access-control) for more information.\n\n<SecurityDefinitions />\n\n# Access control\n\nMATTR VII uses **Role-Based Access Control (RBAC)** to manage permissions and access within a tenant. Each role grants access to specific capabilities, ensuring that users or clients only have access to the functionalities they need. Below is a list of available roles and their descriptions:\n\n-   Tenant admin: Has full access to all tenant capabilities. This role is\n    assigned to the default client when a new tenant is created.\n-   Issuer: Has access to capabilities required for issuing and managing\n    credentials of different formats across different channels.\n-   Verifier: Has access to capabilities required for verifying credentials\n    of different formats across different channels.\n-   DTS provider: Has access to capabilities required for managing a\n    Digital trust service (DTS).\n-   DTS consumer: Has access to capabilities required to consume DTS\n    information from a tenant.\n-   Auditor: Has read-only access to analytics data.\n\nEach restricted endpoint includes a Roles property that indicates what roles are required to access it.\n\n\nContact Support:\n Email: dev-support@mattr.global",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "28262321"
  },
  "item": [
    {
      "name": "General",
      "item": [
        {
          "name": "Analytics",
          "item": [
            {
              "name": "Retrieve events",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/analytics/events?limit=100&cursor=<string>&dateFrom=<dateTime>&dateTo=<dateTime>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "analytics", "events"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    },
                    {
                      "key": "dateFrom",
                      "value": "<dateTime>",
                      "description": "Query by event start date and time (inclusive), in ISO-8601 format."
                    },
                    {
                      "key": "dateTo",
                      "value": "<dateTime>",
                      "description": "Query by event end date and time (inclusive), in ISO-8601 format."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of matching events from the tenant's event database. \n\nThe `categories` and `types` parameters filter based on an **OR** logic, whilst all other parameters use an \"AND\" logic. For example `(categories OR types) AND requestIds AND dateFrom`.\n\nRefer to the [Events registry](https://api-reference-sdk.mattr.global/event-registry/latest/index.html) for an inclusive list of events categories and types.\n"
              },
              "response": [
                {
                  "name": "A list of events",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events?limit=100&cursor=<string>&dateFrom=<dateTime>&dateTo=<dateTime>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"timestamp\": \"<string>\",\n      \"category\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"data\": \"<object>\",\n      \"requestId\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"timestamp\": \"<string>\",\n      \"category\": \"<string>\",\n      \"metadata\": \"<object>\",\n      \"data\": \"<object>\",\n      \"requestId\": \"<string>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events?limit=100&cursor=<string>&dateFrom=<dateTime>&dateTo=<dateTime>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Unauthorized. The client is not recognized by authorization server.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events?limit=100&cursor=<string>&dateFrom=<dateTime>&dateTo=<dateTime>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden. The client is recognized by authorization server but is not allowed to access this resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events?limit=100&cursor=<string>&dateFrom=<dateTime>&dateTo=<dateTime>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/analytics/events?limit=100&cursor=<string>&dateFrom=<dateTime>&dateTo=<dateTime>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "analytics", "events"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "dateFrom",
                          "value": "<dateTime>"
                        },
                        {
                          "key": "dateTo",
                          "value": "<dateTime>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for retrieving platform analytics data."
        },
        {
          "name": "Messaging",
          "item": [
            {
              "name": "Sign a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"didUrl\": \"<string>\",\n  \"payload\": \"<object>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "sign"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Accepts a message payload and signs it with a JWS (JSON Web Signature) using the a specific key from the DID (Decentralized Identifier) provided in the request.\n\n### **Analytic events**\n* MESSAGING_SIGN_START\n* MESSAGING_SIGN_SUCCESS\n* MESSAGING_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "Message signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"didUrl\": \"<string>\",\n  \"payload\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "\"<string>\""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"didUrl\": \"<string>\",\n  \"payload\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Verify a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"jws\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "verify"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Verifies the signature of a provided JWS (JSON Web Signature), validating that the payload has not been tampered with and verifying that the kid in the JWS header is the same as the `iss` value in the Request Object.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n### **Analytic events**\n* MESSAGING_VERIFY_START\n* MESSAGING_VERIFY_SUCCESS\n* MESSAGING_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification successful",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jws\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"didUrl\": \"<string>\",\n  \"did\": \"<string>\",\n  \"verified\": \"<boolean>\",\n  \"payload\": \"<string>\"\n}"
                },
                {
                  "name": "Invalid JWS",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jws\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Encrypt a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"senderDidUrl\": \"<string>\",\n  \"recipientDidUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"payload\": \"<object>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/encrypt",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "encrypt"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Encrypts the provided payload using into a JWM (JSON Web Message) format.\n\n### **Analytic events**\n* MESSAGING_ENCRYPT_START\n* MESSAGING_ENCRYPT_SUCCESS\n* MESSAGING_ENCRYPT_FAIL\n"
              },
              "response": [
                {
                  "name": "Message encrypted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"senderDidUrl\": \"<string>\",\n  \"recipientDidUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"payload\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/encrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "encrypt"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"jwe\": {\n    \"protected\": \"<string>\",\n    \"recipients\": [\n      {\n        \"encryption_key\": \"<string>\",\n        \"header\": {\n          \"alg\": \"<string>\",\n          \"kid\": \"<string>\",\n          \"epk\": {\n            \"kty\": \"<string>\",\n            \"crv\": \"<string>\",\n            \"x\": \"<string>\"\n          },\n          \"skid\": \"<string>\"\n        }\n      }\n    ],\n    \"ciphertext\": \"<string>\",\n    \"iv\": \"<string>\",\n    \"tag\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"senderDidUrl\": \"<string>\",\n  \"recipientDidUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"payload\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/encrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "encrypt"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Decrypt a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"jwe\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/decrypt",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "decrypt"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Decrypts a provided message where the tenant manages the keys for the defined `recipientDidUrl`.\n\n### **Analytic events**\n* MESSAGING_DECRYPT_START\n* MESSAGING_DECRYPT_SUCCESS\n* MESSAGING_DECRYPT_FAIL"
              },
              "response": [
                {
                  "name": "Message Decrypted",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jwe\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/decrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "decrypt"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"payload\": \"<string>\",\n  \"senderDidUrl\": \"<string>\",\n  \"senderPublicJwk\": \"<object>\",\n  \"recipientDidUrl\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jwe\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/decrypt",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "decrypt"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Send a message",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"to\": \"<string>\",\n  \"message\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/send",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "send"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Sends an encrypted JWM (JSON Web Messaging) format message to a service endpoint defined in a public DID document.\n\n### **Analytic events**\n* MESSAGING_SEND_START\n* MESSAGING_SEND_SUCCESS\n* MESSAGING_SEND_FAIL"
              },
              "response": [
                {
                  "name": "Message sent",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"to\": \"<string>\",\n  \"message\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/send",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "send"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"to\": \"<string>\",\n  \"message\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/send",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "send"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for signing, encrypting, decrypting and sending messages."
        },
        {
          "name": "Inboxes",
          "item": [
            {
              "name": "Create an inbox",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates an inbox that can register DIDs and then hold messages sent to those DIDs service points.\n\n### **Analytic events**\n* MESSAGING_INBOX_CREATE_START\n* MESSAGING_INBOX_CREATE_SUCCESS\n* MESSAGING_INBOX_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Inbox created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "List inboxes",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all inboxes on the tenant.\n\n### **Analytic events**\n* MESSAGING_INBOX_RETRIEVE_LIST_START\n* MESSAGING_INBOX_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of inboxes",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve an inbox",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Inbox ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an inbox based on its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_RETRIEVE_START\n* MESSAGING_INBOX_RETRIEVE_SUCCESS\n* MESSAGING_INBOX_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Inbox returned",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update an inbox",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Inbox ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Update the inbox configurations"
              },
              "response": [
                {
                  "name": "Inbox updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete an inbox",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Inbox ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_DELETE_START\n* MESSAGING_INBOX_DELETE_SUCCESS\n* MESSAGING_INBOX_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Inbox deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "messaging", "inboxes", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Register DID with an inbox",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"did\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Register the provided DID to the requested inbox.\n\n> DID registration with inboxes is currently limited to `did:key`'\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_REGISTER_START\n* MESSAGING_INBOX_DID_REGISTER_SUCCESS\n* MESSAGING_INBOX_DID_REGISTER_FAIL"
              },
              "response": [
                {
                  "name": "DID registered with inbox",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"did\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"did\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"did\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"did\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve inbox DIDs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "messaging", "inboxes", ":id", "dids"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a list of all the DIDs registered with the requested inbox.\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_START\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_DID_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of inbox DIDs",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Unregister DID with an inbox",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v1",
                    "messaging",
                    "inboxes",
                    ":id",
                    "dids",
                    ":did"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "did",
                      "value": "<string>",
                      "description": "(Required) DID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Unregisters a DID from the requested inbox.\n\n### **Analytic events**\n* MESSAGING_INBOX_DID_UNREGISTER_START\n* MESSAGING_INBOX_DID_UNREGISTER_SUCCESS\n* MESSAGING_INBOX_DID_UNREGISTER_FAIL"
              },
              "response": [
                {
                  "name": "DID unregistered from inbox",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids",
                        ":did"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "did",
                          "value": "<string>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids",
                        ":did"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "did",
                          "value": "<string>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/dids/:did",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "dids",
                        ":did"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "did",
                          "value": "<string>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve all messages",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v1",
                    "messaging",
                    "inboxes",
                    ":id",
                    "messages"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieving all the messages from an inbox\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_START\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_SUCCESS\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of inbox messages",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"name\": \"<string>\",\n      \"createdAt\": \"<date>\",\n      \"id\": \"<string>\",\n      \"inboxId\": \"<string>\",\n      \"payload\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"createdAt\": \"<date>\",\n      \"id\": \"<string>\",\n      \"inboxId\": \"<string>\",\n      \"payload\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve a message",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v1",
                    "messaging",
                    "inboxes",
                    ":id",
                    "messages",
                    ":messageid"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "messageid",
                      "value": "<string>",
                      "description": "(Required) Requested message ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a message from the requested inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_START\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_SUCCESS\n* MESSAGING_INBOX_MESSAGE_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "An inbox message",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages",
                        ":messageid"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "messageid",
                          "value": "<string>",
                          "description": "(Required) Requested message ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"createdAt\": \"<date>\",\n  \"id\": \"<string>\",\n  \"inboxId\": \"<string>\",\n  \"payload\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages",
                        ":messageid"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "messageid",
                          "value": "<string>",
                          "description": "(Required) Requested message ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages",
                        ":messageid"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "messageid",
                          "value": "<string>",
                          "description": "(Required) Requested message ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a message",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v1",
                    "messaging",
                    "inboxes",
                    ":id",
                    "messages",
                    ":messageid"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Requested inbox ID"
                    },
                    {
                      "key": "messageid",
                      "value": "<string>",
                      "description": "(Required) Requested message ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes a message from the requested inbox by providing its ID.\n\n### **Analytic events**\n* MESSAGING_INBOX_MESSAGE_DELETE_START\n* MESSAGING_INBOX_MESSAGE_DELETE_SUCCESS\n* MESSAGING_INBOX_MESSAGE_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Message deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages",
                        ":messageid"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "messageid",
                          "value": "<string>",
                          "description": "(Required) Requested message ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages",
                        ":messageid"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "messageid",
                          "value": "<string>",
                          "description": "(Required) Requested message ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/messaging/inboxes/:id/messages/:messageid",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "messaging",
                        "inboxes",
                        ":id",
                        "messages",
                        ":messageid"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Requested inbox ID"
                        },
                        {
                          "key": "messageid",
                          "value": "<string>",
                          "description": "(Required) Requested message ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing inboxes."
        }
      ]
    },
    {
      "name": "Tenant configuration",
      "item": [
        {
          "name": "Security",
          "item": [
            {
              "name": "Create API Auth Token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\",\n  \"audience\": \"<string>\",\n  \"grant_type\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{oauth-token-Url}}/oauth/token",
                  "host": ["{{oauth-token-Url}}"],
                  "path": ["oauth", "token"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Authorization endpoint for gaining token used for API requests requiring `bearerAuth`.\n\nYou will be provided the required `client_id` and `client_secret` as part of onboarding.\n\n> The returned bearer token will only enable access to endpoints as per your client's defined role. Refer to [Access Control](https://learn.mattr.global/docs/platform-management/access-control) for more information."
              },
              "response": [
                {
                  "name": "Successful response",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\",\n  \"audience\": \"<string>\",\n  \"grant_type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{oauth-token-Url}}/oauth/token",
                      "host": ["{{oauth-token-Url}}"],
                      "path": ["oauth", "token"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"access_token\": \"<string>\",\n  \"expires_in\": \"<number>\",\n  \"token_type\": \"<string>\"\n}"
                },
                {
                  "name": "Unauthorized",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"client_id\": \"<string>\",\n  \"client_secret\": \"<string>\",\n  \"audience\": \"<string>\",\n  \"grant_type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{oauth-token-Url}}/oauth/token",
                      "host": ["{{oauth-token-Url}}"],
                      "path": ["oauth", "token"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"error\": \"<string>\",\n  \"error_description\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for accessing protected endpoints."
        },
        {
          "name": "Custom Domain",
          "item": [
            {
              "name": "Configure custom domain",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a custom domain configuration on your tenant. You can configure a custom domain for a specific MATTR VII tenant to represent your brand and instil trust with your end-users. Any MATTR VII tenant can only have one custom domain. Refer to our [docs](https://learn.mattr.global/docs/capabilities/platform-management/custom) for more information.\n\n> Custom domains are only available as part of our paid plans, and trial accounts do not include ongoing access to custom domains. The APIs are available for you to trial the feature, but they may be deactivated unless you switch to a paid plan.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_CREATE_START\n* CONFIG_CUSTOM_DOMAIN_CREATE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Custom domain created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"verificationToken\": \"<string>\",\n  \"isVerified\": \"<boolean>\",\n  \"verifiedAt\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve custom domain",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns your tenant's custom domain configuration and its verification status.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_START\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Custom domain returned",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"verificationToken\": \"<string>\",\n  \"isVerified\": \"<boolean>\",\n  \"verifiedAt\": \"<string>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete custom domain",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes the custom domain configuration on your tenant.\n\n> Deleting your custom domain configuration breaks the linkage with any credentials issued under the custom domain. These credentials will no longer be valid.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_DELETE_START\n* CONFIG_CUSTOM_DOMAIN_DELETE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Custom domain deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update custom domain",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"id\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates the custom domain configuration.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_UPDATE_START\n* CONFIG_CUSTOM_DOMAIN_UPDATE_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Custom Domain updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"id\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"verificationToken\": \"<string>\",\n  \"isVerified\": \"<boolean>\",\n  \"verifiedAt\": \"<string>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"logoUrl\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"id\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Verify custom domain",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "config", "domain", "verify"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Verifies that you have control of the configured custom domain by examining its TXT record.\n\n> Your custom domain will not be active until you verify it. Refer to [Verify domain ownership](https://learn.mattr.global/docs/capabilities/platform-management/custom#verify-domain-ownership) for more information.\n\n### **Analytic events**\n* CONFIG_CUSTOM_DOMAIN_VERIFY_START\n* CONFIG_CUSTOM_DOMAIN_VERIFY_SUCCESS\n* CONFIG_CUSTOM_DOMAIN_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Custom domain verified",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/config/domain/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "config", "domain", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing custom domains."
        },
        {
          "name": "DIDs",
          "item": [
            {
              "name": "Well known DID configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/.well-known/did-configuration",
                  "host": ["{{baseUrl}}"],
                  "path": [".well-known", "did-configuration"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant. These are automatically created for **all** DIDS created on a tenant so that they can be used by any party aiming to establish and verify the domain-DID linkage by exposing cryptographic proofs. Thus, this endpoint is unprotected, public facing and can be deterministically found at the root of the tenant subdomain or alias by any party. Refer to [Well Known DID Configuration](https://identity.foundation/.well-known/resources/did-configuration) on the Decentralized Identity Foundation website for more information.\n"
              },
              "response": [
                {
                  "name": "List of DID Configuration entries",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/did-configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [".well-known", "did-configuration"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"entries\": [\n    {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"issuanceDate\": \"<dateTime>\",\n      \"credentialSubject\": {\n        \"givenName\": \"<string>\",\n        \"familyName\": \"<string>\",\n        \"alumniOf\": \"<string>\"\n      },\n      \"proof\": {\n        \"type\": \"<string>\",\n        \"created\": \"<dateTime>\",\n        \"jws\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"verificationMethod\": \"<string>\"\n      },\n      \"issuer\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"logoUrl\": \"<string>\",\n        \"iconUrl\": \"<string>\"\n      },\n      \"credentialBranding\": {\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImageUrl\": \"<string>\"\n      },\n      \"credentialStatus\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"revocationListIndex\": \"<integer>\",\n        \"revocationListCredential\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    },\n    {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"issuanceDate\": \"<dateTime>\",\n      \"credentialSubject\": {\n        \"givenName\": \"<string>\",\n        \"familyName\": \"<string>\",\n        \"alumniOf\": \"<string>\"\n      },\n      \"proof\": {\n        \"type\": \"<string>\",\n        \"created\": \"<dateTime>\",\n        \"jws\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"verificationMethod\": \"<string>\"\n      },\n      \"issuer\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"logoUrl\": \"<string>\",\n        \"iconUrl\": \"<string>\"\n      },\n      \"credentialBranding\": {\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImageUrl\": \"<string>\"\n      },\n      \"credentialStatus\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"revocationListIndex\": \"<integer>\",\n        \"revocationListCredential\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"description\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Create a DID",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"method\": \"<string>\",\n  \"options\": {\n    \"keyType\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Takes a supported [DID method](https://learn.mattr.global/docs/formats/json/dids#methods) and returns a new DID with its generated keys and required information. This endpoint also registers the DID Document when applicable.\n\nMATTR VII currently supports creating DIDs of the following methods:\n- **did:key**: The most basic type of DID. The public key forms the DID and has no further data associated with it.\n- **did:web**: This type of DID requires hosting the DID document on a publicly accessible domain in order to make the document and its contents available.\n\n### **Analytic events**\n* DID_CREATE_START\n* DID_CREATE_SUCCESS\n* DID_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "DID document created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"method\": \"<string>\",\n  \"options\": {\n    \"keyType\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"registrationStatus\": \"<string>\",\n  \"did\": \"<string>\",\n  \"metadata\": {\n    \"keys\": [\n      {\n        \"kmsKeyId\": \"<string>\",\n        \"didDocumentKeyId\": \"<string>\"\n      },\n      {\n        \"kmsKeyId\": \"<string>\",\n        \"didDocumentKeyId\": \"<string>\"\n      }\n    ],\n    \"registered\": \"<number>\",\n    \"initialDidDocument\": \"<object>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"method\": \"<string>\",\n  \"options\": {\n    \"keyType\": \"<string>\",\n    \"url\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a list of DIDs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n\n### **Analytic events**\n* DID_RETRIEVE_LIST_START\n* DID_RETRIEVE_LIST_SUCCESS\n* DID_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "A list of DIDs",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"did\": \"<string>\",\n      \"localMetadata\": {\n        \"keys\": [\n          {\n            \"kmsKeyId\": \"<string>\",\n            \"didDocumentKeyId\": \"<string>\"\n          },\n          {\n            \"kmsKeyId\": \"<string>\",\n            \"didDocumentKeyId\": \"<string>\"\n          }\n        ],\n        \"registered\": \"<number>\",\n        \"initialDidDocument\": \"<object>\"\n      }\n    },\n    {\n      \"did\": \"<string>\",\n      \"localMetadata\": {\n        \"keys\": [\n          {\n            \"kmsKeyId\": \"<string>\",\n            \"didDocumentKeyId\": \"<string>\"\n          },\n          {\n            \"kmsKeyId\": \"<string>\",\n            \"didDocumentKeyId\": \"<string>\"\n          }\n        ],\n        \"registered\": \"<number>\",\n        \"initialDidDocument\": \"<object>\"\n      }\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Resolve a DID",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<did>",
                      "description": "(Required) DID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a DID and its metadata from the tenant by its URI. This may involve a network call depending on the method involved:\n- For did:key the public key is encapsulated in the DID URI itself.\n- For did:web it must be resolved by accessing the `/.well-known/did.json` path on its domain.\n\n### **Analytic events**\n* DID_RETRIEVE_START\n* DID_RETRIEVE_SUCCESS\n* DID_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "A DID Document and its meta-data",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<did>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"did\": \"<object>\",\n  \"registrationStatus\": \"<string>\",\n  \"localMetadata\": {\n    \"keys\": [\n      {\n        \"kmsKeyId\": \"<string>\",\n        \"didDocumentKeyId\": \"<string>\"\n      },\n      {\n        \"kmsKeyId\": \"<string>\",\n        \"didDocumentKeyId\": \"<string>\"\n      }\n    ],\n    \"registered\": \"<number>\",\n    \"initialDidDocument\": \"<object>\"\n  }\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<did>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a DID",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/dids/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "dids", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<did>",
                      "description": "(Required) DID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes a DID and all associated metadata by providing its URI. This includes all the removal of all associated private keys from the Key Management System (KMS).\n> For `did:web` you will need to manually remove the `did.json` from your hosted domain.\n\n### **Analytic events**\n* DID_DELETE_START\n* DID_DELETE_SUCCESS\n* DID_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "DID successfully deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<did>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<did>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/dids/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "dids", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<did>",
                          "description": "(Required) DID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing DIDs."
        },
        {
          "name": "IACA",
          "item": [
            {
              "name": "Create an IACA",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"commonName\": \"{tenantDomain} IACA\",\n  \"country\": \"<string>\",\n  \"notBefore\": \"<string>\",\n  \"notAfter\": \"<string>\",\n  \"active\": true,\n  \"stateOrProvinceName\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new IACA that can be used to sign new Document Signer Certificates (DSCs).\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_CREATE_START\n* MOBILE_CREDENTIAL_IACA_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_IACA_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "IACA created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"commonName\": \"{tenantDomain} IACA\",\n  \"country\": \"<string>\",\n  \"notBefore\": \"<string>\",\n  \"notAfter\": \"<string>\",\n  \"active\": true,\n  \"stateOrProvinceName\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"active\": \"<boolean>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateData\": {\n    \"notAfter\": \"<date>\",\n    \"notBefore\": \"<date>\",\n    \"country\": \"<string>\",\n    \"commonName\": \"{tenantDomain} IACA\",\n    \"stateOrProvinceName\": \"<string>\"\n  },\n  \"publicKeyJwk\": \"<object>\",\n  \"certificateFingerprint\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"commonName\": \"{tenantDomain} IACA\",\n  \"country\": \"<string>\",\n  \"notBefore\": \"<string>\",\n  \"notAfter\": \"<string>\",\n  \"active\": true,\n  \"stateOrProvinceName\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all IACAs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves all existing IACAs from the tenant.\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "IACAs Retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "iacas"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"active\": \"<boolean>\",\n      \"certificatePem\": \"<string>\",\n      \"certificateData\": {\n        \"notAfter\": \"<date>\",\n        \"notBefore\": \"<date>\",\n        \"country\": \"<string>\",\n        \"commonName\": \"{tenantDomain} IACA\",\n        \"stateOrProvinceName\": \"<string>\"\n      },\n      \"publicKeyJwk\": \"<object>\",\n      \"certificateFingerprint\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"active\": \"<boolean>\",\n      \"certificatePem\": \"<string>\",\n      \"certificateData\": {\n        \"notAfter\": \"<date>\",\n        \"notBefore\": \"<date>\",\n        \"country\": \"<string>\",\n        \"commonName\": \"{tenantDomain} IACA\",\n        \"stateOrProvinceName\": \"<string>\"\n      },\n      \"publicKeyJwk\": \"<object>\",\n      \"certificateFingerprint\": \"<string>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve an IACA",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas", ":iacaId"],
                  "variable": [
                    {
                      "key": "iacaId",
                      "value": "<uuid>",
                      "description": "(Required) IACA ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an existing IACA by providing its ID.\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_START\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_IACA_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "IACA retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"active\": \"<boolean>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateData\": {\n    \"notAfter\": \"<date>\",\n    \"notBefore\": \"<date>\",\n    \"country\": \"<string>\",\n    \"commonName\": \"{tenantDomain} IACA\",\n    \"stateOrProvinceName\": \"<string>\"\n  },\n  \"publicKeyJwk\": \"<object>\",\n  \"certificateFingerprint\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update IACA",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"active\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas", ":iacaId"],
                  "variable": [
                    {
                      "key": "iacaId",
                      "value": "<uuid>",
                      "description": "(Required) IACA ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Update the status of an IACA. Only active IACAs can be used for signing mDocs.\n\nCreating an IACA with `active` set to `false` enables distributing the IACA's PEM to relying parties in advance, before it is being used to sign mDocs.\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_UPDATE_START\n* MOBILE_CREDENTIAL_IACA_UPDATE_SUCCESS\n* MOBILE_CREDENTIAL_IACA_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "IACA updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"active\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"active\": \"<boolean>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateData\": {\n    \"notAfter\": \"<date>\",\n    \"notBefore\": \"<date>\",\n    \"country\": \"<string>\",\n    \"commonName\": \"{tenantDomain} IACA\",\n    \"stateOrProvinceName\": \"<string>\"\n  },\n  \"publicKeyJwk\": \"<object>\",\n  \"certificateFingerprint\": \"<string>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"active\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete an IACA",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "iacas", ":iacaId"],
                  "variable": [
                    {
                      "key": "iacaId",
                      "value": "<uuid>",
                      "description": "(Required) IACA ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing IACA by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_IACA_DELETE_START\n* MOBILE_CREDENTIAL_IACA_DELETE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_IACA_DELETE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "IACA deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/iacas/:iacaId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "iacas",
                        ":iacaId"
                      ],
                      "variable": [
                        {
                          "key": "iacaId",
                          "value": "<uuid>",
                          "description": "(Required) IACA ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing IACAs."
        },
        {
          "name": "Webhooks",
          "item": [
            {
              "name": "Create Webhook",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new webhook for this tenant.\n\n### **Analytic events**\n* WEBHOOK_CREATE_START\n* WEBHOOK_CREATE_SUCCESS\n* WEBHOOK_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhook created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": false\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Webhooks",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a list of webhooks configured on the tenant.\n\n### **Analytic events**\n* WEBHOOK_RETRIEVE_LIST_START\n* WEBHOOK_RETRIEVE_LIST_SUCCESS\n* WEBHOOK_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhooks retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"events\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"url\": \"<uri>\",\n      \"disabled\": false\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"events\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"url\": \"<uri>\",\n      \"disabled\": false\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Webhook",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) The requested Webhook ID."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve a specific Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_RETRIEVE_START\n* WEBHOOK_RETRIEVE_SUCCESS\n* WEBHOOK_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhook retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) The requested Webhook ID."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": false\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) The requested Webhook ID."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Update Webhook",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Webhook ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_UPDATE_START\n* WEBHOOK_UPDATE_SUCCESS\n* WEBHOOK_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Webhook updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Webhook ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": false\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Webhook ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"events\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"url\": \"<uri>\",\n  \"disabled\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Webhook ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete Webhook",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Webhook ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes a Webhook by providing its ID.\n\n### **Analytic events**\n* WEBHOOK_DELETE_START\n* WEBHOOK_DELETE_SUCCESS\n* WEBHOOK_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Webhook deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Webhook ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Webhook ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Webhook ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve Webhook JWKs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/webhooks/jwks",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "webhooks", "jwks"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a list of Webhook JWKs (JSON Web Keys) from the tenant. These keys can be used to verify the HTTP signature and validate the integrity and authorship of generated Webhooks. This endpoint does not require authentication and is publicly available by design.\n"
              },
              "response": [
                {
                  "name": "Webhook JWKs retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/webhooks/jwks",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "webhooks", "jwks"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"keys\": [\n    {\n      \"kty\": \"<string>\",\n      \"crv\": \"<string>\",\n      \"x\": \"<string>\",\n      \"use\": \"<string>\",\n      \"kid\": \"<string>\"\n    },\n    {\n      \"kty\": \"<string>\",\n      \"crv\": \"<string>\",\n      \"x\": \"<string>\",\n      \"use\": \"<string>\",\n      \"kid\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing Webhooks."
        }
      ]
    },
    {
      "name": "Ecosystem operations",
      "item": [
        {
          "name": "Ecosystems",
          "item": [
            {
              "name": "Retrieve all ecosystems",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a list of ecosystems.\n### **Analytic events**\n* ECOSYSTEM_RETRIEVE_LIST_START\n* ECOSYSTEM_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystems retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"integrations\": [\n        {\n          \"format\": \"<string>\",\n          \"url\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"integrationResult\": {\n            \"success\": \"<boolean>\",\n            \"lastSyncedAt\": \"<dateTime>\",\n            \"lastModifiedAt\": \"<dateTime>\",\n            \"failReasons\": [\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        },\n        {\n          \"format\": \"<string>\",\n          \"url\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"integrationResult\": {\n            \"success\": \"<boolean>\",\n            \"lastSyncedAt\": \"<dateTime>\",\n            \"lastModifiedAt\": \"<dateTime>\",\n            \"failReasons\": [\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"integrations\": [\n        {\n          \"format\": \"<string>\",\n          \"url\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"integrationResult\": {\n            \"success\": \"<boolean>\",\n            \"lastSyncedAt\": \"<dateTime>\",\n            \"lastModifiedAt\": \"<dateTime>\",\n            \"failReasons\": [\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        },\n        {\n          \"format\": \"<string>\",\n          \"url\": \"<string>\",\n          \"enabled\": \"<boolean>\",\n          \"integrationResult\": {\n            \"success\": \"<boolean>\",\n            \"lastSyncedAt\": \"<dateTime>\",\n            \"lastModifiedAt\": \"<dateTime>\",\n            \"failReasons\": [\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Create ecosystem",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates an ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREATE_START\n* ECOSYSTEM_CREATE_SUCCESS\n* ECOSYSTEM_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"integrationResult\": {\n        \"success\": \"<boolean>\",\n        \"lastSyncedAt\": \"<dateTime>\",\n        \"lastModifiedAt\": \"<dateTime>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ]\n      }\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"integrationResult\": {\n        \"success\": \"<boolean>\",\n        \"lastSyncedAt\": \"<dateTime>\",\n        \"lastModifiedAt\": \"<dateTime>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ]\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Sync ecosystem",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/sync",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", "sync"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Synchronizes all configured consumptions and integrations by retrieving the most recent trust information.\n### **Analytic events**\n* ECOSYSTEM_TENANT_SYNC_ALL_START\n* ECOSYSTEM_TENANT_SYNC_ALL_SUCCESS\n* ECOSYSTEM_TENANT_SYNC_ALL_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem sync request accepted.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/sync",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "sync"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Accepted",
                  "code": 202,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"tenantConfiguration\": {\n    \"ecosystems\": [\n      {\n        \"url\": \"<string>\"\n      },\n      {\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/sync",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "sync"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve ecosystem",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_RETRIEVE_START\n* ECOSYSTEM_RETRIEVE_SUCCESS\n* ECOSYSTEM_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"integrationResult\": {\n        \"success\": \"<boolean>\",\n        \"lastSyncedAt\": \"<dateTime>\",\n        \"lastModifiedAt\": \"<dateTime>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ]\n      }\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"integrationResult\": {\n        \"success\": \"<boolean>\",\n        \"lastSyncedAt\": \"<dateTime>\",\n        \"lastModifiedAt\": \"<dateTime>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ]\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update ecosystem",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_UPDATE_START\n* ECOSYSTEM_UPDATE_SUCCESS\n* ECOSYSTEM_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"integrationResult\": {\n        \"success\": \"<boolean>\",\n        \"lastSyncedAt\": \"<dateTime>\",\n        \"lastModifiedAt\": \"<dateTime>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ]\n      }\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"integrationResult\": {\n        \"success\": \"<boolean>\",\n        \"lastSyncedAt\": \"<dateTime>\",\n        \"lastModifiedAt\": \"<dateTime>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ]\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"integrations\": [\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"url\": \"<string>\",\n      \"enabled\": \"<boolean>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete ecosystem",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_DELETE_START\n* ECOSYSTEM_DELETE_SUCCESS\n* ECOSYSTEM_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing ecosystems."
        },
        {
          "name": "Participants",
          "item": [
            {
              "name": "Retrieve participants",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a list of participants from the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_START\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Participants retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"identifiers\": {\n        \"web-semantic\": \"<string>\",\n        \"compact-semantic\": \"<string>\",\n        \"compact\": \"<string>\",\n        \"mobile\": [\n          {\n            \"certificatePem\": \"<string>\",\n            \"status\": \"<string>\"\n          }\n        ]\n      },\n      \"isIssuer\": false,\n      \"isVerifier\": false,\n      \"isIssuerConstrained\": true,\n      \"isVerifierConstrained\": true,\n      \"status\": \"Inactive\",\n      \"country\": \"<string>\",\n      \"stateOrProvince\": \"<string>\",\n      \"contacts\": [\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        },\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"identifiers\": {\n        \"web-semantic\": \"<string>\",\n        \"compact-semantic\": \"<string>\",\n        \"compact\": \"<string>\",\n        \"mobile\": [\n          {\n            \"certificatePem\": \"<string>\",\n            \"status\": \"<string>\"\n          }\n        ]\n      },\n      \"isIssuer\": false,\n      \"isVerifier\": false,\n      \"isIssuerConstrained\": true,\n      \"isVerifierConstrained\": true,\n      \"status\": \"Inactive\",\n      \"country\": \"<string>\",\n      \"stateOrProvince\": \"<string>\",\n      \"contacts\": [\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        },\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Create participant",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "participants"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_CREATE_START\n* ECOSYSTEM_PARTICIPANT_CREATE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Participant created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"ecosystemId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve participant",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a participant from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_START\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Participant retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"ecosystemId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update participant",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates a participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_UPDATE_START\n* ECOSYSTEM_PARTICIPANT_UPDATE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Participant updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"ecosystemId\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"identifiers\": {\n    \"web-semantic\": \"<string>\",\n    \"compact-semantic\": \"<string>\",\n    \"compact\": \"<string>\",\n    \"mobile\": [\n      {\n        \"certificatePem\": \"<string>\",\n        \"status\": \"<string>\"\n      }\n    ]\n  },\n  \"isIssuer\": false,\n  \"isVerifier\": false,\n  \"isIssuerConstrained\": true,\n  \"isVerifierConstrained\": true,\n  \"status\": \"Inactive\",\n  \"country\": \"<string>\",\n  \"stateOrProvince\": \"<string>\",\n  \"contacts\": [\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    },\n    {\n      \"phoneNumber\": \"<string>\",\n      \"address\": \"<string>\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete participant",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes a participant in the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_PARTICIPANT_DELETE_START\n* ECOSYSTEM_PARTICIPANT_DELETE_SUCCESS\n* ECOSYSTEM_PARTICIPANT_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Participant deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing ecosystem participants."
        },
        {
          "name": "Credential types",
          "item": [
            {
              "name": "Create credential type",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new credential type in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_CREATE_START\n* ECOSYSTEM_CREDENTIAL_CREATE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Credential type created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"ecosystemId\": \"<uuid>\",\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve credential types",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "credentials"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a list of credential types from the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_START\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_SUCCESS\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Credential types retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"profile\": \"<string>\",\n      \"type\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"profile\": \"<string>\",\n      \"type\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve credential type",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "credentials",
                    ":credentialId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a credential type from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_START\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Credential type retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"ecosystemId\": \"<uuid>\",\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete credential type",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "credentials",
                    ":credentialId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes a credential type from the requested ecosystem by its ID.\n### **Analytic events**\n* ECOSYSTEM_CREDENTIAL_DELETE_START\n* ECOSYSTEM_CREDENTIAL_DELETE_SUCCESS\n* ECOSYSTEM_CREDENTIAL_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Credential type deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing ecosystem credential types."
        },
        {
          "name": "Policy",
          "item": [
            {
              "name": "Publish policy",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "policies"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Publish a new version of the ecosystem policy. Only active and currently valid participants and IACA certificates are included in the policy.\n### **Analytic events**\n* ECOSYSTEM_POLICY_CREATE_START\n* ECOSYSTEM_POLICY_CREATE_SUCCESS\n* ECOSYSTEM_POLICY_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem policy published",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "policies"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"policyPublishedAt\": \"<dateTime>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "policies"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "policies"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "policies"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve latest ecosystem policy",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "If-None-Match",
                    "value": "<string>",
                    "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since."
                  },
                  {
                    "key": "Accept-Encoding",
                    "value": "<string>",
                    "description": "Use the Accept-Encoding header to specify the supported content encodings."
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies/public/latest",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "policies",
                    "public",
                    "latest"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an ecosystem policy by providing the ecosystem ID.\n### **Analytic events**\n* ECOSYSTEM_POLICY_RETRIEVE_LATEST_START\n* ECOSYSTEM_POLICY_RETRIEVE_LATEST_SUCCESS\n* ECOSYSTEM_POLICY_RETRIEVE_LATEST_FAIL"
              },
              "response": [
                {
                  "name": "Latest ecosystem policy retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since."
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "<string>",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings."
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies/public/latest",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "policies",
                        "public",
                        "latest"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "ETag",
                      "value": "<byte>",
                      "description": "An Entity Tag (ETag) is a unique identifier assigned to a specific version of a resource. It allows clients to check if a resource has been modified since it was last retrieved."
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"policyModifiedAt\": \"<dateTime>\",\n  \"policyPublishedAt\": \"<dateTime>\",\n  \"credentials\": {\n    \"599bf148-d711-405a-a20b-9c8a87ac8850\": {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"profile\": \"<string>\",\n      \"type\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  \"participants\": {\n    \"a24e391a-c27f-4b6e-9805-1ee7e03f3c58\": {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"identifiers\": {\n        \"web-semantic\": \"<string>\",\n        \"compact-semantic\": \"<string>\",\n        \"compact\": \"<string>\",\n        \"mobile\": [\n          {\n            \"certificatePem\": \"<string>\",\n            \"status\": \"<string>\"\n          }\n        ]\n      },\n      \"isIssuer\": false,\n      \"isVerifier\": false,\n      \"isIssuerConstrained\": true,\n      \"isVerifierConstrained\": true,\n      \"status\": \"Inactive\",\n      \"country\": \"<string>\",\n      \"stateOrProvince\": \"<string>\",\n      \"contacts\": [\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        },\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        }\n      ],\n      \"issuerAllowedCredentials\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"verifierAllowedCredentials\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    }\n  }\n}"
                },
                {
                  "name": "Not Modified. The resource has not been modified since the last request.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since."
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "<string>",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings."
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies/public/latest",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "policies",
                        "public",
                        "latest"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Modified",
                  "code": 304,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "If-None-Match",
                        "value": "<string>",
                        "description": "The If-None-Match parameter enables caching. Specify the ETag of the latest retrieved policy version, so that the policy is only retrieved if it had changed since."
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "<string>",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings."
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/policies/public/latest",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "policies",
                        "public",
                        "latest"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve ecosystem policy preview",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept-Encoding",
                    "value": "<string>",
                    "description": "Use the Accept-Encoding header to specify the supported content encodings."
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/preview",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "preview"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an ecosystem policy preview by providing the Ecosystem's ID. A policy preview includes all the participants and credential types created in the ecosystem, excluding any participants with expired or inactive IACAs.\n\n### **Analytic events**\n* ECOSYSTEM_POLICY_PREVIEW_RETRIEVE_START\n* ECOSYSTEM_POLICY_PREVIEW_RETRIEVE_SUCCESS\n* ECOSYSTEM_POLICY_PREVIEW_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Ecosystem policy preview retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "<string>",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings."
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/preview",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "preview"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"policyModifiedAt\": \"<dateTime>\",\n  \"credentials\": {\n    \"599bf148-d711-405a-a20b-9c8a87ac8850\": {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"profile\": \"<string>\",\n      \"type\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  },\n  \"participants\": {\n    \"a24e391a-c27f-4b6e-9805-1ee7e03f3c58\": {\n      \"id\": \"<uuid>\",\n      \"ecosystemId\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"identifiers\": {\n        \"web-semantic\": \"<string>\",\n        \"compact-semantic\": \"<string>\",\n        \"compact\": \"<string>\",\n        \"mobile\": [\n          {\n            \"certificatePem\": \"<string>\",\n            \"status\": \"<string>\",\n            \"validationResult\": {\n              \"validated\": \"<boolean>\",\n              \"failReasons\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          }\n        ]\n      },\n      \"isIssuer\": false,\n      \"isVerifier\": false,\n      \"isIssuerConstrained\": true,\n      \"isVerifierConstrained\": true,\n      \"status\": \"Inactive\",\n      \"country\": \"<string>\",\n      \"stateOrProvince\": \"<string>\",\n      \"contacts\": [\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        },\n        {\n          \"phoneNumber\": \"<string>\",\n          \"address\": \"<string>\"\n        }\n      ],\n      \"issuerAllowedCredentials\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ],\n      \"verifierAllowedCredentials\": [\n        \"<uuid>\",\n        \"<uuid>\"\n      ]\n    }\n  }\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept-Encoding",
                        "value": "<string>",
                        "description": "Use the Accept-Encoding header to specify the supported content encodings."
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/preview",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "preview"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for publishing and retrieving an ecosystem policy."
        },
        {
          "name": "Issuer assignment",
          "item": [
            {
              "name": "Create issuer assignment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "issuer",
                    "credentials"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Assigns a credential type to the requested participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_ISSUER_POLICY_CREATE_START\n* ECOSYSTEM_ISSUER_POLICY_CREATE_SUCCESS\n* ECOSYSTEM_ISSUER_POLICY_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Issuer policy created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"ecosystemId\": \"<uuid>\",\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete issuer assignment",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "issuer",
                    "credentials",
                    ":credentialId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Removes a credential type to the requested participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_ISSUER_POLICY_DELETE_START\n* ECOSYSTEM_ISSUER_POLICY_DELETE_SUCCESS\n* ECOSYSTEM_ISSUER_POLICY_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Issuer policy deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/issuer/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "issuer",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for assigning credential types to issuers."
        },
        {
          "name": "Verifier assignment",
          "item": [
            {
              "name": "Create verifier assignment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "verifier",
                    "credentials"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Assigns a credential type to the requested participant in the requested ecosystem.\n### **Analytic events**\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_START\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_SUCCESS\n* ECOSYSTEM_VERIFIER_POLICY_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Verifier policy created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"ecosystemId\": \"<uuid>\",\n  \"profile\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentialId\": \"<uuid>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Delete verifier assignment",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "participants",
                    ":participantId",
                    "verifier",
                    "credentials",
                    ":credentialId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "participantId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the participant"
                    },
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the credential"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Removes a credential type from the requested participant in the requested ecosystem..\n### **Analytic events**\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_START\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_SUCCESS\n* ECOSYSTEM_VERIFIER_POLICY_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Verifier policy deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/participants/:participantId/verifier/credentials/:credentialId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "participants",
                        ":participantId",
                        "verifier",
                        "credentials",
                        ":credentialId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "participantId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the participant"
                        },
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the credential"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for assigning credential types to verifiers."
        },
        {
          "name": "VICAL Configuration",
          "item": [
            {
              "name": "Update VICAL configuration",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"vicalProvider\": \"<string>\",\n  \"vicalProviderFullName\": \"<string>\",\n  \"certificateCountry\": \"<string>\",\n  \"certificateCommonName\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "configuration"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Update the VICAL configuration for the requested ecosystem"
              },
              "response": [
                {
                  "name": "VICAL configuration updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"vicalProvider\": \"<string>\",\n  \"vicalProviderFullName\": \"<string>\",\n  \"certificateCountry\": \"<string>\",\n  \"certificateCommonName\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "configuration"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"vicalProvider\": \"<string>\",\n  \"vicalProviderFullName\": \"<string>\",\n  \"certificateCountry\": \"<string>\",\n  \"certificateCommonName\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"vicalProvider\": \"<string>\",\n  \"vicalProviderFullName\": \"<string>\",\n  \"certificateCountry\": \"<string>\",\n  \"certificateCommonName\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "configuration"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve VICAL configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "configuration"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve the VICAL configuration from the requested ecosystem"
              },
              "response": [
                {
                  "name": "VICAL configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "configuration"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"vicalProvider\": \"<string>\",\n  \"vicalProviderFullName\": \"<string>\",\n  \"certificateCountry\": \"<string>\",\n  \"certificateCommonName\": \"<string>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "configuration"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete VICAL configuration",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "configuration"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Delete the VICAL configuration for the requested ecosystem"
              },
              "response": [
                {
                  "name": "VICAL configuration deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "configuration"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "configuration"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing VICAL configuration."
        },
        {
          "name": "VICAL Certificates",
          "item": [
            {
              "name": "Retrieve VICAL root CA certificate",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/certificates/ca/latest",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "public",
                    "certificates",
                    "ca",
                    "latest"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves the latest VICAL root ca certificate. This can be used by relying parties to verify the signed VICAL."
              },
              "response": [
                {
                  "name": "VICAL root CA certificate retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/certificates/ca/latest",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        "certificates",
                        "ca",
                        "latest"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/certificates/ca/latest",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        "certificates",
                        "ca",
                        "latest"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve VICAL root CA certificate revocation list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/certificates/ca/:caCertificateId/crl",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "public",
                    "certificates",
                    "ca",
                    ":caCertificateId",
                    "crl"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "caCertificateId",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier of the VICAL root CA certificate."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves revocation list for a given VICAL root CA certificate."
              },
              "response": [
                {
                  "name": "Revocation list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/certificates/ca/:caCertificateId/crl",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        "certificates",
                        "ca",
                        ":caCertificateId",
                        "crl"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "caCertificateId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the VICAL root CA certificate."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/certificates/ca/:caCertificateId/crl",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        "certificates",
                        "ca",
                        ":caCertificateId",
                        "crl"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "caCertificateId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier of the VICAL root CA certificate."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing VICAL certificates."
        },
        {
          "name": "VICAL",
          "item": [
            {
              "name": "Create VICAL",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", ":ecosystemId", "vicals"],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a Verified Issuer Certificate Authority List (VICAL) based on the policy of the requested ecosystem. Refer to VICAL ot learn more about the [VICAL](https://learn.mattr.global/docs/digital-trust-service/vical) purpose and data structure."
              },
              "response": [
                {
                  "name": "VICAL created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "vicals"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"vicalIssueID\": \"<integer>\",\n  \"date\": \"<dateTime>\"\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", ":ecosystemId", "vicals"],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Retrieve all VICALs",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "public"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves all VICALs available in the requested ecosystem."
              },
              "response": [
                {
                  "name": "VICALs retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"date\": \"<dateTime>\",\n      \"filename\": \"<string>\",\n      \"vicalIssueID\": \"<integer>\"\n    },\n    {\n      \"date\": \"<dateTime>\",\n      \"filename\": \"<string>\",\n      \"vicalIssueID\": \"<integer>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve latest VICAL",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/cbor"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/latest",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "public",
                    "latest"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves the latest VICAL from the requested ecosystem."
              },
              "response": [
                {
                  "name": "VICAL retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/cbor"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/latest",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        "latest"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Disposition",
                      "value": "<string>",
                      "description": "Indicates file attachment"
                    },
                    {
                      "key": "Content-Length",
                      "value": "<number>",
                      "description": "The size of the file in bytes"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/cbor"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/latest",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        "latest"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve specific VICAL",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/cbor"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/:vicalIssueId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v1",
                    "ecosystems",
                    ":ecosystemId",
                    "vicals",
                    "public",
                    ":vicalIssueId"
                  ],
                  "variable": [
                    {
                      "key": "ecosystemId",
                      "value": "<uuid>",
                      "description": "(Required) The UUID of the ecosystem"
                    },
                    {
                      "key": "vicalIssueId",
                      "value": "<integer>",
                      "description": "(Required) Unique identifier of a specific VICAL version. This numeric value is continuously increased whenever a VICAL is created."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves a specific VICAL from the requested ecosystem by providing the VICAL version identifier."
              },
              "response": [
                {
                  "name": "VICAL retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/cbor"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/:vicalIssueId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        ":vicalIssueId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "vicalIssueId",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of a specific VICAL version. This numeric value is continuously increased whenever a VICAL is created."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Disposition",
                      "value": "<string>",
                      "description": "Indicates file attachment"
                    },
                    {
                      "key": "Content-Length",
                      "value": "<number>",
                      "description": "The size of the file in bytes"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/cbor"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/:ecosystemId/vicals/public/:vicalIssueId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v1",
                        "ecosystems",
                        ":ecosystemId",
                        "vicals",
                        "public",
                        ":vicalIssueId"
                      ],
                      "variable": [
                        {
                          "key": "ecosystemId",
                          "value": "<uuid>",
                          "description": "(Required) The UUID of the ecosystem"
                        },
                        {
                          "key": "vicalIssueId",
                          "value": "<integer>",
                          "description": "(Required) Unique identifier of a specific VICAL version. This numeric value is continuously increased whenever a VICAL is created."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for publishing and retrieving an ecosystem policy as a VICAL."
        },
        {
          "name": "Validation",
          "item": [
            {
              "name": "Validate issuer",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/issuer-validation",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", "issuer-validation"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Validates that an issuer is allowed to issue a specific credential format according to the ecosystem policy.\n\n### **Analytics events**\n* ECOSYSTEM_VALIDATE_PARTICIPANT_START\n* ECOSYSTEM_VALIDATE_PARTICIPANT_SUCCESS\n* ECOSYSTEM_VALIDATE_PARTICIPANT_FAIL\n"
              },
              "response": [
                {
                  "name": "Validation completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/issuer-validation",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "issuer-validation"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"validated\": \"<boolean>\",\n  \"policyVersion\": \"<string>\",\n  \"identifier\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/issuer-validation",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "issuer-validation"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/issuer-validation",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "issuer-validation"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Validate verifier",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v1/ecosystems/verifier-validation",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "ecosystems", "verifier-validation"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Validates that a verifier is allowed to verify a specific credential format according to the ecosystem policy.\n\n### **Analytics events**\n* ECOSYSTEM_VALIDATE_PARTICIPANT_START\n* ECOSYSTEM_VALIDATE_PARTICIPANT_SUCCESS\n* ECOSYSTEM_VALIDATE_PARTICIPANT_FAIL\n"
              },
              "response": [
                {
                  "name": "Validation completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/verifier-validation",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "verifier-validation"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"validated\": \"<boolean>\",\n  \"policyVersion\": \"<string>\",\n  \"identifier\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/verifier-validation",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "verifier-validation"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"profile\": \"<string>\",\n  \"identifier\": \"<string>\",\n  \"type\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v1/ecosystems/verifier-validation",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "ecosystems", "verifier-validation"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Direct credential issuance",
      "item": [
        {
          "name": "CWT credentials issuance",
          "item": [
            {
              "name": "Sign a CWT credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": {\n    \"iss\": \"<string>\",\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"revocable\": false,\n  \"isRevoked\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "sign"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a signed CWT credential generated from a provided valid payload.\n\nThe payload can include any number of custom claims, as CWT credentials do not comply with any specific standard or specification.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SIGN_START\n* CREDENTIAL_COMPACT_SIGN_SUCCESS\n* CREDENTIAL_COMPACT_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "CWT credential signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"iss\": \"<string>\",\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"revocable\": false,\n  \"isRevoked\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"encoded\": \"<string>\",\n  \"decoded\": {\n    \"iss\": \"<string>\",\n    \"jti\": \"<string>\",\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": {\n      \"url\": \"<string>\",\n      \"index\": \"<number>\"\n    }\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"iss\": \"<string>\",\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"revocable\": false,\n  \"isRevoked\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Format a CWT credential as a QR code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "image/png"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": \"<string>\",\n  \"width\": \"<number>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "qrcode"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a QR code representation of a CWT credential from a provided encoded string representation of that credential.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_QRCODE_CREATE_START\n* CREDENTIAL_COMPACT_QRCODE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_QRCODE_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "QR code generated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "image/png"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": \"<string>\",\n  \"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "qrcode"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "image/png"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": \"<string>\",\n  \"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "qrcode"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Format a CWT credential as a PDF",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/pdf"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "pdf"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a PDF representation of a provided CWT credential based on an existing PDF template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_CREATE_START\n* CREDENTIAL_COMPACT_PDF_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "PDF created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/pdf"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "pdf"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/pdf"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "pdf"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "pdf"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Format a CWT credential as an Apple Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.apple.pkpass"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    "digital-pass",
                    "apple"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns an Apple Pass representation of a provided CWT credential based on an existing Apple Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Apple Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.apple.pkpass"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "apple"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.apple.pkpass"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "apple"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Format a CWT credential as a Google Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    "digital-pass",
                    "google"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a Google Pass representation of a provided CWT credential based on an existing Google Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Google Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "google"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"redirectTo\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "google"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for issuing CWT credentials."
        },
        {
          "name": "Semantic CWT credentials issuance",
          "item": [
            {
              "name": "Sign a Semantic CWT credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": {\n    \"iss\": \"<string>\",\n    \"vc\": {\n      \"credentialSubject\": {\n        \"minimeb\": \"<string>\"\n      },\n      \"type\": \"<string>\",\n      \"@context\": \"<string>\"\n    },\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\"\n  },\n  \"revocable\": false,\n  \"isRevoked\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "sign"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a signed Semantic CWT credential generated from a provided valid payload.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_START\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "Semantic CWT credential signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"iss\": \"<string>\",\n    \"vc\": {\n      \"credentialSubject\": {\n        \"minimeb\": \"<string>\"\n      },\n      \"type\": \"<string>\",\n      \"@context\": \"<string>\"\n    },\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\"\n  },\n  \"revocable\": false,\n  \"isRevoked\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"encoded\": \"<string>\",\n  \"decoded\": {\n    \"iss\": \"<string>\",\n    \"nbf\": \"<number>\",\n    \"jti\": \"<string>\",\n    \"vc\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": {\n        \"eu0d1\": \"<string>\"\n      }\n    },\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"status\": {\n      \"url\": \"<string>\",\n      \"index\": \"<number>\"\n    }\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"iss\": \"<string>\",\n    \"vc\": {\n      \"credentialSubject\": {\n        \"minimeb\": \"<string>\"\n      },\n      \"type\": \"<string>\",\n      \"@context\": \"<string>\"\n    },\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\"\n  },\n  \"revocable\": false,\n  \"isRevoked\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Format a Semantic CWT credential as a QR code",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "image/png"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": \"<string>\",\n  \"width\": \"<number>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "qrcode"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a QR code representation of a Semantic CWT credential from a provided encoded string representation of that credential.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_QRCODE_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "QR code generated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "image/png"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": \"<string>\",\n  \"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "qrcode"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "image/png"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": \"<string>\",\n  \"width\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/qrcode",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "qrcode"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Format a CWT credential as a PDF",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/pdf"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "pdf"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a PDF representation of a provided CWT credential based on an existing PDF template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "PDF created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/pdf"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "pdf"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/pdf"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "pdf"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", "pdf"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Format a Semantic CWT credential as an Apple Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/vnd.apple.pkpass"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "digital-pass",
                    "apple"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns an Apple Pass representation of a provided Semantic CWT credential based on an existing Apple Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Apple Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/vnd.apple.pkpass"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "apple"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/vnd.apple.pkpass"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "apple"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Format a Semantic CWT credential as a Google Pass",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "digital-pass",
                    "google"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a Google Pass representation of a provided CWT credential based on an existing Google Pass template.\n\n> The request will fail if the provided credential isn't valid or has expired.\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Google Pass created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "google"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"redirectTo\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"templateId\": \"<string>\",\n  \"payload\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "google"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for issuing Semantic CWT credentials."
        },
        {
          "name": "JSON credentials issuance",
          "item": [
            {
              "name": "Sign a JSON credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"logoUrl\": \"<string>\",\n      \"iconUrl\": \"<string>\"\n    },\n    \"credentialSubject\": \"<object>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"credentialBranding\": {\n      \"backgroundColor\": \"<string>\",\n      \"watermarkImageUrl\": \"<string>\"\n    },\n    \"expirationDate\": \"<string>\",\n    \"issuanceDate\": \"<string>\"\n  },\n  \"proofType\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"persist\": false,\n  \"revocable\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "sign"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a signed JSON credential generated from a provided valid payload.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_SIGN_START\n* CREDENTIAL_WEB_SEMANTIC_SIGN_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_SIGN_FAIL"
              },
              "response": [
                {
                  "name": "JSON Credential signed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"logoUrl\": \"<string>\",\n      \"iconUrl\": \"<string>\"\n    },\n    \"credentialSubject\": \"<object>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"credentialBranding\": {\n      \"backgroundColor\": \"<string>\",\n      \"watermarkImageUrl\": \"<string>\"\n    },\n    \"expirationDate\": \"<string>\",\n    \"issuanceDate\": \"<string>\"\n  },\n  \"proofType\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"persist\": false,\n  \"revocable\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"credential\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuanceDate\": \"<dateTime>\",\n    \"credentialSubject\": {\n      \"givenName\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"alumniOf\": \"<string>\"\n    },\n    \"proof\": {\n      \"type\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"jws\": \"<string>\",\n      \"proofPurpose\": \"<string>\",\n      \"verificationMethod\": \"<string>\"\n    },\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"credentialStatus\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"revocationListIndex\": \"<integer>\",\n      \"revocationListCredential\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"issuanceDate\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"credentialStatus\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"revocationListIndex\": \"<integer>\",\n    \"revocationListCredential\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"logoUrl\": \"<string>\",\n      \"iconUrl\": \"<string>\"\n    },\n    \"credentialSubject\": \"<object>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"credentialBranding\": {\n      \"backgroundColor\": \"<string>\",\n      \"watermarkImageUrl\": \"<string>\"\n    },\n    \"expirationDate\": \"<string>\",\n    \"issuanceDate\": \"<string>\"\n  },\n  \"proofType\": \"<string>\",\n  \"tag\": \"<string>\",\n  \"persist\": false,\n  \"revocable\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/sign",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "sign"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for issuing JSON credentials."
        },
        {
          "name": "CWT credential templates",
          "item": [
            {
              "name": "CWT credentials PDF templates",
              "item": [
                {
                  "name": "Create a PDF template",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/zip"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<binary>"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "pdf",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates a CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"fonts\": [\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"title\": \"<string>\"\n  },\n  \"fields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all PDF templates",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "pdf",
                        "templates"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of returned list."
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list of entries."
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves a list of all CWT credentials PDF templates available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF templates retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\",\n      \"fonts\": [\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        }\n      ],\n      \"metadata\": {\n        \"title\": \"<string>\"\n      },\n      \"fields\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\",\n      \"fonts\": [\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        }\n      ],\n      \"metadata\": {\n        \"title\": \"<string>\"\n      },\n      \"fields\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a PDF template",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/zip"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<binary>"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "pdf",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) PDF template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Update an existing CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"fonts\": [\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"title\": \"<string>\"\n  },\n  \"fields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a PDF template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "pdf",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) PDF template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing CWT credentials PDF template using its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"fonts\": [\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"title\": \"<string>\"\n  },\n  \"fields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a PDF template",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "pdf",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) PDF Template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Delete an existing PDF template by providing its ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_PDF_TEMPLATE_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ],
              "description": "Specifies paths and operations for managing CWT credentials PDF templates."
            },
            {
              "name": "CWT credentials Apple Pass templates",
              "item": [
                {
                  "name": "Create an Apple Pass template",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Apple digital pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "fileName",
                          "value": "<string>",
                          "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                          "type": "text"
                        },
                        {
                          "key": "teamIdentifier",
                          "value": "<string>",
                          "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                          "type": "text"
                        },
                        {
                          "key": "passTypeIdentifier",
                          "value": "<string>",
                          "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                          "type": "text"
                        },
                        {
                          "key": "wwdr",
                          "value": "<string>",
                          "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerCert",
                          "value": "<string>",
                          "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                          "type": "text"
                        },
                        {
                          "key": "signerKey",
                          "value": "<string>",
                          "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerKeyPassphrase",
                          "value": "<string>",
                          "description": "(Required) Passphrase for the encrypted key.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "apple",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates an Apple Pass template based on the provided `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n> The Apple Pass template uses the official Apple Pass bundle structure.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"fileName\": \"<string>\",\n    \"teamIdentifier\": \"<string>\",\n    \"passTypeIdentifier\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Apple Pass templates",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "apple",
                        "templates"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of returned list."
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list of entries."
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves a list of all Apple Pass template available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass templates retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"fileName\": \"<string>\",\n        \"teamIdentifier\": \"<string>\",\n        \"passTypeIdentifier\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"fileName\": \"<string>\",\n        \"teamIdentifier\": \"<string>\",\n        \"passTypeIdentifier\": \"<string>\"\n      }\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Update an Apple Pass template",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Apple digital pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "fileName",
                          "value": "<string>",
                          "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                          "type": "text"
                        },
                        {
                          "key": "teamIdentifier",
                          "value": "<string>",
                          "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                          "type": "text"
                        },
                        {
                          "key": "passTypeIdentifier",
                          "value": "<string>",
                          "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                          "type": "text"
                        },
                        {
                          "key": "wwdr",
                          "value": "<string>",
                          "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerCert",
                          "value": "<string>",
                          "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                          "type": "text"
                        },
                        {
                          "key": "signerKey",
                          "value": "<string>",
                          "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerKeyPassphrase",
                          "value": "<string>",
                          "description": "(Required) Passphrase for the encrypted key.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "apple",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Apple Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Updates an existing Apple Pass template by providing its ID and a `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"fileName\": \"<string>\",\n    \"teamIdentifier\": \"<string>\",\n    \"passTypeIdentifier\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve an Apple Pass template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "apple",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Apple Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"fileName\": \"<string>\",\n    \"teamIdentifier\": \"<string>\",\n    \"passTypeIdentifier\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete an Apple Pass template",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "apple",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Apple Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Deletes an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_APPLE_PASS_TEMPLATE_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ],
              "description": "Specifies paths and operations for managing CWT credentials Apple Pass templates."
            },
            {
              "name": "CWT credentials Google Pass templates",
              "item": [
                {
                  "name": "Create a Google Pass template",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Google Pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "issuerId",
                          "value": "<string>",
                          "description": "(Required) Google Wallet Pass signer issuer ID.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountClientEmail",
                          "value": "<string>",
                          "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountPrivateKey",
                          "value": "<string>",
                          "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "google",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates a Google Pass template based on the provided `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass template created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"issuerId\": \"<string>\",\n    \"serviceAccountClientEmail\": \"<string>\",\n    \"payPassId\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Google Pass templates",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "google",
                        "templates"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of returned list."
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list of entries."
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves a list of all Google Pass templates available on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass templates retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"issuerId\": \"<string>\",\n        \"serviceAccountClientEmail\": \"<string>\",\n        \"payPassId\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"issuerId\": \"<string>\",\n        \"serviceAccountClientEmail\": \"<string>\",\n        \"payPassId\": \"<string>\"\n      }\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a Google Pass template",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Google Pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "issuerId",
                          "value": "<string>",
                          "description": "(Required) Google Wallet Pass signer issuer ID.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountClientEmail",
                          "value": "<string>",
                          "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountPrivateKey",
                          "value": "<string>",
                          "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "google",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Google Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Updates a existing Google Pass template by providing its ID and a `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass template updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"issuerId\": \"<string>\",\n    \"serviceAccountClientEmail\": \"<string>\",\n    \"payPassId\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a Google Pass template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "google",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Google Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass templated retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"issuerId\": \"<string>\",\n    \"serviceAccountClientEmail\": \"<string>\",\n    \"payPassId\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a Google Pass template",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "digital-pass",
                        "google",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Google Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Deletes an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_GOOGLE_PASS_TEMPLATE_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass template deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ],
              "description": "Specifies paths and operations for managing CWT credentials Google Pass templates."
            },
            {
              "name": "Semantic CWT credentials PDF templates",
              "item": [
                {
                  "name": "Create a PDF template",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/zip"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<binary>"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "pdf",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates a Semantic CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"fonts\": [\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"title\": \"<string>\"\n  },\n  \"fields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all PDF templates",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "pdf",
                        "templates"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of returned list."
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list of entries."
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves a list of all Semantic CWT credential PDF templates available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF templates retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\",\n      \"fonts\": [\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        }\n      ],\n      \"metadata\": {\n        \"title\": \"<string>\"\n      },\n      \"fields\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\",\n      \"fonts\": [\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        },\n        {\n          \"name\": \"<string>\",\n          \"fileName\": \"<string>\"\n        }\n      ],\n      \"metadata\": {\n        \"title\": \"<string>\"\n      },\n      \"fields\": [\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        },\n        {\n          \"key\": \"<string>\",\n          \"value\": \"<string>\",\n          \"alternativeText\": \"<string>\",\n          \"isRequired\": \"<boolean>\",\n          \"fontName\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a PDF template",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/zip"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<binary>"
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "pdf",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) PDF Template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Update an existing CWT credential PDF template based on a provided `.zip` file. Refer to our [PDF template design guide](https://learn.mattr.global/guides/issuance/direct/compact/templates/pdf) for more information on how to design a template and structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"fonts\": [\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"title\": \"<string>\"\n  },\n  \"fields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "<binary>"
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a PDF template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "pdf",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) PDF Template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing Semantic CWT credential PDF template using its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"fonts\": [\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    },\n    {\n      \"name\": \"<string>\",\n      \"fileName\": \"<string>\"\n    }\n  ],\n  \"metadata\": {\n    \"title\": \"<string>\"\n  },\n  \"fields\": [\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    },\n    {\n      \"key\": \"<string>\",\n      \"value\": \"<string>\",\n      \"alternativeText\": \"<string>\",\n      \"isRequired\": \"<boolean>\",\n      \"fontName\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a PDF template",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "pdf",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) PDF Template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Delete an existing PDF template by providing its ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_PDF_TEMPLATE_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "PDF template deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/pdf/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "pdf",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) PDF Template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ],
              "description": "Specifies paths and operations for managing Semantic CWT credentials PDF templates."
            },
            {
              "name": "Semantic CWT credentials Apple Pass templates",
              "item": [
                {
                  "name": "Create an Apple Pass template",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Apple digital pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "fileName",
                          "value": "<string>",
                          "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                          "type": "text"
                        },
                        {
                          "key": "teamIdentifier",
                          "value": "<string>",
                          "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                          "type": "text"
                        },
                        {
                          "key": "passTypeIdentifier",
                          "value": "<string>",
                          "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                          "type": "text"
                        },
                        {
                          "key": "wwdr",
                          "value": "<string>",
                          "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerCert",
                          "value": "<string>",
                          "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                          "type": "text"
                        },
                        {
                          "key": "signerKey",
                          "value": "<string>",
                          "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerKeyPassphrase",
                          "value": "<string>",
                          "description": "(Required) Passphrase for the encrypted key.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "apple",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates an Apple Pass template based on the provided `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n> The Apple Pass template uses the official Apple Pass bundle structure.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<binary>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"fileName\": \"<string>\",\n    \"teamIdentifier\": \"<string>\",\n    \"passTypeIdentifier\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<binary>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Apple Pass templates",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "apple",
                        "templates"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of returned list."
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list of entries."
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves a list of all Apple Pass template available on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass templates retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"fileName\": \"<string>\",\n        \"teamIdentifier\": \"<string>\",\n        \"passTypeIdentifier\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"fileName\": \"<string>\",\n        \"teamIdentifier\": \"<string>\",\n        \"passTypeIdentifier\": \"<string>\"\n      }\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Update an Apple Pass template",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Apple digital pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "fileName",
                          "value": "<string>",
                          "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                          "type": "text"
                        },
                        {
                          "key": "teamIdentifier",
                          "value": "<string>",
                          "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                          "type": "text"
                        },
                        {
                          "key": "passTypeIdentifier",
                          "value": "<string>",
                          "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                          "type": "text"
                        },
                        {
                          "key": "wwdr",
                          "value": "<string>",
                          "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerCert",
                          "value": "<string>",
                          "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                          "type": "text"
                        },
                        {
                          "key": "signerKey",
                          "value": "<string>",
                          "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                          "type": "text"
                        },
                        {
                          "key": "signerKeyPassphrase",
                          "value": "<string>",
                          "description": "(Required) Passphrase for the encrypted key.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "apple",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Apple Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Updates an existing Apple Pass template by providing its ID and a `.zip` file. Refer to our [Design an Apple Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/apple) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"fileName\": \"<string>\",\n    \"teamIdentifier\": \"<string>\",\n    \"passTypeIdentifier\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Apple digital pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "fileName",
                              "value": "<string>",
                              "description": "(Required) Insert the file name that will be assigned to Apple digital passes created from this template. Must only include alphanumeric characters, ''_'', or ''-'', and end with `.pkpass`.",
                              "type": "text"
                            },
                            {
                              "key": "teamIdentifier",
                              "value": "<string>",
                              "description": "(Required) The Team ID for the Apple Developer Program account that registered the pass type identifier.",
                              "type": "text"
                            },
                            {
                              "key": "passTypeIdentifier",
                              "value": "<string>",
                              "description": "(Required) The pass type identifier that’s registered with Apple. The value must be the same as the distribution certificate used to sign the pass.",
                              "type": "text"
                            },
                            {
                              "key": "wwdr",
                              "value": "<string>",
                              "description": "(Required) Apple G1 or G4 worldwide developer relations intermediate certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerCert",
                              "value": "<string>",
                              "description": "(Required) Apple pass [signer certificate](https://help.apple.com/developer-account/#/devbfa00fef7).",
                              "type": "text"
                            },
                            {
                              "key": "signerKey",
                              "value": "<string>",
                              "description": "(Required) The encrypted key of the Apple pass signer certificate.",
                              "type": "text"
                            },
                            {
                              "key": "signerKeyPassphrase",
                              "value": "<string>",
                              "description": "(Required) Passphrase for the encrypted key.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve an Apple Pass template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "apple",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Apple Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"fileName\": \"<string>\",\n    \"teamIdentifier\": \"<string>\",\n    \"passTypeIdentifier\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete an Apple Pass template",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "apple",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Apple Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Deletes an existing Apple Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_APPLE_PASS_TEMPLATE_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Apple Pass template deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/apple/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "apple",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Apple Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ],
              "description": "Specifies paths and operations for managing Semantic CWT credentials Apple Pass templates."
            },
            {
              "name": "Semantic CWT credentials Google Pass templates",
              "item": [
                {
                  "name": "Create a Google Pass template",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Google Pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "issuerId",
                          "value": "<string>",
                          "description": "(Required) Google Wallet Pass signer issuer ID.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountClientEmail",
                          "value": "<string>",
                          "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountPrivateKey",
                          "value": "<string>",
                          "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "google",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates a Google Pass template based on the provided `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass template created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<binary>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"issuerId\": \"<string>\",\n    \"serviceAccountClientEmail\": \"<string>\",\n    \"payPassId\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "value": "<binary>",
                              "description": "(Required) Includes your template files.",
                              "type": "text"
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all Google Pass templates",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "google",
                        "templates"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of returned list."
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list of entries."
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves a list of all Google Pass templates available on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass templates retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"issuerId\": \"<string>\",\n        \"serviceAccountClientEmail\": \"<string>\",\n        \"payPassId\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"passType\": \"<string>\",\n      \"name\": \"<string>\",\n      \"metadata\": {\n        \"issuerId\": \"<string>\",\n        \"serviceAccountClientEmail\": \"<string>\",\n        \"payPassId\": \"<string>\"\n      }\n    }\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Update a Google Pass template",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "(Required) Insert a name to identify this Google Pass template.",
                          "type": "text"
                        },
                        {
                          "key": "template",
                          "description": "(Required) Includes your template files.",
                          "type": "file",
                          "src": []
                        },
                        {
                          "key": "issuerId",
                          "value": "<string>",
                          "description": "(Required) Google Wallet Pass signer issuer ID.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountClientEmail",
                          "value": "<string>",
                          "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                          "type": "text"
                        },
                        {
                          "key": "serviceAccountPrivateKey",
                          "value": "<string>",
                          "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "google",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Google Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Updates a existing Google Pass template by providing its ID and a `.zip` file. Refer to our [Design a Google Pass template](https://learn.mattr.global/guides/issuance/direct/compact/templates/google) guide for more information on how to design the template and how to structure the `.zip` file.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass template updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"issuerId\": \"<string>\",\n    \"serviceAccountClientEmail\": \"<string>\",\n    \"payPassId\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "key": "name",
                              "value": "<string>",
                              "description": "(Required) Insert a name to identify this Google Pass template.",
                              "type": "text"
                            },
                            {
                              "key": "template",
                              "description": "(Required) Includes your template files.",
                              "type": "file",
                              "src": []
                            },
                            {
                              "key": "issuerId",
                              "value": "<string>",
                              "description": "(Required) Google Wallet Pass signer issuer ID.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountClientEmail",
                              "value": "<string>",
                              "description": "(Required) Email address of the Google Cloud Platform service account for accessing the Google Pay Passes API.",
                              "type": "text"
                            },
                            {
                              "key": "serviceAccountPrivateKey",
                              "value": "<string>",
                              "description": "(Required) Private key PEM of the Google Cloud Platform service account.",
                              "type": "text"
                            }
                          ]
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<string>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a Google Pass template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "google",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Google Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing Google Pass template by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass templated retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"passType\": \"<string>\",\n  \"name\": \"<string>\",\n  \"metadata\": {\n    \"issuerId\": \"<string>\",\n    \"serviceAccountClientEmail\": \"<string>\",\n    \"payPassId\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a Google Pass template",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "digital-pass",
                        "google",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Google Pass template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Delete a Google Pay Pass template by ID\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_GOOGLE_PASS_TEMPLATE_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Google Pass template deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/compact-semantic/digital-pass/google/templates/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "compact-semantic",
                            "digital-pass",
                            "google",
                            "templates",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Google Pass template ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ],
              "description": "Specifies paths and operations for managing Semantic CWT credentials Google Pass templates."
            }
          ]
        }
      ]
    },
    {
      "name": "OID4VCI",
      "item": [
        {
          "name": "Authentication Provider",
          "item": [
            {
              "name": "Configure an Authentication Provider",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"url\": \"<uri>\",\n  \"clientSecret\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authentication-providers",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "authentication-providers"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Configures an Authentication Provider on the tenant.\n\nAn authentication or identity provider (IdP) is a platform that is typically used to store and manage user accounts on behalf of an organization or a service provider. MATTR VII uses the authentication provider to authenticate end users before issuing them credentials.\n\n> Only one authentication provider can be configured on a tenant.\n\nThe `/.well-known/openid-configuration` endpoint of the Authentication Provider must contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported`.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_CREATE_START\n* USER_AUTHENTICATION_PROVIDER_CREATE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Authentication Provider configured",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"url\": \"<uri>\",\n  \"clientSecret\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"redirectUrl\": \"<uri>\",\n  \"url\": \"<uri>\",\n  \"scope\": [\n    \"openid\",\n    \"profile\",\n    \"email\"\n  ],\n  \"tokenEndpointAuthMethod\": \"client_secret_basic\",\n  \"staticRequestParameters\": {\n    \"Ut6\": \"<string>\",\n    \"elit_a\": \"<string>\",\n    \"aliquipb7_\": \"<string>\",\n    \"dolore80\": \"<string>\",\n    \"aliquipf29\": \"<string>\",\n    \"aliquaf8\": \"<string>\",\n    \"essef\": \"<string>\",\n    \"ullamco4f\": \"<string>\",\n    \"nisi23\": \"<string>\",\n    \"aliqua_3\": \"<string>\",\n    \"quif5\": \"<string>\",\n    \"sed_6f\": \"<string>\",\n    \"eu_d\": \"<string>\",\n    \"inbab\": \"<string>\",\n    \"in__b\": \"<string>\",\n    \"Duis_018\": \"<string>\",\n    \"mollit_d5d\": \"<string>\",\n    \"aute_6\": \"<string>\",\n    \"anim_6\": \"<string>\",\n    \"Loremd\": \"<string>\",\n    \"sit9b\": \"<string>\",\n    \"aliquip_7c\": \"<string>\",\n    \"exercitation_a3\": \"<string>\",\n    \"aliqua6e0\": \"<string>\",\n    \"adipisicing294\": \"<string>\",\n    \"dolor80\": \"<string>\",\n    \"id_5\": \"<string>\",\n    \"elit_f\": \"<string>\",\n    \"exb9\": \"<string>\",\n    \"ut_1\": \"<string>\",\n    \"dolore0\": \"<string>\",\n    \"pariatur_296\": \"<string>\",\n    \"aute_dd7\": \"<string>\",\n    \"consequat443\": \"<string>\",\n    \"proident_b\": \"<string>\",\n    \"Lorem_9\": \"<string>\",\n    \"id_408\": \"<string>\",\n    \"incididunt__39\": \"<string>\",\n    \"exercitationbd\": \"<string>\",\n    \"mollit_7\": \"<string>\",\n    \"nisi785\": \"<string>\",\n    \"exercitationf\": \"<string>\",\n    \"non_ce\": \"<string>\",\n    \"labore2\": \"<string>\",\n    \"sint7__\": \"<string>\",\n    \"exercitation8e_\": \"<string>\",\n    \"laboris_f3\": \"<string>\",\n    \"cillumc7\": \"<string>\",\n    \"commodo_01\": \"<string>\",\n    \"ad2\": \"<string>\",\n    \"in6e\": \"<string>\",\n    \"cillum3_\": \"<string>\",\n    \"ut_9fa\": \"<string>\",\n    \"eu7fc\": \"<string>\",\n    \"nostrud_fe\": \"<string>\",\n    \"consequat_02\": \"<string>\",\n    \"eu98\": \"<string>\",\n    \"veniam479\": \"<string>\",\n    \"officia_c\": \"<string>\",\n    \"sint_e\": \"<string>\",\n    \"ad2e7\": \"<string>\",\n    \"essead\": \"<string>\",\n    \"mollit_ca0\": \"<string>\",\n    \"consectetur6\": \"<string>\",\n    \"sint_c\": \"<string>\",\n    \"dolor_23\": \"<string>\",\n    \"sunt_c\": \"<string>\",\n    \"nulla6\": \"<string>\",\n    \"ullamco1\": \"<string>\",\n    \"nulla9\": \"<string>\",\n    \"quis_cf\": \"<string>\",\n    \"exe3a\": \"<string>\",\n    \"adipisicing8f\": \"<string>\",\n    \"magna1\": \"<string>\",\n    \"Excepteur2\": \"<string>\",\n    \"velit_33e\": \"<string>\",\n    \"eu_c7\": \"<string>\",\n    \"voluptate_3ce\": \"<string>\",\n    \"voluptate1a\": \"<string>\",\n    \"exe\": \"<string>\",\n    \"ullamco6_\": \"<string>\",\n    \"nisi6f\": \"<string>\",\n    \"reprehenderite\": \"<string>\",\n    \"eu1c\": \"<string>\",\n    \"nostrud_34\": \"<string>\",\n    \"Excepteur456\": \"<string>\",\n    \"enimed4\": \"<string>\",\n    \"sintab3\": \"<string>\",\n    \"laborum66\": \"<string>\",\n    \"quis_4\": \"<string>\",\n    \"velit_7\": \"<string>\",\n    \"officiaaa\": \"<string>\",\n    \"aliquipc0\": \"<string>\",\n    \"sint_90\": \"<string>\",\n    \"ut_c\": \"<string>\",\n    \"irure_d3\": \"<string>\",\n    \"do_aed\": \"<string>\",\n    \"Lorem_4_\": \"<string>\",\n    \"proident_e\": \"<string>\",\n    \"anim_86\": \"<string>\",\n    \"sint11\": \"<string>\",\n    \"sit_a3\": \"<string>\",\n    \"nostrudc\": \"<string>\",\n    \"magna398\": \"<string>\",\n    \"Utf\": \"<string>\",\n    \"fugiat12\": \"<string>\",\n    \"do_49\": \"<string>\",\n    \"anima2\": \"<string>\",\n    \"aute_8a\": \"<string>\",\n    \"minim184\": \"<string>\",\n    \"nullac1\": \"<string>\",\n    \"ut8a9\": \"<string>\",\n    \"eu_0\": \"<string>\",\n    \"deserunt4b\": \"<string>\",\n    \"occaecat_c64\": \"<string>\",\n    \"minima\": \"<string>\",\n    \"aute8b\": \"<string>\",\n    \"Lorem_4\": \"<string>\",\n    \"laboris_7e\": \"<string>\",\n    \"in_47\": \"<string>\",\n    \"deserunt_2\": \"<string>\",\n    \"Excepteur822\": \"<string>\",\n    \"dolor_7b3\": \"<string>\",\n    \"reprehenderit_95\": \"<string>\",\n    \"ipsum1\": \"<string>\",\n    \"consequat_a\": \"<string>\",\n    \"Excepteura2f\": \"<string>\",\n    \"Lorem6\": \"<string>\",\n    \"in_a7\": \"<string>\",\n    \"quis7d\": \"<string>\",\n    \"culpa24d\": \"<string>\",\n    \"Duis654\": \"<string>\",\n    \"dolor1d0\": \"<string>\",\n    \"mollit6\": \"<string>\",\n    \"irure_42\": \"<string>\",\n    \"Lorem_b\": \"<string>\",\n    \"dolore_264\": \"<string>\",\n    \"Ut_2d\": \"<string>\",\n    \"proident_630\": \"<string>\",\n    \"consequat5a7\": \"<string>\",\n    \"voluptate_80f\": \"<string>\",\n    \"amet2\": \"<string>\",\n    \"Excepteur_5f4\": \"<string>\",\n    \"Excepteur_a0\": \"<string>\",\n    \"aute_64f\": \"<string>\",\n    \"irurecbb\": \"<string>\",\n    \"adipisicingd27\": \"<string>\",\n    \"reprehenderit_0\": \"<string>\",\n    \"inef\": \"<string>\",\n    \"ex7a5\": \"<string>\",\n    \"consequat4dd\": \"<string>\",\n    \"dolore_55\": \"<string>\",\n    \"ut6f2\": \"<string>\",\n    \"quis8\": \"<string>\",\n    \"fugiat_83d\": \"<string>\",\n    \"culpa6\": \"<string>\",\n    \"in_fb\": \"<string>\",\n    \"animd\": \"<string>\",\n    \"eu_9\": \"<string>\",\n    \"proidentac\": \"<string>\",\n    \"fugiat_8\": \"<string>\",\n    \"quis8b\": \"<string>\",\n    \"minim79f\": \"<string>\",\n    \"dolor60\": \"<string>\",\n    \"eiusmod__68\": \"<string>\",\n    \"anim_4d9\": \"<string>\",\n    \"veniam21f\": \"<string>\",\n    \"dolore54\": \"<string>\",\n    \"sunt_16\": \"<string>\",\n    \"culpa_0\": \"<string>\",\n    \"culpa71\": \"<string>\",\n    \"officia_5\": \"<string>\",\n    \"minim_6_\": \"<string>\",\n    \"aliquip__\": \"<string>\",\n    \"officia_6f\": \"<string>\",\n    \"suntc\": \"<string>\",\n    \"dolor5f\": \"<string>\",\n    \"et_f\": \"<string>\",\n    \"nisi8b0\": \"<string>\",\n    \"eiusmod_d\": \"<string>\",\n    \"ex_2\": \"<string>\",\n    \"utc7e\": \"<string>\",\n    \"dolor_7\": \"<string>\",\n    \"incididunt1c6\": \"<string>\",\n    \"veniam4ad\": \"<string>\",\n    \"sitd\": \"<string>\",\n    \"ullamco0b7\": \"<string>\",\n    \"sunt9\": \"<string>\",\n    \"ullamco9\": \"<string>\",\n    \"tempor487\": \"<string>\",\n    \"ut_2\": \"<string>\",\n    \"proident6\": \"<string>\",\n    \"ipsum_b7_\": \"<string>\",\n    \"officia_d\": \"<string>\",\n    \"adipisicing_d9\": \"<string>\",\n    \"inc\": \"<string>\",\n    \"culpa_c\": \"<string>\",\n    \"tempor6\": \"<string>\",\n    \"consecteturfa\": \"<string>\",\n    \"ut67\": \"<string>\",\n    \"id_3d2\": \"<string>\",\n    \"laborum_c35\": \"<string>\",\n    \"sed1\": \"<string>\",\n    \"sintf8\": \"<string>\",\n    \"velit_e\": \"<string>\",\n    \"doloree3\": \"<string>\",\n    \"aliquip2\": \"<string>\",\n    \"ad_7_\": \"<string>\",\n    \"aliqua_17\": \"<string>\",\n    \"nonea2\": \"<string>\",\n    \"commodo94\": \"<string>\",\n    \"Ut_a\": \"<string>\",\n    \"consequat_1ab\": \"<string>\",\n    \"aliqua_034\": \"<string>\",\n    \"in95_\": \"<string>\",\n    \"dolorb\": \"<string>\",\n    \"do_c42\": \"<string>\",\n    \"idc_c\": \"<string>\",\n    \"in7f\": \"<string>\",\n    \"et357\": \"<string>\",\n    \"minim_bb\": \"<string>\",\n    \"mollit__8\": \"<string>\",\n    \"officia_a\": \"<string>\",\n    \"in04e\": \"<string>\",\n    \"sit_b0\": \"<string>\",\n    \"deserunt0c\": \"<string>\",\n    \"dolorb_\": \"<string>\",\n    \"esse0\": \"<string>\",\n    \"ipsum5\": \"<string>\",\n    \"laborum3\": \"<string>\",\n    \"ipsum_36\": \"<string>\",\n    \"occaecat9\": \"<string>\",\n    \"aute_\": \"<string>\",\n    \"cillum5c4\": \"<string>\",\n    \"eaa7d\": \"<string>\",\n    \"elitbaf\": \"<string>\",\n    \"ipsum_a23\": \"<string>\",\n    \"idf\": \"<string>\",\n    \"exercitation_68b\": \"<string>\",\n    \"in_a\": \"<string>\",\n    \"consectetur_7b8\": \"<string>\",\n    \"Excepteur_24\": \"<string>\",\n    \"cupidatat_01f\": \"<string>\",\n    \"adipisicing_dee\": \"<string>\",\n    \"sint_3d_\": \"<string>\",\n    \"Ut_f8\": \"<string>\",\n    \"est7ca\": \"<string>\",\n    \"anim0\": \"<string>\",\n    \"in45c\": \"<string>\",\n    \"adipisicing3e\": \"<string>\",\n    \"sunt4f\": \"<string>\",\n    \"sunt_0\": \"<string>\",\n    \"incididunt11\": \"<string>\",\n    \"sed0\": \"<string>\",\n    \"irure_166\": \"<string>\",\n    \"id_76d\": \"<string>\",\n    \"sit4\": \"<string>\",\n    \"anim86\": \"<string>\",\n    \"sunt_8e\": \"<string>\",\n    \"amet_8\": \"<string>\",\n    \"aute_7b0\": \"<string>\",\n    \"ea2\": \"<string>\",\n    \"sunt_9d2\": \"<string>\",\n    \"dolor4bd\": \"<string>\",\n    \"laborum0d\": \"<string>\",\n    \"autea\": \"<string>\",\n    \"Duis_64\": \"<string>\",\n    \"suntf\": \"<string>\",\n    \"estce2\": \"<string>\",\n    \"commodo_8a\": \"<string>\",\n    \"sint_d0_\": \"<string>\",\n    \"pariatur2\": \"<string>\",\n    \"essedf8\": \"<string>\",\n    \"dolor_3_\": \"<string>\",\n    \"laborum0fd\": \"<string>\",\n    \"ex_20c\": \"<string>\",\n    \"aliqua_b4_\": \"<string>\",\n    \"irure33d\": \"<string>\",\n    \"minim1\": \"<string>\",\n    \"ut_95f\": \"<string>\",\n    \"voluptate_cf\": \"<string>\",\n    \"ameta\": \"<string>\",\n    \"non_f\": \"<string>\",\n    \"veniam_bfc\": \"<string>\",\n    \"nullae3\": \"<string>\",\n    \"ut_83\": \"<string>\",\n    \"Ut9\": \"<string>\",\n    \"laboris_908\": \"<string>\",\n    \"ea0\": \"<string>\",\n    \"tempor499\": \"<string>\",\n    \"veniame4\": \"<string>\",\n    \"elitd\": \"<string>\",\n    \"Excepteur_\": \"<string>\",\n    \"proident_f\": \"<string>\",\n    \"ullamco441\": \"<string>\",\n    \"qui9\": \"<string>\",\n    \"cupidatatb0\": \"<string>\",\n    \"ex_3e\": \"<string>\",\n    \"dolor_52\": \"<string>\",\n    \"sint_559\": \"<string>\",\n    \"qui8b\": \"<string>\",\n    \"in_7_\": \"<string>\",\n    \"sit_ba\": \"<string>\",\n    \"adipisicingd9\": \"<string>\",\n    \"aliqua_bf\": \"<string>\",\n    \"mollita\": \"<string>\",\n    \"cillume3\": \"<string>\",\n    \"non_6\": \"<string>\",\n    \"anim__\": \"<string>\",\n    \"amet56_\": \"<string>\",\n    \"velitb\": \"<string>\",\n    \"dolore_d65\": \"<string>\",\n    \"sunta_3\": \"<string>\",\n    \"in_d\": \"<string>\",\n    \"Ut_357\": \"<string>\",\n    \"reprehenderit4\": \"<string>\",\n    \"laborum_6d8\": \"<string>\",\n    \"ipsum_be\": \"<string>\",\n    \"adipisicing_270\": \"<string>\",\n    \"ad1f2\": \"<string>\",\n    \"dolor_a\": \"<string>\",\n    \"dolore_4b\": \"<string>\",\n    \"pariatur952\": \"<string>\",\n    \"aliquip_5f7\": \"<string>\",\n    \"pariatur10e\": \"<string>\",\n    \"dolor9\": \"<string>\",\n    \"nisi_b98\": \"<string>\",\n    \"sunt_f\": \"<string>\",\n    \"fugiat_ca\": \"<string>\",\n    \"aute_9c\": \"<string>\",\n    \"magnab3f\": \"<string>\",\n    \"Excepteur_27\": \"<string>\",\n    \"dolor_3\": \"<string>\",\n    \"voluptate_c3\": \"<string>\",\n    \"aliqua_ed\": \"<string>\",\n    \"labore_c8d\": \"<string>\",\n    \"sunt_eb\": \"<string>\",\n    \"et_dd\": \"<string>\",\n    \"commodo_62_\": \"<string>\",\n    \"aliquip0\": \"<string>\",\n    \"minim_ba1\": \"<string>\",\n    \"pariatur383\": \"<string>\",\n    \"dolor_b5\": \"<string>\",\n    \"quis_3\": \"<string>\",\n    \"veniam6\": \"<string>\",\n    \"officia2\": \"<string>\",\n    \"enim_1\": \"<string>\",\n    \"ipsum_dd\": \"<string>\",\n    \"deserunt3\": \"<string>\",\n    \"minim_7b\": \"<string>\",\n    \"irure__0\": \"<string>\",\n    \"reprehenderit64\": \"<string>\",\n    \"ipsum3_9\": \"<string>\",\n    \"sunted\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"url\": \"<uri>\",\n  \"clientSecret\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Authentication Providers",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authentication-providers?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "authentication-providers"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all Authentication Providers on your tenant.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_START\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Authentication Providers retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"redirectUrl\": \"<uri>\",\n      \"url\": \"<uri>\",\n      \"scope\": [\n        \"openid\",\n        \"profile\",\n        \"email\"\n      ],\n      \"tokenEndpointAuthMethod\": \"client_secret_basic\",\n      \"staticRequestParameters\": {\n        \"in_a6\": \"<string>\",\n        \"inef\": \"<string>\",\n        \"consectetur7\": \"<string>\",\n        \"cillumb7b\": \"<string>\",\n        \"labore_29\": \"<string>\",\n        \"dolor7b1\": \"<string>\",\n        \"ipsum_399\": \"<string>\",\n        \"inbeb\": \"<string>\",\n        \"officia31\": \"<string>\",\n        \"velit_\": \"<string>\",\n        \"do5\": \"<string>\",\n        \"ullamco_e8\": \"<string>\",\n        \"adae\": \"<string>\",\n        \"tempor0\": \"<string>\",\n        \"cillum__\": \"<string>\",\n        \"mollit_0ba\": \"<string>\",\n        \"Lorem_110\": \"<string>\",\n        \"labore_74\": \"<string>\",\n        \"Lorem62\": \"<string>\",\n        \"commodod91\": \"<string>\",\n        \"ea30\": \"<string>\",\n        \"in2\": \"<string>\",\n        \"incididunt_7a3\": \"<string>\",\n        \"magna_0\": \"<string>\",\n        \"dolor9e\": \"<string>\",\n        \"consectetur_fc5\": \"<string>\",\n        \"culpaa4\": \"<string>\",\n        \"aliquip_6\": \"<string>\",\n        \"reprehenderit7\": \"<string>\",\n        \"fugiat_246\": \"<string>\",\n        \"adipisicing_9d_\": \"<string>\",\n        \"dolor_af4\": \"<string>\",\n        \"non3d\": \"<string>\",\n        \"id19\": \"<string>\",\n        \"adipisicing_df2\": \"<string>\",\n        \"ullamco_b\": \"<string>\",\n        \"ullamco7\": \"<string>\",\n        \"exercitationa\": \"<string>\",\n        \"mollit4\": \"<string>\",\n        \"Duis_6\": \"<string>\",\n        \"est_2\": \"<string>\",\n        \"est5\": \"<string>\",\n        \"minim_a8\": \"<string>\",\n        \"consecteturd31\": \"<string>\",\n        \"id_627\": \"<string>\",\n        \"dolor_e47\": \"<string>\",\n        \"aliqua__\": \"<string>\",\n        \"fugiatf3\": \"<string>\",\n        \"cillum_\": \"<string>\",\n        \"ea42f\": \"<string>\",\n        \"fugiat_d\": \"<string>\",\n        \"non_\": \"<string>\",\n        \"ameta_7\": \"<string>\",\n        \"eiusmod1f\": \"<string>\",\n        \"etfa5\": \"<string>\",\n        \"pariatur_b3\": \"<string>\",\n        \"nostrud8d\": \"<string>\",\n        \"enim45c\": \"<string>\",\n        \"dolore_d\": \"<string>\",\n        \"ide\": \"<string>\",\n        \"tempor9b\": \"<string>\",\n        \"velitaaf\": \"<string>\",\n        \"deserunt1\": \"<string>\",\n        \"eua1\": \"<string>\",\n        \"Lorem_e1\": \"<string>\",\n        \"cillum_6c9\": \"<string>\",\n        \"elit_eb\": \"<string>\",\n        \"reprehenderit8\": \"<string>\",\n        \"consectetur_e5a\": \"<string>\",\n        \"laborum_2_8\": \"<string>\",\n        \"Lorem_5\": \"<string>\",\n        \"none\": \"<string>\",\n        \"est65e\": \"<string>\",\n        \"est_6b\": \"<string>\",\n        \"nisi2\": \"<string>\",\n        \"laborum62f\": \"<string>\",\n        \"ullamco_e\": \"<string>\",\n        \"ex_5_5\": \"<string>\",\n        \"officia_8\": \"<string>\",\n        \"Utb\": \"<string>\",\n        \"adipisicing3c\": \"<string>\",\n        \"do_ae0\": \"<string>\",\n        \"ad_8d\": \"<string>\",\n        \"Loremb\": \"<string>\",\n        \"nulla308\": \"<string>\",\n        \"voluptate545\": \"<string>\",\n        \"labore_d\": \"<string>\",\n        \"consectetur_9e\": \"<string>\",\n        \"ea_4\": \"<string>\",\n        \"deserunt_079\": \"<string>\",\n        \"culpa_de_\": \"<string>\",\n        \"laborum_cfd\": \"<string>\",\n        \"etaf1\": \"<string>\",\n        \"aliqua_72f\": \"<string>\",\n        \"mollita\": \"<string>\",\n        \"voluptate6\": \"<string>\",\n        \"ea19\": \"<string>\",\n        \"consequatee2\": \"<string>\",\n        \"Duis__f\": \"<string>\",\n        \"Duis5\": \"<string>\",\n        \"Lorem77f\": \"<string>\",\n        \"ut3\": \"<string>\",\n        \"consecteturf\": \"<string>\",\n        \"irurec\": \"<string>\",\n        \"commodo_2\": \"<string>\",\n        \"esse9\": \"<string>\",\n        \"tempor_3\": \"<string>\",\n        \"dolor8\": \"<string>\",\n        \"utb78\": \"<string>\",\n        \"sunt_86\": \"<string>\",\n        \"consequat5\": \"<string>\",\n        \"culpa2\": \"<string>\",\n        \"in_d9\": \"<string>\",\n        \"magna_11b\": \"<string>\",\n        \"Lorem_6\": \"<string>\",\n        \"exercitation443\": \"<string>\",\n        \"aute_4a\": \"<string>\",\n        \"nulla_d\": \"<string>\",\n        \"in_f6\": \"<string>\",\n        \"mollit_8b4\": \"<string>\",\n        \"aliquip2\": \"<string>\",\n        \"pariatur9\": \"<string>\",\n        \"exercitationaa\": \"<string>\",\n        \"exercitation_0e\": \"<string>\",\n        \"adipisicing_3\": \"<string>\",\n        \"id_d2c\": \"<string>\",\n        \"magna__68\": \"<string>\",\n        \"dolor_d1\": \"<string>\",\n        \"consequat_0\": \"<string>\",\n        \"eaa_\": \"<string>\",\n        \"ind\": \"<string>\",\n        \"minim__4\": \"<string>\",\n        \"aliqua0f\": \"<string>\",\n        \"est_c\": \"<string>\",\n        \"sit_e1\": \"<string>\",\n        \"in87\": \"<string>\",\n        \"cillum_01\": \"<string>\",\n        \"est_e92\": \"<string>\",\n        \"sed53d\": \"<string>\",\n        \"ut0e5\": \"<string>\",\n        \"consequat_f98\": \"<string>\",\n        \"dolor15\": \"<string>\",\n        \"quis_7f\": \"<string>\",\n        \"Duis_9d\": \"<string>\",\n        \"proident71\": \"<string>\",\n        \"sit___\": \"<string>\",\n        \"pariatur_6b7\": \"<string>\",\n        \"velit4e\": \"<string>\",\n        \"esse54a\": \"<string>\",\n        \"sit_4d6\": \"<string>\",\n        \"temporb0\": \"<string>\",\n        \"eiusmod66b\": \"<string>\",\n        \"consectetur_10d\": \"<string>\",\n        \"occaecat3b\": \"<string>\",\n        \"ut_e9\": \"<string>\",\n        \"Duis_1bc\": \"<string>\",\n        \"Utd\": \"<string>\",\n        \"minim_5_7\": \"<string>\",\n        \"est_e19\": \"<string>\",\n        \"ad53\": \"<string>\",\n        \"dolor364\": \"<string>\",\n        \"ex_8e\": \"<string>\",\n        \"velit_98\": \"<string>\",\n        \"estb5f\": \"<string>\",\n        \"officia_fdb\": \"<string>\",\n        \"minimf\": \"<string>\",\n        \"do_71\": \"<string>\",\n        \"non_2_\": \"<string>\",\n        \"nonf\": \"<string>\",\n        \"consequat_46b\": \"<string>\",\n        \"nisi334\": \"<string>\",\n        \"qui0\": \"<string>\",\n        \"nulla91b\": \"<string>\",\n        \"estf5\": \"<string>\",\n        \"mollit_b\": \"<string>\",\n        \"velit_03_\": \"<string>\",\n        \"dolore_6\": \"<string>\",\n        \"pariatura\": \"<string>\",\n        \"labore2e\": \"<string>\",\n        \"in_6b\": \"<string>\",\n        \"ullamco89f\": \"<string>\",\n        \"laboris2d\": \"<string>\",\n        \"officia8\": \"<string>\",\n        \"occaecat_8a\": \"<string>\",\n        \"in_53b\": \"<string>\",\n        \"Ut_\": \"<string>\",\n        \"officia9\": \"<string>\",\n        \"commodoec\": \"<string>\",\n        \"esse7b5\": \"<string>\",\n        \"Duis_e05\": \"<string>\",\n        \"ut08\": \"<string>\",\n        \"amet6\": \"<string>\",\n        \"id_15\": \"<string>\",\n        \"exercitation_812\": \"<string>\",\n        \"proident33\": \"<string>\",\n        \"laborum_\": \"<string>\",\n        \"eiusmod_9bb\": \"<string>\",\n        \"deserunt0f\": \"<string>\",\n        \"Loremd42\": \"<string>\",\n        \"id21f\": \"<string>\",\n        \"incididunt_928\": \"<string>\",\n        \"aute_\": \"<string>\",\n        \"in_30_\": \"<string>\",\n        \"in_b\": \"<string>\",\n        \"laborum0d\": \"<string>\",\n        \"ut_e\": \"<string>\",\n        \"aliqua_9a8\": \"<string>\",\n        \"ut_bd9\": \"<string>\",\n        \"ullamco_0\": \"<string>\",\n        \"cupidatat6c2\": \"<string>\",\n        \"dolore_fa0\": \"<string>\",\n        \"reprehenderit_853\": \"<string>\",\n        \"pariatur_8b\": \"<string>\",\n        \"doloreb1\": \"<string>\",\n        \"laboris__\": \"<string>\",\n        \"Ut__3a\": \"<string>\",\n        \"occaecat_a81\": \"<string>\",\n        \"tempor__d9\": \"<string>\",\n        \"non3\": \"<string>\",\n        \"anim_c\": \"<string>\",\n        \"anim_f_6\": \"<string>\",\n        \"commodo_73\": \"<string>\",\n        \"fugiat28\": \"<string>\",\n        \"et2e\": \"<string>\",\n        \"Ut_cf\": \"<string>\",\n        \"magna6a\": \"<string>\",\n        \"sed5\": \"<string>\",\n        \"culpa_9a\": \"<string>\",\n        \"nostrud__\": \"<string>\",\n        \"voluptate49\": \"<string>\",\n        \"tempor__4\": \"<string>\",\n        \"exercitation_2a\": \"<string>\",\n        \"ullamco_d\": \"<string>\",\n        \"exercitation_521\": \"<string>\",\n        \"ut_2c\": \"<string>\",\n        \"ut_2\": \"<string>\",\n        \"magna4_4\": \"<string>\",\n        \"dolor_02\": \"<string>\",\n        \"nostrud_c\": \"<string>\",\n        \"nulla_1\": \"<string>\",\n        \"et349\": \"<string>\",\n        \"cillum_f\": \"<string>\",\n        \"aliquip_c9\": \"<string>\",\n        \"velit6\": \"<string>\",\n        \"ad_4\": \"<string>\",\n        \"in_e1e\": \"<string>\",\n        \"in_9e8\": \"<string>\",\n        \"sunt28d\": \"<string>\",\n        \"consequat7\": \"<string>\",\n        \"sed_7\": \"<string>\",\n        \"reprehenderit0\": \"<string>\",\n        \"culpa_f4\": \"<string>\",\n        \"in6\": \"<string>\",\n        \"eu_158\": \"<string>\",\n        \"minim_5cc\": \"<string>\",\n        \"nisi_d5\": \"<string>\",\n        \"do4\": \"<string>\",\n        \"dolore_adb\": \"<string>\",\n        \"cillumd\": \"<string>\",\n        \"suntcd\": \"<string>\",\n        \"in5\": \"<string>\",\n        \"officia_24\": \"<string>\",\n        \"irure1_b\": \"<string>\",\n        \"nulla7\": \"<string>\",\n        \"Utb_6\": \"<string>\",\n        \"aliqua8aa\": \"<string>\",\n        \"ex_536\": \"<string>\",\n        \"est__e1\": \"<string>\",\n        \"irure_1\": \"<string>\",\n        \"voluptate8\": \"<string>\",\n        \"nostrud_\": \"<string>\",\n        \"irure_b20\": \"<string>\",\n        \"dolore6f8\": \"<string>\",\n        \"laboris3\": \"<string>\",\n        \"voluptate_6e\": \"<string>\",\n        \"voluptateca0\": \"<string>\",\n        \"sunt_4\": \"<string>\",\n        \"labore_1d3\": \"<string>\",\n        \"est_e7\": \"<string>\",\n        \"veniam_5d\": \"<string>\",\n        \"ut_1c6\": \"<string>\",\n        \"laborum_5\": \"<string>\",\n        \"sit_24b\": \"<string>\",\n        \"in32a\": \"<string>\",\n        \"in96e\": \"<string>\",\n        \"Duis_42\": \"<string>\",\n        \"laborum175\": \"<string>\",\n        \"officia4\": \"<string>\",\n        \"Excepteur_408\": \"<string>\"\n      }\n    },\n    {\n      \"clientId\": \"<string>\",\n      \"clientSecret\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"redirectUrl\": \"<uri>\",\n      \"url\": \"<uri>\",\n      \"scope\": [\n        \"openid\",\n        \"profile\",\n        \"email\"\n      ],\n      \"tokenEndpointAuthMethod\": \"client_secret_basic\",\n      \"staticRequestParameters\": {\n        \"ex62_\": \"<string>\",\n        \"estf\": \"<string>\",\n        \"elit_9\": \"<string>\",\n        \"Excepteur_39a\": \"<string>\",\n        \"fugiat_1a\": \"<string>\",\n        \"amet931\": \"<string>\",\n        \"adipisicingc21\": \"<string>\",\n        \"cupidatat_1a\": \"<string>\",\n        \"eafda\": \"<string>\",\n        \"in49\": \"<string>\",\n        \"sed__\": \"<string>\",\n        \"exercitationd7_\": \"<string>\",\n        \"aliqua68\": \"<string>\",\n        \"commodo377\": \"<string>\",\n        \"officiaf1\": \"<string>\",\n        \"dolor4\": \"<string>\",\n        \"ex8\": \"<string>\",\n        \"dolore218\": \"<string>\",\n        \"laborum4b\": \"<string>\",\n        \"fugiat07e\": \"<string>\",\n        \"culpa3a4\": \"<string>\",\n        \"eiusmod0\": \"<string>\",\n        \"nullaf\": \"<string>\",\n        \"dolor_113\": \"<string>\",\n        \"id_7b\": \"<string>\",\n        \"sed4\": \"<string>\",\n        \"dolore_93b\": \"<string>\",\n        \"deserunt_53c\": \"<string>\",\n        \"aute__\": \"<string>\",\n        \"in0a\": \"<string>\",\n        \"esse_9b0\": \"<string>\",\n        \"occaecat26e\": \"<string>\",\n        \"deserunt35f\": \"<string>\",\n        \"anim_045\": \"<string>\",\n        \"Loremb3\": \"<string>\",\n        \"mollit_8c4\": \"<string>\",\n        \"culpa_ba9\": \"<string>\"\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve an Authentication Provider",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v1",
                    "users",
                    "authentication-providers",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Authentication Provider ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_START\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Authentication Provider retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"redirectUrl\": \"<uri>\",\n  \"url\": \"<uri>\",\n  \"scope\": [\n    \"openid\",\n    \"profile\",\n    \"email\"\n  ],\n  \"tokenEndpointAuthMethod\": \"client_secret_basic\",\n  \"staticRequestParameters\": {\n    \"Ut6\": \"<string>\",\n    \"elit_a\": \"<string>\",\n    \"aliquipb7_\": \"<string>\",\n    \"dolore80\": \"<string>\",\n    \"aliquipf29\": \"<string>\",\n    \"aliquaf8\": \"<string>\",\n    \"essef\": \"<string>\",\n    \"ullamco4f\": \"<string>\",\n    \"nisi23\": \"<string>\",\n    \"aliqua_3\": \"<string>\",\n    \"quif5\": \"<string>\",\n    \"sed_6f\": \"<string>\",\n    \"eu_d\": \"<string>\",\n    \"inbab\": \"<string>\",\n    \"in__b\": \"<string>\",\n    \"Duis_018\": \"<string>\",\n    \"mollit_d5d\": \"<string>\",\n    \"aute_6\": \"<string>\",\n    \"anim_6\": \"<string>\",\n    \"Loremd\": \"<string>\",\n    \"sit9b\": \"<string>\",\n    \"aliquip_7c\": \"<string>\",\n    \"exercitation_a3\": \"<string>\",\n    \"aliqua6e0\": \"<string>\",\n    \"adipisicing294\": \"<string>\",\n    \"dolor80\": \"<string>\",\n    \"id_5\": \"<string>\",\n    \"elit_f\": \"<string>\",\n    \"exb9\": \"<string>\",\n    \"ut_1\": \"<string>\",\n    \"dolore0\": \"<string>\",\n    \"pariatur_296\": \"<string>\",\n    \"aute_dd7\": \"<string>\",\n    \"consequat443\": \"<string>\",\n    \"proident_b\": \"<string>\",\n    \"Lorem_9\": \"<string>\",\n    \"id_408\": \"<string>\",\n    \"incididunt__39\": \"<string>\",\n    \"exercitationbd\": \"<string>\",\n    \"mollit_7\": \"<string>\",\n    \"nisi785\": \"<string>\",\n    \"exercitationf\": \"<string>\",\n    \"non_ce\": \"<string>\",\n    \"labore2\": \"<string>\",\n    \"sint7__\": \"<string>\",\n    \"exercitation8e_\": \"<string>\",\n    \"laboris_f3\": \"<string>\",\n    \"cillumc7\": \"<string>\",\n    \"commodo_01\": \"<string>\",\n    \"ad2\": \"<string>\",\n    \"in6e\": \"<string>\",\n    \"cillum3_\": \"<string>\",\n    \"ut_9fa\": \"<string>\",\n    \"eu7fc\": \"<string>\",\n    \"nostrud_fe\": \"<string>\",\n    \"consequat_02\": \"<string>\",\n    \"eu98\": \"<string>\",\n    \"veniam479\": \"<string>\",\n    \"officia_c\": \"<string>\",\n    \"sint_e\": \"<string>\",\n    \"ad2e7\": \"<string>\",\n    \"essead\": \"<string>\",\n    \"mollit_ca0\": \"<string>\",\n    \"consectetur6\": \"<string>\",\n    \"sint_c\": \"<string>\",\n    \"dolor_23\": \"<string>\",\n    \"sunt_c\": \"<string>\",\n    \"nulla6\": \"<string>\",\n    \"ullamco1\": \"<string>\",\n    \"nulla9\": \"<string>\",\n    \"quis_cf\": \"<string>\",\n    \"exe3a\": \"<string>\",\n    \"adipisicing8f\": \"<string>\",\n    \"magna1\": \"<string>\",\n    \"Excepteur2\": \"<string>\",\n    \"velit_33e\": \"<string>\",\n    \"eu_c7\": \"<string>\",\n    \"voluptate_3ce\": \"<string>\",\n    \"voluptate1a\": \"<string>\",\n    \"exe\": \"<string>\",\n    \"ullamco6_\": \"<string>\",\n    \"nisi6f\": \"<string>\",\n    \"reprehenderite\": \"<string>\",\n    \"eu1c\": \"<string>\",\n    \"nostrud_34\": \"<string>\",\n    \"Excepteur456\": \"<string>\",\n    \"enimed4\": \"<string>\",\n    \"sintab3\": \"<string>\",\n    \"laborum66\": \"<string>\",\n    \"quis_4\": \"<string>\",\n    \"velit_7\": \"<string>\",\n    \"officiaaa\": \"<string>\",\n    \"aliquipc0\": \"<string>\",\n    \"sint_90\": \"<string>\",\n    \"ut_c\": \"<string>\",\n    \"irure_d3\": \"<string>\",\n    \"do_aed\": \"<string>\",\n    \"Lorem_4_\": \"<string>\",\n    \"proident_e\": \"<string>\",\n    \"anim_86\": \"<string>\",\n    \"sint11\": \"<string>\",\n    \"sit_a3\": \"<string>\",\n    \"nostrudc\": \"<string>\",\n    \"magna398\": \"<string>\",\n    \"Utf\": \"<string>\",\n    \"fugiat12\": \"<string>\",\n    \"do_49\": \"<string>\",\n    \"anima2\": \"<string>\",\n    \"aute_8a\": \"<string>\",\n    \"minim184\": \"<string>\",\n    \"nullac1\": \"<string>\",\n    \"ut8a9\": \"<string>\",\n    \"eu_0\": \"<string>\",\n    \"deserunt4b\": \"<string>\",\n    \"occaecat_c64\": \"<string>\",\n    \"minima\": \"<string>\",\n    \"aute8b\": \"<string>\",\n    \"Lorem_4\": \"<string>\",\n    \"laboris_7e\": \"<string>\",\n    \"in_47\": \"<string>\",\n    \"deserunt_2\": \"<string>\",\n    \"Excepteur822\": \"<string>\",\n    \"dolor_7b3\": \"<string>\",\n    \"reprehenderit_95\": \"<string>\",\n    \"ipsum1\": \"<string>\",\n    \"consequat_a\": \"<string>\",\n    \"Excepteura2f\": \"<string>\",\n    \"Lorem6\": \"<string>\",\n    \"in_a7\": \"<string>\",\n    \"quis7d\": \"<string>\",\n    \"culpa24d\": \"<string>\",\n    \"Duis654\": \"<string>\",\n    \"dolor1d0\": \"<string>\",\n    \"mollit6\": \"<string>\",\n    \"irure_42\": \"<string>\",\n    \"Lorem_b\": \"<string>\",\n    \"dolore_264\": \"<string>\",\n    \"Ut_2d\": \"<string>\",\n    \"proident_630\": \"<string>\",\n    \"consequat5a7\": \"<string>\",\n    \"voluptate_80f\": \"<string>\",\n    \"amet2\": \"<string>\",\n    \"Excepteur_5f4\": \"<string>\",\n    \"Excepteur_a0\": \"<string>\",\n    \"aute_64f\": \"<string>\",\n    \"irurecbb\": \"<string>\",\n    \"adipisicingd27\": \"<string>\",\n    \"reprehenderit_0\": \"<string>\",\n    \"inef\": \"<string>\",\n    \"ex7a5\": \"<string>\",\n    \"consequat4dd\": \"<string>\",\n    \"dolore_55\": \"<string>\",\n    \"ut6f2\": \"<string>\",\n    \"quis8\": \"<string>\",\n    \"fugiat_83d\": \"<string>\",\n    \"culpa6\": \"<string>\",\n    \"in_fb\": \"<string>\",\n    \"animd\": \"<string>\",\n    \"eu_9\": \"<string>\",\n    \"proidentac\": \"<string>\",\n    \"fugiat_8\": \"<string>\",\n    \"quis8b\": \"<string>\",\n    \"minim79f\": \"<string>\",\n    \"dolor60\": \"<string>\",\n    \"eiusmod__68\": \"<string>\",\n    \"anim_4d9\": \"<string>\",\n    \"veniam21f\": \"<string>\",\n    \"dolore54\": \"<string>\",\n    \"sunt_16\": \"<string>\",\n    \"culpa_0\": \"<string>\",\n    \"culpa71\": \"<string>\",\n    \"officia_5\": \"<string>\",\n    \"minim_6_\": \"<string>\",\n    \"aliquip__\": \"<string>\",\n    \"officia_6f\": \"<string>\",\n    \"suntc\": \"<string>\",\n    \"dolor5f\": \"<string>\",\n    \"et_f\": \"<string>\",\n    \"nisi8b0\": \"<string>\",\n    \"eiusmod_d\": \"<string>\",\n    \"ex_2\": \"<string>\",\n    \"utc7e\": \"<string>\",\n    \"dolor_7\": \"<string>\",\n    \"incididunt1c6\": \"<string>\",\n    \"veniam4ad\": \"<string>\",\n    \"sitd\": \"<string>\",\n    \"ullamco0b7\": \"<string>\",\n    \"sunt9\": \"<string>\",\n    \"ullamco9\": \"<string>\",\n    \"tempor487\": \"<string>\",\n    \"ut_2\": \"<string>\",\n    \"proident6\": \"<string>\",\n    \"ipsum_b7_\": \"<string>\",\n    \"officia_d\": \"<string>\",\n    \"adipisicing_d9\": \"<string>\",\n    \"inc\": \"<string>\",\n    \"culpa_c\": \"<string>\",\n    \"tempor6\": \"<string>\",\n    \"consecteturfa\": \"<string>\",\n    \"ut67\": \"<string>\",\n    \"id_3d2\": \"<string>\",\n    \"laborum_c35\": \"<string>\",\n    \"sed1\": \"<string>\",\n    \"sintf8\": \"<string>\",\n    \"velit_e\": \"<string>\",\n    \"doloree3\": \"<string>\",\n    \"aliquip2\": \"<string>\",\n    \"ad_7_\": \"<string>\",\n    \"aliqua_17\": \"<string>\",\n    \"nonea2\": \"<string>\",\n    \"commodo94\": \"<string>\",\n    \"Ut_a\": \"<string>\",\n    \"consequat_1ab\": \"<string>\",\n    \"aliqua_034\": \"<string>\",\n    \"in95_\": \"<string>\",\n    \"dolorb\": \"<string>\",\n    \"do_c42\": \"<string>\",\n    \"idc_c\": \"<string>\",\n    \"in7f\": \"<string>\",\n    \"et357\": \"<string>\",\n    \"minim_bb\": \"<string>\",\n    \"mollit__8\": \"<string>\",\n    \"officia_a\": \"<string>\",\n    \"in04e\": \"<string>\",\n    \"sit_b0\": \"<string>\",\n    \"deserunt0c\": \"<string>\",\n    \"dolorb_\": \"<string>\",\n    \"esse0\": \"<string>\",\n    \"ipsum5\": \"<string>\",\n    \"laborum3\": \"<string>\",\n    \"ipsum_36\": \"<string>\",\n    \"occaecat9\": \"<string>\",\n    \"aute_\": \"<string>\",\n    \"cillum5c4\": \"<string>\",\n    \"eaa7d\": \"<string>\",\n    \"elitbaf\": \"<string>\",\n    \"ipsum_a23\": \"<string>\",\n    \"idf\": \"<string>\",\n    \"exercitation_68b\": \"<string>\",\n    \"in_a\": \"<string>\",\n    \"consectetur_7b8\": \"<string>\",\n    \"Excepteur_24\": \"<string>\",\n    \"cupidatat_01f\": \"<string>\",\n    \"adipisicing_dee\": \"<string>\",\n    \"sint_3d_\": \"<string>\",\n    \"Ut_f8\": \"<string>\",\n    \"est7ca\": \"<string>\",\n    \"anim0\": \"<string>\",\n    \"in45c\": \"<string>\",\n    \"adipisicing3e\": \"<string>\",\n    \"sunt4f\": \"<string>\",\n    \"sunt_0\": \"<string>\",\n    \"incididunt11\": \"<string>\",\n    \"sed0\": \"<string>\",\n    \"irure_166\": \"<string>\",\n    \"id_76d\": \"<string>\",\n    \"sit4\": \"<string>\",\n    \"anim86\": \"<string>\",\n    \"sunt_8e\": \"<string>\",\n    \"amet_8\": \"<string>\",\n    \"aute_7b0\": \"<string>\",\n    \"ea2\": \"<string>\",\n    \"sunt_9d2\": \"<string>\",\n    \"dolor4bd\": \"<string>\",\n    \"laborum0d\": \"<string>\",\n    \"autea\": \"<string>\",\n    \"Duis_64\": \"<string>\",\n    \"suntf\": \"<string>\",\n    \"estce2\": \"<string>\",\n    \"commodo_8a\": \"<string>\",\n    \"sint_d0_\": \"<string>\",\n    \"pariatur2\": \"<string>\",\n    \"essedf8\": \"<string>\",\n    \"dolor_3_\": \"<string>\",\n    \"laborum0fd\": \"<string>\",\n    \"ex_20c\": \"<string>\",\n    \"aliqua_b4_\": \"<string>\",\n    \"irure33d\": \"<string>\",\n    \"minim1\": \"<string>\",\n    \"ut_95f\": \"<string>\",\n    \"voluptate_cf\": \"<string>\",\n    \"ameta\": \"<string>\",\n    \"non_f\": \"<string>\",\n    \"veniam_bfc\": \"<string>\",\n    \"nullae3\": \"<string>\",\n    \"ut_83\": \"<string>\",\n    \"Ut9\": \"<string>\",\n    \"laboris_908\": \"<string>\",\n    \"ea0\": \"<string>\",\n    \"tempor499\": \"<string>\",\n    \"veniame4\": \"<string>\",\n    \"elitd\": \"<string>\",\n    \"Excepteur_\": \"<string>\",\n    \"proident_f\": \"<string>\",\n    \"ullamco441\": \"<string>\",\n    \"qui9\": \"<string>\",\n    \"cupidatatb0\": \"<string>\",\n    \"ex_3e\": \"<string>\",\n    \"dolor_52\": \"<string>\",\n    \"sint_559\": \"<string>\",\n    \"qui8b\": \"<string>\",\n    \"in_7_\": \"<string>\",\n    \"sit_ba\": \"<string>\",\n    \"adipisicingd9\": \"<string>\",\n    \"aliqua_bf\": \"<string>\",\n    \"mollita\": \"<string>\",\n    \"cillume3\": \"<string>\",\n    \"non_6\": \"<string>\",\n    \"anim__\": \"<string>\",\n    \"amet56_\": \"<string>\",\n    \"velitb\": \"<string>\",\n    \"dolore_d65\": \"<string>\",\n    \"sunta_3\": \"<string>\",\n    \"in_d\": \"<string>\",\n    \"Ut_357\": \"<string>\",\n    \"reprehenderit4\": \"<string>\",\n    \"laborum_6d8\": \"<string>\",\n    \"ipsum_be\": \"<string>\",\n    \"adipisicing_270\": \"<string>\",\n    \"ad1f2\": \"<string>\",\n    \"dolor_a\": \"<string>\",\n    \"dolore_4b\": \"<string>\",\n    \"pariatur952\": \"<string>\",\n    \"aliquip_5f7\": \"<string>\",\n    \"pariatur10e\": \"<string>\",\n    \"dolor9\": \"<string>\",\n    \"nisi_b98\": \"<string>\",\n    \"sunt_f\": \"<string>\",\n    \"fugiat_ca\": \"<string>\",\n    \"aute_9c\": \"<string>\",\n    \"magnab3f\": \"<string>\",\n    \"Excepteur_27\": \"<string>\",\n    \"dolor_3\": \"<string>\",\n    \"voluptate_c3\": \"<string>\",\n    \"aliqua_ed\": \"<string>\",\n    \"labore_c8d\": \"<string>\",\n    \"sunt_eb\": \"<string>\",\n    \"et_dd\": \"<string>\",\n    \"commodo_62_\": \"<string>\",\n    \"aliquip0\": \"<string>\",\n    \"minim_ba1\": \"<string>\",\n    \"pariatur383\": \"<string>\",\n    \"dolor_b5\": \"<string>\",\n    \"quis_3\": \"<string>\",\n    \"veniam6\": \"<string>\",\n    \"officia2\": \"<string>\",\n    \"enim_1\": \"<string>\",\n    \"ipsum_dd\": \"<string>\",\n    \"deserunt3\": \"<string>\",\n    \"minim_7b\": \"<string>\",\n    \"irure__0\": \"<string>\",\n    \"reprehenderit64\": \"<string>\",\n    \"ipsum3_9\": \"<string>\",\n    \"sunted\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update an Authentication Provider",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v1",
                    "users",
                    "authentication-providers",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Authentication Provider ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_UPDATE_START\n* USER_AUTHENTICATION_PROVIDER_UPDATE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Authentication Provider updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"clientId\": \"<string>\",\n  \"clientSecret\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"redirectUrl\": \"<uri>\",\n  \"url\": \"<uri>\",\n  \"scope\": [\n    \"openid\",\n    \"profile\",\n    \"email\"\n  ],\n  \"tokenEndpointAuthMethod\": \"client_secret_basic\",\n  \"staticRequestParameters\": {\n    \"Ut6\": \"<string>\",\n    \"elit_a\": \"<string>\",\n    \"aliquipb7_\": \"<string>\",\n    \"dolore80\": \"<string>\",\n    \"aliquipf29\": \"<string>\",\n    \"aliquaf8\": \"<string>\",\n    \"essef\": \"<string>\",\n    \"ullamco4f\": \"<string>\",\n    \"nisi23\": \"<string>\",\n    \"aliqua_3\": \"<string>\",\n    \"quif5\": \"<string>\",\n    \"sed_6f\": \"<string>\",\n    \"eu_d\": \"<string>\",\n    \"inbab\": \"<string>\",\n    \"in__b\": \"<string>\",\n    \"Duis_018\": \"<string>\",\n    \"mollit_d5d\": \"<string>\",\n    \"aute_6\": \"<string>\",\n    \"anim_6\": \"<string>\",\n    \"Loremd\": \"<string>\",\n    \"sit9b\": \"<string>\",\n    \"aliquip_7c\": \"<string>\",\n    \"exercitation_a3\": \"<string>\",\n    \"aliqua6e0\": \"<string>\",\n    \"adipisicing294\": \"<string>\",\n    \"dolor80\": \"<string>\",\n    \"id_5\": \"<string>\",\n    \"elit_f\": \"<string>\",\n    \"exb9\": \"<string>\",\n    \"ut_1\": \"<string>\",\n    \"dolore0\": \"<string>\",\n    \"pariatur_296\": \"<string>\",\n    \"aute_dd7\": \"<string>\",\n    \"consequat443\": \"<string>\",\n    \"proident_b\": \"<string>\",\n    \"Lorem_9\": \"<string>\",\n    \"id_408\": \"<string>\",\n    \"incididunt__39\": \"<string>\",\n    \"exercitationbd\": \"<string>\",\n    \"mollit_7\": \"<string>\",\n    \"nisi785\": \"<string>\",\n    \"exercitationf\": \"<string>\",\n    \"non_ce\": \"<string>\",\n    \"labore2\": \"<string>\",\n    \"sint7__\": \"<string>\",\n    \"exercitation8e_\": \"<string>\",\n    \"laboris_f3\": \"<string>\",\n    \"cillumc7\": \"<string>\",\n    \"commodo_01\": \"<string>\",\n    \"ad2\": \"<string>\",\n    \"in6e\": \"<string>\",\n    \"cillum3_\": \"<string>\",\n    \"ut_9fa\": \"<string>\",\n    \"eu7fc\": \"<string>\",\n    \"nostrud_fe\": \"<string>\",\n    \"consequat_02\": \"<string>\",\n    \"eu98\": \"<string>\",\n    \"veniam479\": \"<string>\",\n    \"officia_c\": \"<string>\",\n    \"sint_e\": \"<string>\",\n    \"ad2e7\": \"<string>\",\n    \"essead\": \"<string>\",\n    \"mollit_ca0\": \"<string>\",\n    \"consectetur6\": \"<string>\",\n    \"sint_c\": \"<string>\",\n    \"dolor_23\": \"<string>\",\n    \"sunt_c\": \"<string>\",\n    \"nulla6\": \"<string>\",\n    \"ullamco1\": \"<string>\",\n    \"nulla9\": \"<string>\",\n    \"quis_cf\": \"<string>\",\n    \"exe3a\": \"<string>\",\n    \"adipisicing8f\": \"<string>\",\n    \"magna1\": \"<string>\",\n    \"Excepteur2\": \"<string>\",\n    \"velit_33e\": \"<string>\",\n    \"eu_c7\": \"<string>\",\n    \"voluptate_3ce\": \"<string>\",\n    \"voluptate1a\": \"<string>\",\n    \"exe\": \"<string>\",\n    \"ullamco6_\": \"<string>\",\n    \"nisi6f\": \"<string>\",\n    \"reprehenderite\": \"<string>\",\n    \"eu1c\": \"<string>\",\n    \"nostrud_34\": \"<string>\",\n    \"Excepteur456\": \"<string>\",\n    \"enimed4\": \"<string>\",\n    \"sintab3\": \"<string>\",\n    \"laborum66\": \"<string>\",\n    \"quis_4\": \"<string>\",\n    \"velit_7\": \"<string>\",\n    \"officiaaa\": \"<string>\",\n    \"aliquipc0\": \"<string>\",\n    \"sint_90\": \"<string>\",\n    \"ut_c\": \"<string>\",\n    \"irure_d3\": \"<string>\",\n    \"do_aed\": \"<string>\",\n    \"Lorem_4_\": \"<string>\",\n    \"proident_e\": \"<string>\",\n    \"anim_86\": \"<string>\",\n    \"sint11\": \"<string>\",\n    \"sit_a3\": \"<string>\",\n    \"nostrudc\": \"<string>\",\n    \"magna398\": \"<string>\",\n    \"Utf\": \"<string>\",\n    \"fugiat12\": \"<string>\",\n    \"do_49\": \"<string>\",\n    \"anima2\": \"<string>\",\n    \"aute_8a\": \"<string>\",\n    \"minim184\": \"<string>\",\n    \"nullac1\": \"<string>\",\n    \"ut8a9\": \"<string>\",\n    \"eu_0\": \"<string>\",\n    \"deserunt4b\": \"<string>\",\n    \"occaecat_c64\": \"<string>\",\n    \"minima\": \"<string>\",\n    \"aute8b\": \"<string>\",\n    \"Lorem_4\": \"<string>\",\n    \"laboris_7e\": \"<string>\",\n    \"in_47\": \"<string>\",\n    \"deserunt_2\": \"<string>\",\n    \"Excepteur822\": \"<string>\",\n    \"dolor_7b3\": \"<string>\",\n    \"reprehenderit_95\": \"<string>\",\n    \"ipsum1\": \"<string>\",\n    \"consequat_a\": \"<string>\",\n    \"Excepteura2f\": \"<string>\",\n    \"Lorem6\": \"<string>\",\n    \"in_a7\": \"<string>\",\n    \"quis7d\": \"<string>\",\n    \"culpa24d\": \"<string>\",\n    \"Duis654\": \"<string>\",\n    \"dolor1d0\": \"<string>\",\n    \"mollit6\": \"<string>\",\n    \"irure_42\": \"<string>\",\n    \"Lorem_b\": \"<string>\",\n    \"dolore_264\": \"<string>\",\n    \"Ut_2d\": \"<string>\",\n    \"proident_630\": \"<string>\",\n    \"consequat5a7\": \"<string>\",\n    \"voluptate_80f\": \"<string>\",\n    \"amet2\": \"<string>\",\n    \"Excepteur_5f4\": \"<string>\",\n    \"Excepteur_a0\": \"<string>\",\n    \"aute_64f\": \"<string>\",\n    \"irurecbb\": \"<string>\",\n    \"adipisicingd27\": \"<string>\",\n    \"reprehenderit_0\": \"<string>\",\n    \"inef\": \"<string>\",\n    \"ex7a5\": \"<string>\",\n    \"consequat4dd\": \"<string>\",\n    \"dolore_55\": \"<string>\",\n    \"ut6f2\": \"<string>\",\n    \"quis8\": \"<string>\",\n    \"fugiat_83d\": \"<string>\",\n    \"culpa6\": \"<string>\",\n    \"in_fb\": \"<string>\",\n    \"animd\": \"<string>\",\n    \"eu_9\": \"<string>\",\n    \"proidentac\": \"<string>\",\n    \"fugiat_8\": \"<string>\",\n    \"quis8b\": \"<string>\",\n    \"minim79f\": \"<string>\",\n    \"dolor60\": \"<string>\",\n    \"eiusmod__68\": \"<string>\",\n    \"anim_4d9\": \"<string>\",\n    \"veniam21f\": \"<string>\",\n    \"dolore54\": \"<string>\",\n    \"sunt_16\": \"<string>\",\n    \"culpa_0\": \"<string>\",\n    \"culpa71\": \"<string>\",\n    \"officia_5\": \"<string>\",\n    \"minim_6_\": \"<string>\",\n    \"aliquip__\": \"<string>\",\n    \"officia_6f\": \"<string>\",\n    \"suntc\": \"<string>\",\n    \"dolor5f\": \"<string>\",\n    \"et_f\": \"<string>\",\n    \"nisi8b0\": \"<string>\",\n    \"eiusmod_d\": \"<string>\",\n    \"ex_2\": \"<string>\",\n    \"utc7e\": \"<string>\",\n    \"dolor_7\": \"<string>\",\n    \"incididunt1c6\": \"<string>\",\n    \"veniam4ad\": \"<string>\",\n    \"sitd\": \"<string>\",\n    \"ullamco0b7\": \"<string>\",\n    \"sunt9\": \"<string>\",\n    \"ullamco9\": \"<string>\",\n    \"tempor487\": \"<string>\",\n    \"ut_2\": \"<string>\",\n    \"proident6\": \"<string>\",\n    \"ipsum_b7_\": \"<string>\",\n    \"officia_d\": \"<string>\",\n    \"adipisicing_d9\": \"<string>\",\n    \"inc\": \"<string>\",\n    \"culpa_c\": \"<string>\",\n    \"tempor6\": \"<string>\",\n    \"consecteturfa\": \"<string>\",\n    \"ut67\": \"<string>\",\n    \"id_3d2\": \"<string>\",\n    \"laborum_c35\": \"<string>\",\n    \"sed1\": \"<string>\",\n    \"sintf8\": \"<string>\",\n    \"velit_e\": \"<string>\",\n    \"doloree3\": \"<string>\",\n    \"aliquip2\": \"<string>\",\n    \"ad_7_\": \"<string>\",\n    \"aliqua_17\": \"<string>\",\n    \"nonea2\": \"<string>\",\n    \"commodo94\": \"<string>\",\n    \"Ut_a\": \"<string>\",\n    \"consequat_1ab\": \"<string>\",\n    \"aliqua_034\": \"<string>\",\n    \"in95_\": \"<string>\",\n    \"dolorb\": \"<string>\",\n    \"do_c42\": \"<string>\",\n    \"idc_c\": \"<string>\",\n    \"in7f\": \"<string>\",\n    \"et357\": \"<string>\",\n    \"minim_bb\": \"<string>\",\n    \"mollit__8\": \"<string>\",\n    \"officia_a\": \"<string>\",\n    \"in04e\": \"<string>\",\n    \"sit_b0\": \"<string>\",\n    \"deserunt0c\": \"<string>\",\n    \"dolorb_\": \"<string>\",\n    \"esse0\": \"<string>\",\n    \"ipsum5\": \"<string>\",\n    \"laborum3\": \"<string>\",\n    \"ipsum_36\": \"<string>\",\n    \"occaecat9\": \"<string>\",\n    \"aute_\": \"<string>\",\n    \"cillum5c4\": \"<string>\",\n    \"eaa7d\": \"<string>\",\n    \"elitbaf\": \"<string>\",\n    \"ipsum_a23\": \"<string>\",\n    \"idf\": \"<string>\",\n    \"exercitation_68b\": \"<string>\",\n    \"in_a\": \"<string>\",\n    \"consectetur_7b8\": \"<string>\",\n    \"Excepteur_24\": \"<string>\",\n    \"cupidatat_01f\": \"<string>\",\n    \"adipisicing_dee\": \"<string>\",\n    \"sint_3d_\": \"<string>\",\n    \"Ut_f8\": \"<string>\",\n    \"est7ca\": \"<string>\",\n    \"anim0\": \"<string>\",\n    \"in45c\": \"<string>\",\n    \"adipisicing3e\": \"<string>\",\n    \"sunt4f\": \"<string>\",\n    \"sunt_0\": \"<string>\",\n    \"incididunt11\": \"<string>\",\n    \"sed0\": \"<string>\",\n    \"irure_166\": \"<string>\",\n    \"id_76d\": \"<string>\",\n    \"sit4\": \"<string>\",\n    \"anim86\": \"<string>\",\n    \"sunt_8e\": \"<string>\",\n    \"amet_8\": \"<string>\",\n    \"aute_7b0\": \"<string>\",\n    \"ea2\": \"<string>\",\n    \"sunt_9d2\": \"<string>\",\n    \"dolor4bd\": \"<string>\",\n    \"laborum0d\": \"<string>\",\n    \"autea\": \"<string>\",\n    \"Duis_64\": \"<string>\",\n    \"suntf\": \"<string>\",\n    \"estce2\": \"<string>\",\n    \"commodo_8a\": \"<string>\",\n    \"sint_d0_\": \"<string>\",\n    \"pariatur2\": \"<string>\",\n    \"essedf8\": \"<string>\",\n    \"dolor_3_\": \"<string>\",\n    \"laborum0fd\": \"<string>\",\n    \"ex_20c\": \"<string>\",\n    \"aliqua_b4_\": \"<string>\",\n    \"irure33d\": \"<string>\",\n    \"minim1\": \"<string>\",\n    \"ut_95f\": \"<string>\",\n    \"voluptate_cf\": \"<string>\",\n    \"ameta\": \"<string>\",\n    \"non_f\": \"<string>\",\n    \"veniam_bfc\": \"<string>\",\n    \"nullae3\": \"<string>\",\n    \"ut_83\": \"<string>\",\n    \"Ut9\": \"<string>\",\n    \"laboris_908\": \"<string>\",\n    \"ea0\": \"<string>\",\n    \"tempor499\": \"<string>\",\n    \"veniame4\": \"<string>\",\n    \"elitd\": \"<string>\",\n    \"Excepteur_\": \"<string>\",\n    \"proident_f\": \"<string>\",\n    \"ullamco441\": \"<string>\",\n    \"qui9\": \"<string>\",\n    \"cupidatatb0\": \"<string>\",\n    \"ex_3e\": \"<string>\",\n    \"dolor_52\": \"<string>\",\n    \"sint_559\": \"<string>\",\n    \"qui8b\": \"<string>\",\n    \"in_7_\": \"<string>\",\n    \"sit_ba\": \"<string>\",\n    \"adipisicingd9\": \"<string>\",\n    \"aliqua_bf\": \"<string>\",\n    \"mollita\": \"<string>\",\n    \"cillume3\": \"<string>\",\n    \"non_6\": \"<string>\",\n    \"anim__\": \"<string>\",\n    \"amet56_\": \"<string>\",\n    \"velitb\": \"<string>\",\n    \"dolore_d65\": \"<string>\",\n    \"sunta_3\": \"<string>\",\n    \"in_d\": \"<string>\",\n    \"Ut_357\": \"<string>\",\n    \"reprehenderit4\": \"<string>\",\n    \"laborum_6d8\": \"<string>\",\n    \"ipsum_be\": \"<string>\",\n    \"adipisicing_270\": \"<string>\",\n    \"ad1f2\": \"<string>\",\n    \"dolor_a\": \"<string>\",\n    \"dolore_4b\": \"<string>\",\n    \"pariatur952\": \"<string>\",\n    \"aliquip_5f7\": \"<string>\",\n    \"pariatur10e\": \"<string>\",\n    \"dolor9\": \"<string>\",\n    \"nisi_b98\": \"<string>\",\n    \"sunt_f\": \"<string>\",\n    \"fugiat_ca\": \"<string>\",\n    \"aute_9c\": \"<string>\",\n    \"magnab3f\": \"<string>\",\n    \"Excepteur_27\": \"<string>\",\n    \"dolor_3\": \"<string>\",\n    \"voluptate_c3\": \"<string>\",\n    \"aliqua_ed\": \"<string>\",\n    \"labore_c8d\": \"<string>\",\n    \"sunt_eb\": \"<string>\",\n    \"et_dd\": \"<string>\",\n    \"commodo_62_\": \"<string>\",\n    \"aliquip0\": \"<string>\",\n    \"minim_ba1\": \"<string>\",\n    \"pariatur383\": \"<string>\",\n    \"dolor_b5\": \"<string>\",\n    \"quis_3\": \"<string>\",\n    \"veniam6\": \"<string>\",\n    \"officia2\": \"<string>\",\n    \"enim_1\": \"<string>\",\n    \"ipsum_dd\": \"<string>\",\n    \"deserunt3\": \"<string>\",\n    \"minim_7b\": \"<string>\",\n    \"irure__0\": \"<string>\",\n    \"reprehenderit64\": \"<string>\",\n    \"ipsum3_9\": \"<string>\",\n    \"sunted\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"value\": \"<Error: Could not resolve allOf schema\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete an Authentication Provider",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v1",
                    "users",
                    "authentication-providers",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Authentication Provider ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing Authentication Provider by providing its ID.\n\n### **Analytic events**\n* USER_AUTHENTICATION_PROVIDER_DELETE_START\n* USER_AUTHENTICATION_PROVIDER_DELETE_SUCCESS\n* USER_AUTHENTICATION_PROVIDER_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Authentication Provider deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/authentication-providers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v1",
                        "users",
                        "authentication-providers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Authentication Provider ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing Authentication providers for OID4VCI workflows."
        },
        {
          "name": "Interaction Hook",
          "item": [
            {
              "name": "Configure Interaction Hook",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"interactionHook\": {\n    \"url\": \"<uri>\",\n    \"sessionTimeoutInSec\": \"<number>\",\n    \"disabled\": true\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/configuration",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "configuration"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Configure the Interaction Hook for the OpenID4VCI protocol on your tenant.\nMany credential issuance journeys require the issuer to perform custom interactions with the user. This could be gathering more information, performing additional authentication steps (E.g, 2FA, MFA or biometric checks) or communicating the terms of service. To facilitate this requirement, you can configure MATTR VII to invoke an interaction hook which will redirect the user to a custom component during the credential issuance journey. This redirect happens **after** the user is authenticated with your configured identity provider but **before** the credential is issued to the user. Upon successful completion of the interaction hook, your custom component will redirect the user back to their digital wallet to complete the credential issuance flow. Your interaction hook component can be either a web or native application.  We recommend using a web interface because it's more compatible with most scenarios.\n> You can only configure one interaction hook on your MATTR VII tenant. If you require several custom interactions as part of the credential issuance workflow, they should all be linked into a single interaction hook component.\n\n### **Analytic events**\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_START\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "Interaction Hook configured",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"interactionHook\": {\n    \"url\": \"<uri>\",\n    \"sessionTimeoutInSec\": \"<number>\",\n    \"disabled\": true\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "configuration"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"interactionHook\": \"<object>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"interactionHook\": {\n    \"url\": \"<uri>\",\n    \"sessionTimeoutInSec\": \"<number>\",\n    \"disabled\": true\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "configuration"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Interaction Hook",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/configuration",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "configuration"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves the Interaction Hook configuration from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_PROVIDER_OPENID_CONFIGURATION_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Interaction Hook configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/configuration",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "configuration"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"interactionHook\": \"<object>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing Interaction hooks for OID4VCI workflows."
        },
        {
          "name": "Claims Source",
          "item": [
            {
              "name": "Configure a claims source",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"requestMethod\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claim-sources",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claim-sources"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Configures a new claims source for your tenant. When issuing a new credential, MATTR VII will make either a GET or a POST request to the claims source using the configured request parameters and fetch available data. This fetched data can then be included in the issued credential.\n\n### **Analytic event**\n* CLAIM_SOURCE_CREATE_START\n* CLAIM_SOURCE_CREATE_SUCCESS\n* CLAIM_SOURCE_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source configured",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"requestMethod\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"requestMethod\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"requestMethod\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all claims sources",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claim-sources?limit=<number>&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claim-sources"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "<number>",
                      "description": "Range size of returned entries, default 100"
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the range of entries"
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all claims sources configured on your tenant.\n\n### **Analytic event**\n* CLAIM_SOURCE_RETRIEVE_LIST_START\n* CLAIM_SOURCE_RETRIEVE_LIST_SUCCESS\n* CLAIM_SOURCE_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims sources retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources?limit=<number>&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"authorization\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"requestParameters\": {\n        \"mapFrom\": \"<string>\"\n      },\n      \"url\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"requestMethod\": \"<string>\"\n    },\n    {\n      \"authorization\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"name\": \"<string>\",\n      \"requestParameters\": {\n        \"mapFrom\": \"<string>\"\n      },\n      \"url\": \"<string>\",\n      \"id\": \"<uuid>\",\n      \"requestMethod\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources?limit=<number>&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "<number>"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a claims source",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claim-sources", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Claims source ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an existing claims source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_RETRIEVE_START\n* CLAIM_SOURCE_RETRIEVE_SUCCESS\n* CLAIM_SOURCE_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"requestMethod\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Claims source not found",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Update a claims source",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"requestMethod\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claim-sources", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Claims source ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing claim source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_UPDATE_START\n* CLAIM_SOURCE_UPDATE_SUCCESS\n* CLAIM_SOURCE_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"requestMethod\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"requestMethod\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"requestMethod\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Claims source not found",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"authorization\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"requestParameters\": {\n    \"mapFrom\": \"<string>\"\n  },\n  \"url\": \"<string>\",\n  \"requestMethod\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Delete a claims source",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "claim-sources", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Claims source ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing claims source by providing its `claimSourceID`.\n\n### **Analytic event**\n* CLAIM_SOURCE_DELETE_START\n* CLAIM_SOURCE_DELETE_SUCCESS\n* CLAIM_SOURCE_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Claims source deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Claims source not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/claim-sources/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "claim-sources", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Claims source ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing Claim sources for OID4VCI workflows."
        },
        {
          "name": "CWT credentials configuration",
          "item": [
            {
              "name": "Create a CWT credential configuration",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"claimMappings\": {\n    \"ipsum_6d9\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": \"<string>\",\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "configurations"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new CWT credential configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "CWT credential configuration created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"ipsum_6d9\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": \"<string>\",\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"claimMappings\": {\n    \"laborum3e8\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"proident_1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"revocable\": true,\n  \"type\": \"<string>\",\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"ipsum_6d9\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": \"<string>\",\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all CWT credential configurations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/configurations?limit=100&cursor=<string>&type=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "configurations"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The optional credential type to filter on"
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all CWT credential configurations from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "CWT credential configurations retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"claimMappings\": {\n        \"occaecat_f0f\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"proident_6\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        }\n      },\n      \"id\": \"<uuid>\",\n      \"revocable\": true,\n      \"type\": \"<string>\",\n      \"claimSourceId\": \"<uuid>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      }\n    },\n    {\n      \"claimMappings\": {\n        \"et_fed\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"tempor_cd4\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        }\n      },\n      \"id\": \"<uuid>\",\n      \"revocable\": true,\n      \"type\": \"<string>\",\n      \"claimSourceId\": \"<uuid>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a CWT credential configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the CWT credential configuration."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a CWT credential configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "CWT credential configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"claimMappings\": {\n    \"laborum3e8\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"proident_1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"revocable\": true,\n  \"type\": \"<string>\",\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update a CWT credential configuration",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"claimMappings\": {\n    \"ipsum_6d9\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": \"<string>\",\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the CWT credential configuration."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing CWT credential configuration by providing its ID.\n        \n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "CWT credential configuration updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"ipsum_6d9\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": \"<string>\",\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"claimMappings\": {\n    \"laborum3e8\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"proident_1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"revocable\": true,\n  \"type\": \"<string>\",\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"ipsum_6d9\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": \"<string>\",\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"ipsum_6d9\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": \"<string>\",\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a CWT credential configuration",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the CWT credential configuration."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing CWT credential configuration by providing its ID.\n \n### **Analytic events**\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "CWT credential configuration deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the CWT credential configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for creating CWT credentials configuration."
        },
        {
          "name": "Semantic CWT credentials configuration",
          "item": [
            {
              "name": "Create a Semantic CWT credentials configuration",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"claimMappings\": {\n    \"dolorec\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": {},\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "configurations"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new Semantic CWT credentials configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Credential configuration created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"dolorec\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": {},\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"claimMappings\": {\n    \"quis4\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"ipsume\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"revocable\": true,\n  \"type\": {},\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"dolorec\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": {},\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Semantic CWT credentials configurations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations?limit=100&cursor=<string>&type=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "configurations"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The optional credential type to filter on"
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all Compact Semantic Credential configurations from your tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Semantic CWT credentials configurations retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"claimMappings\": {\n        \"minim_ec8\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"ut38\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        }\n      },\n      \"id\": \"<uuid>\",\n      \"revocable\": true,\n      \"type\": {},\n      \"claimSourceId\": \"<uuid>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      }\n    },\n    {\n      \"claimMappings\": {\n        \"Duis_6\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"aute_c0\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        }\n      },\n      \"id\": \"<uuid>\",\n      \"revocable\": true,\n      \"type\": {},\n      \"claimSourceId\": \"<uuid>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a Semantic CWT credentials configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a Semantic CWT credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Semantic CWT credentials configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"claimMappings\": {\n    \"quis4\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"ipsume\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"revocable\": true,\n  \"type\": {},\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update a Semantic CWT credentials configuration",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"claimMappings\": {\n    \"dolorec\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": {},\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing Semantic CWT credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Semantic CWT credentials configuration updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"dolorec\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": {},\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"claimMappings\": {\n    \"quis4\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"ipsume\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"id\": \"<uuid>\",\n  \"revocable\": true,\n  \"type\": {},\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"dolorec\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": {},\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claimMappings\": {\n    \"dolorec\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"type\": {},\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Delete a Semantic CWT credentials configuration",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing Semantic CWT credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Semantic CWT credentials configuration deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the Semantic CWT credentials configuration."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for creating Semantic CWT credentials configuration."
        },
        {
          "name": "JSON credentials configuration",
          "item": [
            {
              "name": "Create a JSON credentials configuration",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"dolore92e\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"commodo11\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v2",
                    "credentials",
                    "web-semantic",
                    "configurations"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new JSON credentials configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "JSON credentials configuration created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"ullamco_e1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"dolorc6\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"esse_2b_\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"ullamco_e1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all JSON credentials configurations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations?limit=100&cursor=<string>&type=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v2",
                    "credentials",
                    "web-semantic",
                    "configurations"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "The optional credential type to filter on"
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all JSON credential configurations on your tenant.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "JSON credentials configurations retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"issuer\": {\n        \"name\": \"<string>\",\n        \"logoUrl\": \"<string>\",\n        \"iconUrl\": \"<string>\"\n      },\n      \"persist\": false,\n      \"revocable\": true,\n      \"description\": \"<string>\",\n      \"additionalTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"contexts\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"proofType\": \"<string>\",\n      \"credentialBranding\": {\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImageUrl\": \"<string>\"\n      },\n      \"claimMappings\": {\n        \"dolor83f\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"aute6__\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"eu_de1\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"minimbf\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"quis_2\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        }\n      },\n      \"claimSourceId\": \"<uuid>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"name\": \"<string>\",\n      \"type\": \"<string>\",\n      \"issuer\": {\n        \"name\": \"<string>\",\n        \"logoUrl\": \"<string>\",\n        \"iconUrl\": \"<string>\"\n      },\n      \"persist\": false,\n      \"revocable\": true,\n      \"description\": \"<string>\",\n      \"additionalTypes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"contexts\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"proofType\": \"<string>\",\n      \"credentialBranding\": {\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImageUrl\": \"<string>\"\n      },\n      \"claimMappings\": {\n        \"laborisa6\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"tempor_60\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        },\n        \"culpaae_\": {\n          \"mapFrom\": \"<string>\",\n          \"required\": \"<boolean>\",\n          \"defaultValue\": \"<string>\"\n        }\n      },\n      \"claimSourceId\": \"<uuid>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a JSON credentials configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v2",
                    "credentials",
                    "web-semantic",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) JSON credentials configuration unique identifier"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve a JSON credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "JSON credentials configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"dolorc6\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"esse_2b_\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update a JSON credentials configuration",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"dolore92e\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"commodo11\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v2",
                    "credentials",
                    "web-semantic",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) JSON credentials configuration unique identifier"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing JSON credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "JSON credentials configuration updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"ullamco_e1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"dolorc6\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    },\n    \"esse_2b_\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"ullamco_e1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"type\": \"<string>\",\n  \"issuer\": {\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"description\": \"<string>\",\n  \"additionalTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"contexts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"proofType\": \"<string>\",\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"claimMappings\": {\n    \"ullamco_e1\": {\n      \"mapFrom\": \"<string>\",\n      \"required\": \"<boolean>\",\n      \"defaultValue\": \"<string>\"\n    }\n  },\n  \"persist\": false,\n  \"revocable\": true,\n  \"claimSourceId\": \"<uuid>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a JSON credentials configuration",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "core",
                    "v2",
                    "credentials",
                    "web-semantic",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) JSON credentials configuration unique identifier"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing JSON credentials configuration by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_START\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "JSON credentials configuration deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "The credential configuration is not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v2/credentials/web-semantic/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "core",
                        "v2",
                        "credentials",
                        "web-semantic",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) JSON credentials configuration unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing JSON credentials configuration."
        },
        {
          "name": "mDoc credentials configuration",
          "item": [
            {
              "name": "Create an mDocs configuration",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "configurations"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new mDocs configuration, a specific set of rules and parameters that are used to create and validate a particular type of verifiable credential. These rules and parameters define how the credential is structured and what data it contains when issued.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "mDocs configuration created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false,\n  \"claimSourceId\": \"<uuid>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all mDocs configurations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/configurations?limit=100&cursor=<string>&type=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "configurations"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "Optional credential type to filter on"
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves all mDocs configurations from your tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "mDocs configurations retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      },\n      \"claimMappings\": {\n        \"additionalProperties\": {\n          \"additionalProperties\": {\n            \"mapFrom\": \"<string>\",\n            \"type\": \"<string>\",\n            \"required\": false,\n            \"defaultValue\": \"<string>\"\n          }\n        }\n      },\n      \"branding\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImage\": \"<string>\",\n        \"issuerLogo\": \"<string>\",\n        \"issuerIcon\": \"<string>\"\n      },\n      \"includeStatus\": false,\n      \"claimSourceId\": \"<uuid>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"type\": \"<string>\",\n      \"expiresIn\": {\n        \"years\": \"<number>\",\n        \"months\": \"<number>\",\n        \"weeks\": \"<number>\",\n        \"days\": \"<number>\",\n        \"hours\": \"<number>\",\n        \"minutes\": \"<number>\",\n        \"seconds\": \"<number>\"\n      },\n      \"claimMappings\": {\n        \"additionalProperties\": {\n          \"additionalProperties\": {\n            \"mapFrom\": \"<string>\",\n            \"type\": \"<string>\",\n            \"required\": false,\n            \"defaultValue\": \"<string>\"\n          }\n        }\n      },\n      \"branding\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImage\": \"<string>\",\n        \"issuerLogo\": \"<string>\",\n        \"issuerIcon\": \"<string>\"\n      },\n      \"includeStatus\": false,\n      \"claimSourceId\": \"<uuid>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations?limit=100&cursor=<string>&type=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "configurations"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve an mDocs configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) mDocs configuration ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an existing mDocs configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "mDocs configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false,\n  \"claimSourceId\": \"<uuid>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update an mDocs configuration",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) mDocs configuration ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing mDocs configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "mDocs configuration updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false,\n  \"claimSourceId\": \"<uuid>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"type\": \"<string>\",\n  \"expiresIn\": {\n    \"years\": \"<number>\",\n    \"months\": \"<number>\",\n    \"weeks\": \"<number>\",\n    \"days\": \"<number>\",\n    \"hours\": \"<number>\",\n    \"minutes\": \"<number>\",\n    \"seconds\": \"<number>\"\n  },\n  \"claimMappings\": {\n    \"additionalProperties\": {\n      \"additionalProperties\": {\n        \"mapFrom\": \"<string>\",\n        \"type\": \"<string>\",\n        \"required\": false,\n        \"defaultValue\": \"<string>\"\n      }\n    }\n  },\n  \"claimSourceId\": \"<uuid>\",\n  \"branding\": {\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImage\": \"<string>\",\n    \"issuerLogo\": \"<string>\",\n    \"issuerIcon\": \"<string>\"\n  },\n  \"includeStatus\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete an mDocs configuration",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) mDocs configuration ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing mDocs configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_START\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_CONFIGURATION_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "mDocs configuration deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) mDocs configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing mDocs credentials configuration."
        },
        {
          "name": "Credential issuance",
          "item": [
            {
              "name": "Request authorization for access to resources",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=<string>&client_id=<string>&redirect_uri=<string>&scope=<string>&state=<string>&code_challenge_method=<string>&code_challenge=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "oauth", "authorize"],
                  "query": [
                    {
                      "key": "response_type",
                      "value": "<string>",
                      "description": "(Required) The response type, which must be 'code'."
                    },
                    {
                      "key": "client_id",
                      "value": "<string>",
                      "description": "(Required) The client identifier."
                    },
                    {
                      "key": "redirect_uri",
                      "value": "<string>",
                      "description": "(Required) The URI to which the authorization server will redirect the user-agent with the authorization code."
                    },
                    {
                      "key": "scope",
                      "value": "<string>",
                      "description": "(Required) The scope of the access request."
                    },
                    {
                      "key": "state",
                      "value": "<string>",
                      "description": "An opaque value used by the client to maintain state between the request and callback."
                    },
                    {
                      "key": "code_challenge_method",
                      "value": "<string>",
                      "description": "(Required) The method used to derive the code_challenge, which must be 'S256'."
                    },
                    {
                      "key": "code_challenge",
                      "value": "<string>",
                      "description": "(Required) A high entropy random challenge generated by the client."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "This endpoint is used to request authorization from the user for access to the requested resources. After the user approves the request, an authorization code is returned to the client.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-authorization-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-authorization-endpoint)\nSee [https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1)\n\n### **Analytic events**\n* OPENID_AUTHORIZE_START\n* OPENID_AUTHORIZE_SUCCESS\n* OPENID_AUTHORIZE_FAIL\n"
              },
              "response": [
                {
                  "name": "Redirection to client application with authorization code",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=<string>&client_id=<string>&redirect_uri=<string>&scope=<string>&state=<string>&code_challenge_method=<string>&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "<string>"
                        },
                        {
                          "key": "client_id",
                          "value": "<string>"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>"
                        },
                        {
                          "key": "scope",
                          "value": "<string>"
                        },
                        {
                          "key": "state",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Found",
                  "code": 302,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Location",
                      "value": "<string>",
                      "description": "URL to redirect to with the authorization code"
                    },
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=<string>&client_id=<string>&redirect_uri=<string>&scope=<string>&state=<string>&code_challenge_method=<string>&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "<string>"
                        },
                        {
                          "key": "client_id",
                          "value": "<string>"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>"
                        },
                        {
                          "key": "scope",
                          "value": "<string>"
                        },
                        {
                          "key": "state",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Unauthorized. The client is not recognized by authorization server.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=<string>&client_id=<string>&redirect_uri=<string>&scope=<string>&state=<string>&code_challenge_method=<string>&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "<string>"
                        },
                        {
                          "key": "client_id",
                          "value": "<string>"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>"
                        },
                        {
                          "key": "scope",
                          "value": "<string>"
                        },
                        {
                          "key": "state",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden. The client is recognized by authorization server but is not allowed to access this resource.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=<string>&client_id=<string>&redirect_uri=<string>&scope=<string>&state=<string>&code_challenge_method=<string>&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "<string>"
                        },
                        {
                          "key": "client_id",
                          "value": "<string>"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>"
                        },
                        {
                          "key": "scope",
                          "value": "<string>"
                        },
                        {
                          "key": "state",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/authorize?response_type=<string>&client_id=<string>&redirect_uri=<string>&scope=<string>&state=<string>&code_challenge_method=<string>&code_challenge=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "authorize"],
                      "query": [
                        {
                          "key": "response_type",
                          "value": "<string>"
                        },
                        {
                          "key": "client_id",
                          "value": "<string>"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>"
                        },
                        {
                          "key": "scope",
                          "value": "<string>"
                        },
                        {
                          "key": "state",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge_method",
                          "value": "<string>"
                        },
                        {
                          "key": "code_challenge",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Exchange authorization code for access token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "client_id",
                      "value": "<string>",
                      "description": "(Required) The client identifier."
                    },
                    {
                      "key": "grant_type",
                      "value": "<string>",
                      "description": "(Required) The grant type, which must be 'authorization_code'."
                    },
                    {
                      "key": "redirect_uri",
                      "value": "<string>",
                      "description": "(Required) The redirect URI that was used in the authorization request."
                    },
                    {
                      "key": "code",
                      "value": "<string>",
                      "description": "(Required) The authorization code obtained from the authorization endpoint."
                    },
                    {
                      "key": "code_verifier",
                      "value": "<string>",
                      "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/oauth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "oauth", "token"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "This endpoint is used to exchange an authorization code for an access token. The authorization code is obtained from the authorization endpoint after the user has authenticated and granted access.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-token-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-token-endpoint)\n\n### **Analytic events**\n* OPENID_TOKEN_START\n* OPENID_TOKEN_SUCCESS\n* OPENID_TOKEN_FAIL\n"
              },
              "response": [
                {
                  "name": "Access token successfully returned.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"access_token\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"scope\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Unauthorized. The client is not recognized by authorization server.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Forbidden. The client is recognized by authorization server but is not allowed to access this resource.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Internal Server Error. An unexpected error occurred.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_id",
                          "value": "<string>",
                          "description": "(Required) The client identifier."
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>",
                          "description": "(Required) The grant type, which must be 'authorization_code'."
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<string>",
                          "description": "(Required) The redirect URI that was used in the authorization request."
                        },
                        {
                          "key": "code",
                          "value": "<string>",
                          "description": "(Required) The authorization code obtained from the authorization endpoint."
                        },
                        {
                          "key": "code_verifier",
                          "value": "<string>",
                          "description": "(Required) SHA256 hash of the `code_challenge` in the authorization request."
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/oauth/token",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "oauth", "token"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Issue a verifiable credential",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"format\": \"<string>\",\n  \"credential_definition\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"proof\": {\n    \"proof_type\": \"<string>\",\n    \"jwt\": \"<string>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/credential",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "credential"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Issues a verifiable credential to a subject as part of the OpenID4VCI protocol.\n\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-credential-endpoint](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-credential-endpoint)\n\n### **Analytic events**\n* OPENID_CREDENTIAL_START\n* OPENID_CREDENTIAL_SUCCESS\n* OPENID_CREDENTIAL_FAIL"
              },
              "response": [
                {
                  "name": "Credential issued",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"format\": \"<string>\",\n  \"credential_definition\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"proof\": {\n    \"proof_type\": \"<string>\",\n    \"jwt\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/credential",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "credential"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"credential\": {\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuanceDate\": \"<dateTime>\",\n    \"credentialSubject\": {\n      \"givenName\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"alumniOf\": \"<string>\"\n    },\n    \"proof\": {\n      \"type\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"jws\": \"<string>\",\n      \"proofPurpose\": \"<string>\",\n      \"verificationMethod\": \"<string>\"\n    },\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"logoUrl\": \"<string>\",\n      \"iconUrl\": \"<string>\"\n    },\n    \"credentialBranding\": {\n      \"backgroundColor\": \"<string>\",\n      \"watermarkImageUrl\": \"<string>\"\n    },\n    \"credentialStatus\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"revocationListIndex\": \"<integer>\",\n      \"revocationListCredential\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"format\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Create an OpenID4VCI credential offer",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{bearerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"credentials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"request_parameters\": {\n    \"login_hint\": \"<string>\",\n    \"prompt\": \"<string>\"\n  }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/openid/offers",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "openid", "offers"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns an OpenID4VCI credential offer URI.\nSee [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#section-10.1](https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#section-10.1)\n\n### **Analytic events**\n* OPENID_OFFER_CREATE_START\n* OPENID_OFFER_CREATE_SUCCESS\n* OPENID_OFFER_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Credential offer URI created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"credentials\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"request_parameters\": {\n    \"login_hint\": \"<string>\",\n    \"prompt\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/openid/offers",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "openid", "offers"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"uri\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve OpenID4VCI issuer metadata",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/.well-known/openid-credential-issuer",
                  "host": ["{{baseUrl}}"],
                  "path": [".well-known", "openid-credential-issuer"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns OpenID4VCI issuer metadata. This is the standard OpenID4VCI Well Known endpoint for your tenant.\n\nThis endpoint is unprotected, public facing and can be deterministically found at the root of the tenant subdomain or alias by any party wishing to discover the OpenID4VCI capabilities."
              },
              "response": [
                {
                  "name": "OpenID4VCI credential issuer metadata retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/.well-known/openid-credential-issuer",
                      "host": ["{{baseUrl}}"],
                      "path": [".well-known", "openid-credential-issuer"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"issuer\": \"<uri>\",\n  \"authorization_endpoint\": \"<uri>\",\n  \"token_endpoint\": \"<uri>\",\n  \"scopes_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"response_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"response_modes_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grant_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"code_challenge_methods_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"credential_issuer\": \"<uri>\",\n  \"credential_endpoint\": \"<uri>\",\n  \"credentials_supported\": [\n    {\n      \"format\": \"<string>\",\n      \"id\": \"<string>\",\n      \"scope\": \"<string>\",\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"cryptographic_binding_methods_supported\": \"<string>\",\n      \"cryptographic_suites_supported\": \"<string>\"\n    },\n    {\n      \"format\": \"<string>\",\n      \"id\": \"<string>\",\n      \"scope\": \"<string>\",\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": \"<object>\",\n      \"cryptographic_binding_methods_supported\": \"<string>\",\n      \"cryptographic_suites_supported\": \"<string>\"\n    }\n  ],\n  \"mdoc_iacas_uri\": \"<uri>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for issuing credentials as part of an OID4VCI workflow."
        },
        {
          "name": "Users",
          "item": [
            {
              "name": "Search users",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"claims\": \"<object>\",\n  \"authenticationProvider\": {\n    \"providerId\": \"<string>\",\n    \"subjectId\": \"<string>\"\n  },\n  \"limit\": \"<number>\",\n  \"cursor\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/search",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", "search"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of users from the tenant that match all the provided search criteria (all criteria are optional).\n\n### **Analytic events**\n* USER_SEARCH_START\n* USER_SEARCH_SUCCESS\n* USER_SEARCH_FAIL"
              },
              "response": [
                {
                  "name": "Users retrieved",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claims\": \"<object>\",\n  \"authenticationProvider\": {\n    \"providerId\": \"<string>\",\n    \"subjectId\": \"<string>\"\n  },\n  \"limit\": \"<number>\",\n  \"cursor\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/search",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "search"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"claims\": \"<object>\",\n      \"authenticationProvider\": {\n        \"url\": \"<string>\",\n        \"subjectId\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"claims\": \"<object>\",\n      \"authenticationProvider\": {\n        \"url\": \"<string>\",\n        \"subjectId\": \"<string>\"\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claims\": \"<object>\",\n  \"authenticationProvider\": {\n    \"providerId\": \"<string>\",\n    \"subjectId\": \"<string>\"\n  },\n  \"limit\": \"<number>\",\n  \"cursor\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/search",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", "search"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all users",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all users on your tenant.\n\n### **Analytic events**\n* USER_RETRIEVE_LIST_START\n* USER_RETRIEVE_LIST_SUCCESS\n* USER_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Users retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"claims\": \"<object>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"claims\": \"<object>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a user",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve an existing user by providing its ID.\n* USER_RETRIEVE_START\n* USER_RETRIEVE_SUCCESS\n* USER_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "User retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"claims\": \"<object>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update a User",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"claims\": \"<object>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing user by providing its ID.\n\n* USER_UPDATE_START\n* USER_UPDATE_SUCCESS\n* USER_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "User updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claims\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"claims\": \"<object>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claims\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"claims\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a user",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes a user and removes any persisted data related to them by providing the user ID.\n\n> Any credentials issued to the user remain valid even after the user is deleted.\n  \n### **Analytic events**\n* USER_DELETE_START\n* USER_DELETE_SUCCESS\n* USER_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "User deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve all user credentials data",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/core/v1/users/:userId/credentials?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["core", "v1", "users", ":userId", "credentials"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "userId",
                      "value": "<uuid>",
                      "description": "(Required) User ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of metadata for all the credentials referenced by the provided `userId`.\n"
              },
              "response": [
                {
                  "name": "User credentials retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:userId/credentials?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":userId", "credentials"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "userId",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"profile\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"profile\": \"<string>\"\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/core/v1/users/:userId/credentials?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["core", "v1", "users", ":userId", "credentials"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "userId",
                          "value": "<uuid>",
                          "description": "(Required) User ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing users as part of OID4VCI workflows."
        }
      ]
    },
    {
      "name": "Credential management",
      "item": [
        {
          "name": "CWT credentials management",
          "item": [
            {
              "name": "Delete CWT credential metadata",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes all credential metadata from the tenant for a specific credential by providing its ID. If the credential was set to be revocable, it will be permanently revoked upon metadata deletion.\n\nNote that only metadata of revocable credentials or credentials issued via the OpenID4VCI flow is saved.\n\n> Deleted metadata cannot be recovered."
              },
              "response": [
                {
                  "name": "Credential metadata deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve all CWT credential revocation lists",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "revocation-lists"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all CWT credential revocation lists on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_START\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_LISTS_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation lists retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "revocation-lists"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n  {\n    \"nextCursor\": \"<string>\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"nextCursor\": \"<string>\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  }\n]"
                }
              ]
            },
            {
              "name": "Retrieve CWT credential revocation list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/cwt"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists/:listId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    "revocation-lists",
                    ":listId"
                  ],
                  "variable": [
                    {
                      "key": "listId",
                      "value": "<string>",
                      "description": "(Required) The unique identifier of the Revocation List you wish to retrieve."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a CWT credential revocation list by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/cwt"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/revocation-lists/:listId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        "revocation-lists",
                        ":listId"
                      ],
                      "variable": [
                        {
                          "key": "listId",
                          "value": "<string>",
                          "description": "(Required) The unique identifier of the Revocation List you wish to retrieve."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/cwt"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                }
              ]
            },
            {
              "name": "Update CWT credential revocation status",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    ":id",
                    "revocation-status"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates the credential status as revoked (invalid) or unrevoked (valid).\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_START\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_COMPACT_REVOCATION_SET_STATUS_FAIL"
              },
              "response": [
                {
                  "name": "Revocation status updated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve CWT credential revocation status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact",
                    ":id",
                    "revocation-status"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve the revocation status of a CWT credential by providing its ID."
              },
              "response": [
                {
                  "name": "Revocation status retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing CWT credentials."
        },
        {
          "name": "Semantic CWT credentials management",
          "item": [
            {
              "name": "Delete Semantic CWT credential metadata",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes all credential metadata from the tenant for a specific credential by providing its ID. If the credential was set to be revocable, it will be permanently revoked upon metadata deletion.\n\nNote that only metadata of revocable credentials or credentials issued via the OpenID4VCI flow is saved.\n\n> Deleted metadata cannot be recovered."
              },
              "response": [
                {
                  "name": "Credential metadata deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Semantic CWT credential revocation lists",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "revocation-lists"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all Semantic CWT credential revocation lists on the tenant.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_LISTS_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation lists retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "revocation-lists"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n  {\n    \"nextCursor\": \"<string>\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"nextCursor\": \"<string>\",\n    \"data\": [\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"issuer\": \"<string>\",\n        \"url\": \"<string>\"\n      }\n    ]\n  }\n]"
                }
              ]
            },
            {
              "name": "Retrieve Semantic CWT credential revocation list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/cwt"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists/:listId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    "revocation-lists",
                    ":listId"
                  ],
                  "variable": [
                    {
                      "key": "listId",
                      "value": "<string>",
                      "description": "(Required) The unique identifier of the revocation list you wish to retrieve."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a Semantic CWT credential revocation list by providing its ID.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/cwt"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/revocation-lists/:listId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "revocation-lists",
                        ":listId"
                      ],
                      "variable": [
                        {
                          "key": "listId",
                          "value": "<string>",
                          "description": "(Required) The unique identifier of the revocation list you wish to retrieve."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/cwt"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                }
              ]
            },
            {
              "name": "Update Semantic CWT credential revocation status",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    ":id",
                    "revocation-status"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier (`jti`)"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates the credential status as revoked (invalid) or unrevoked (valid).\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_START\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_REVOCATION_SET_STATUS_FAIL"
              },
              "response": [
                {
                  "name": "Revocation status updated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier (`jti`)"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier (`jti`)"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Semantic CWT credential revocation status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "compact-semantic",
                    ":id",
                    "revocation-status"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Unique credential identifier (`jti`)"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve the revocation status of a Semantic CWT credential by providing its ID."
              },
              "response": [
                {
                  "name": "Revocation status retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier (`jti`)"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Unique credential identifier (`jti`)"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing Semantic CWT credentials."
        },
        {
          "name": "JSON credentials management",
          "item": [
            {
              "name": "Retrieve all credential data",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic?tag=<string>&type=<string>&limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic"],
                  "query": [
                    {
                      "key": "tag",
                      "value": "<string>",
                      "description": "Optional tag to filter on."
                    },
                    {
                      "key": "type",
                      "value": "<string>",
                      "description": "Optional credential type to filter on."
                    },
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns all available data for existing credentials:\n- For credentials that were created with the `persist` flag set to `true`, the response contains both the credential and its metadata.\n- For credentials that were created with the persist flag set to `false`, the response only contains the metadata (`id`, `tag`, `credentialStatus`, `issuanceDate`).\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_START\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Credentials data retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic?tag=<string>&type=<string>&limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic"],
                      "query": [
                        {
                          "key": "tag",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        },
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"issuanceDate\": \"<string>\",\n      \"credential\": {\n        \"@context\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"issuanceDate\": \"<dateTime>\",\n        \"credentialSubject\": {\n          \"givenName\": \"<string>\",\n          \"familyName\": \"<string>\",\n          \"alumniOf\": \"<string>\"\n        },\n        \"proof\": {\n          \"type\": \"<string>\",\n          \"created\": \"<dateTime>\",\n          \"jws\": \"<string>\",\n          \"proofPurpose\": \"<string>\",\n          \"verificationMethod\": \"<string>\"\n        },\n        \"issuer\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"logoUrl\": \"<string>\",\n          \"iconUrl\": \"<string>\"\n        },\n        \"credentialBranding\": {\n          \"backgroundColor\": \"<string>\",\n          \"watermarkImageUrl\": \"<string>\"\n        },\n        \"credentialStatus\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"revocationListIndex\": \"<integer>\",\n          \"revocationListCredential\": \"<string>\"\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"tag\": \"<string>\",\n      \"credentialStatus\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"revocationListIndex\": \"<integer>\",\n        \"revocationListCredential\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<string>\",\n      \"issuanceDate\": \"<string>\",\n      \"credential\": {\n        \"@context\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"issuanceDate\": \"<dateTime>\",\n        \"credentialSubject\": {\n          \"givenName\": \"<string>\",\n          \"familyName\": \"<string>\",\n          \"alumniOf\": \"<string>\"\n        },\n        \"proof\": {\n          \"type\": \"<string>\",\n          \"created\": \"<dateTime>\",\n          \"jws\": \"<string>\",\n          \"proofPurpose\": \"<string>\",\n          \"verificationMethod\": \"<string>\"\n        },\n        \"issuer\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"logoUrl\": \"<string>\",\n          \"iconUrl\": \"<string>\"\n        },\n        \"credentialBranding\": {\n          \"backgroundColor\": \"<string>\",\n          \"watermarkImageUrl\": \"<string>\"\n        },\n        \"credentialStatus\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"revocationListIndex\": \"<integer>\",\n          \"revocationListCredential\": \"<string>\"\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      },\n      \"tag\": \"<string>\",\n      \"credentialStatus\": {\n        \"id\": \"<string>\",\n        \"type\": \"<string>\",\n        \"revocationListIndex\": \"<integer>\",\n        \"revocationListCredential\": \"<string>\"\n      }\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic?tag=<string>&type=<string>&limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic"],
                      "query": [
                        {
                          "key": "tag",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        },
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve credential data",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns all available data for an existing credential that matches the provided ID:\n- For credentials that were created with the `persist` flag set to `true`, the response contains both the credential and its metadata.\n- For credentials that were created with the persist flag set to `false`, the response only contains the metadata (`id`, `tag`, `credentialStatus`, `issuanceDate`)\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Credential data retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"issuanceDate\": \"<string>\",\n  \"credential\": {\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuanceDate\": \"<dateTime>\",\n    \"credentialSubject\": {\n      \"givenName\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"alumniOf\": \"<string>\"\n    },\n    \"proof\": {\n      \"type\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"jws\": \"<string>\",\n      \"proofPurpose\": \"<string>\",\n      \"verificationMethod\": \"<string>\"\n    },\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"logoUrl\": \"<string>\",\n      \"iconUrl\": \"<string>\"\n    },\n    \"credentialBranding\": {\n      \"backgroundColor\": \"<string>\",\n      \"watermarkImageUrl\": \"<string>\"\n    },\n    \"credentialStatus\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"revocationListIndex\": \"<integer>\",\n      \"revocationListCredential\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"tag\": \"<string>\",\n  \"credentialStatus\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"revocationListIndex\": \"<integer>\",\n    \"revocationListCredential\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete credential data",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Credential ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes all stored data for an existing credential that matches the provided ID. If the credential is revocable, it will also be permanently revoked.\n\n> Removed credential data cannot be recovered.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_DELETE_START\n* CREDENTIAL_WEB_SEMANTIC_DELETE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Credential deleted and revoked if revocable",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Set credential revocation status",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    ":id",
                    "revocation-status"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Credential ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Sets the revocation status of the credential that matches the provided ID as `true` (revoked) or `false` (unrevoked).\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_SET_STATUS_FAIL\n"
              },
              "response": [
                {
                  "name": "Revocation status updated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"isRevoked\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve credential revocation status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    ":id",
                    "revocation-status"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Credential ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns the revocation status of the credential matching the provided ID.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Credential status",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"isRevoked\": \"<boolean>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        ":id",
                        "revocation-status"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Credential ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve revocation list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/revocation-lists/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "revocation-lists",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Revocation list ID. This value can be found within the credential you created. Look at the value for `Credential.credential.credentialStatus.id`, the string after `https://tenant.vii.mattr.global/core/v1/revocation-lists/` is what you're looking for"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns the revocation list matching the provided ID."
              },
              "response": [
                {
                  "name": "Revocation list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/revocation-lists/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "revocation-lists",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Revocation list ID. This value can be found within the credential you created. Look at the value for `Credential.credential.credentialStatus.id`, the string after `https://tenant.vii.mattr.global/core/v1/revocation-lists/` is what you're looking for"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"@context\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"issuanceDate\": \"<dateTime>\",\n  \"credentialSubject\": {\n    \"givenName\": \"<string>\",\n    \"familyName\": \"<string>\",\n    \"alumniOf\": \"<string>\"\n  },\n  \"proof\": {\n    \"type\": \"<string>\",\n    \"created\": \"<dateTime>\",\n    \"jws\": \"<string>\",\n    \"proofPurpose\": \"<string>\",\n    \"verificationMethod\": \"<string>\"\n  },\n  \"issuer\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"logoUrl\": \"<string>\",\n    \"iconUrl\": \"<string>\"\n  },\n  \"credentialBranding\": {\n    \"backgroundColor\": \"<string>\",\n    \"watermarkImageUrl\": \"<string>\"\n  },\n  \"credentialStatus\": {\n    \"id\": \"<string>\",\n    \"type\": \"<string>\",\n    \"revocationListIndex\": \"<integer>\",\n    \"revocationListCredential\": \"<string>\"\n  },\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/revocation-lists/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "revocation-lists",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Revocation list ID. This value can be found within the credential you created. Look at the value for `Credential.credential.credentialStatus.id`, the string after `https://tenant.vii.mattr.global/core/v1/revocation-lists/` is what you're looking for"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Create a revocation message payload",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"from\": \"<string>\",\n  \"to\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status/notification",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    ":id",
                    "revocation-status",
                    "notification"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Unique identifier for the credential whose status has changed."
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a message in JWM format that can be used to notify subjects based on their credential revocation status change.\n\nTo send a notification to the Subject DID holder, use the returned payload with the [encrypt](#operation/encryptMessage) and [send](#operation/sendMessage) endpoints.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_START\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_REVOCATION_MESSAGE_PAYLOAD_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Revocation message payload created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"from\": \"<string>\",\n  \"to\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/:id/revocation-status/notification",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        ":id",
                        "revocation-status",
                        "notification"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the credential whose status has changed."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"type\": \"<string>\",\n  \"to\": [\n    {\n      \"string\": \"ullamco aute dolor\"\n    },\n    {\n      \"string\": true\n    }\n  ],\n  \"from\": \"<string>\",\n  \"created_time\": \"<number>\",\n  \"body\": {\n    \"revocationListCredential\": \"<string>\",\n    \"revocationListIndex\": \"<string>\",\n    \"isRevoked\": \"<boolean>\"\n  }\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing JSON credentials."
        },
        {
          "name": "mDocs management",
          "item": [
            {
              "name": "Delete mDoc metadata",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) mDoc ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes all stored data for an existing mDoc that matches the provided ID.\n\n> Removed credential data cannot be recovered.\n\n### **Analytic events**\n* USER_CREDENTIAL_DELETE_START\n* USER_CREDENTIAL_DELETE_SUCCESS\n* USER_CREDENTIAL_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "mDoc metadata deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) mDoc ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid id parameter format",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) mDoc ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) mDoc ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update mDoc status",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    ":credentialId",
                    "status"
                  ],
                  "variable": [
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) mDoc identifier"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Sets the status of an existing mDoc by providing its `credentialId` and the new status. Status can only be **valid**, **suspended** or **invalid**.\n\nOnce an mDoc's status is updated to **invalid**, it cannot be updated again to any other value.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_SET_START\n* MOBILE_CREDENTIAL_STATUS_SET_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_SET_FAIL"
              },
              "response": [
                {
                  "name": "Credential status updated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        ":credentialId",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) mDoc identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        ":credentialId",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) mDoc identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        ":credentialId",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) mDoc identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve mDoc status",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    ":credentialId",
                    "status"
                  ],
                  "variable": [
                    {
                      "key": "credentialId",
                      "value": "<uuid>",
                      "description": "(Required) mDoc identifier"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves the status of an existing mDoc by providing its `credentialId`.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_RETRIEVE_START\n* MOBILE_CREDENTIAL_STATUS_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Credential status retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        ":credentialId",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) mDoc identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        ":credentialId",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) mDoc identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/:credentialId/status",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        ":credentialId",
                        "status"
                      ],
                      "variable": [
                        {
                          "key": "credentialId",
                          "value": "<uuid>",
                          "description": "(Required) mDoc identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Create a Status list configuration",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<object>",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    "configurations"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a Status list configuration, which defines a status list validity periods. mDocs can then be assigned to a specific Status list configuration.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_CREATE_START\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Status list configuration created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<object>",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"docType\": \"<string>\",\n  \"timeToLiveDuration\": \"<object>\",\n  \"expiryDuration\": \"<object>\"\n}"
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<object>",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Status list configurations",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    "configurations"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves all Status list configurations from your tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_RETRIEVE_LIST_\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Status list configurations retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"docType\": \"<string>\",\n      \"timeToLiveDuration\": \"<object>\",\n      \"expiryDuration\": \"<object>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"docType\": \"<string>\",\n      \"timeToLiveDuration\": \"<object>\",\n      \"expiryDuration\": \"<object>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a Status list configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Status list configuration ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an existing Status list configuration by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_RETRIEVE_START\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Status list configuration retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"docType\": \"<string>\",\n  \"timeToLiveDuration\": \"<object>\",\n  \"expiryDuration\": \"<object>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update a Status list configuration",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"timeToLiveDuration\": \"<object>\",\n  \"expiryDuration\": \"<object>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Status list configuration ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing Status list configuration, allowing you to adjust the expiry and TTL (Time To Live) settings.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_UPDATE_START\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_UPDATE_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "Status list configuration updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"timeToLiveDuration\": \"<object>\",\n  \"expiryDuration\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"docType\": \"<string>\",\n  \"timeToLiveDuration\": \"<object>\",\n  \"expiryDuration\": \"<object>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"timeToLiveDuration\": \"<object>\",\n  \"expiryDuration\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"timeToLiveDuration\": \"<object>\",\n  \"expiryDuration\": \"<object>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a Status list configuration",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    "configurations",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Status list configuration ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Permanently deletes an existing Status list configuration.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_DELETE_START\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_CONFIGURATION_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "Status list configuration deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/configurations/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "configurations",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Status list configuration ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve all Status lists",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "mobile", "status-lists"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves all existing status lists from your tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_STATUS_LIST_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "Status lists retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "mobile", "status-lists"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"id\": \"<uuid>\",\n      \"iacaId\": \"<uuid>\",\n      \"statusListConfigurationId\": \"<uuid>\",\n      \"listSize\": \"<integer>\",\n      \"list\": \"<string>\"\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"iacaId\": \"<uuid>\",\n      \"statusListConfigurationId\": \"<uuid>\",\n      \"listSize\": \"<integer>\",\n      \"list\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a Status list",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    ":statusListId"
                  ],
                  "variable": [
                    {
                      "key": "statusListId",
                      "value": "<uuid>",
                      "description": "(Required) Status list unique identifier"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an existing Status list and its signed token by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_RETRIEVE_START\n* MOBILE_CREDENTIAL_STATUS_LIST_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Status list retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        ":statusListId"
                      ],
                      "variable": [
                        {
                          "key": "statusListId",
                          "value": "<uuid>",
                          "description": "(Required) Status list unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<uuid>\",\n  \"iacaId\": \"<uuid>\",\n  \"statusListConfigurationId\": \"<uuid>\",\n  \"listSize\": \"<integer>\",\n  \"list\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        ":statusListId"
                      ],
                      "variable": [
                        {
                          "key": "statusListId",
                          "value": "<uuid>",
                          "description": "(Required) Status list unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        ":statusListId"
                      ],
                      "variable": [
                        {
                          "key": "statusListId",
                          "value": "<uuid>",
                          "description": "(Required) Status list unique identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Retrieve a Status list token",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/cwt"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId/token",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    ":statusListId",
                    "token"
                  ],
                  "variable": [
                    {
                      "key": "statusListId",
                      "value": "<uuid>",
                      "description": "(Required) Status list identifier"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves the Status list token in CWT format. This public end point returns a token which contains a compressed, signed list of credential statuses. Relying parties\ncan use this token to check the revocation status of an mDoc that references this Status list.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_TOKEN_RETRIEVE_START\n* MOBILE_CREDENTIAL_STATUS_LIST_TOKEN_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_TOKEN_RETRIEVE_FAIL\n"
              },
              "response": [
                {
                  "name": "Status list token retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/cwt"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId/token",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        ":statusListId",
                        "token"
                      ],
                      "variable": [
                        {
                          "key": "statusListId",
                          "value": "<uuid>",
                          "description": "(Required) Status list identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/cwt"
                    }
                  ],
                  "cookie": [],
                  "body": "<binary>"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId/token",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        ":statusListId",
                        "token"
                      ],
                      "variable": [
                        {
                          "key": "statusListId",
                          "value": "<uuid>",
                          "description": "(Required) Status list identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                },
                {
                  "name": "Status list expired",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/:statusListId/token",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        ":statusListId",
                        "token"
                      ],
                      "variable": [
                        {
                          "key": "statusListId",
                          "value": "<uuid>",
                          "description": "(Required) Status list identifier"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Gone",
                  "code": 410,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Status list distribution",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/distribution",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "mobile",
                    "status-lists",
                    "distribution"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an object that details all existing Status lists tokens on the tenant. This public endpoint allows a relying party to consume and cache status lists. Each list\nin the response includes a URL where its token can be retrieved. Status list tokens that were signed by expired IACAs are excluded from the response.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_STATUS_LIST_DISTRIBUTION_START\n* MOBILE_CREDENTIAL_STATUS_LIST_DISTRIBUTION_SUCCESS\n* MOBILE_CREDENTIAL_STATUS_LIST_DISTRIBUTION_FAIL\n"
              },
              "response": [
                {
                  "name": "Status lists retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/status-lists/distribution",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "status-lists",
                        "distribution"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"data\": [\n    {\n      \"status_lists\": {\n        \"uri\": \"<string>\"\n      }\n    },\n    {\n      \"status_lists\": {\n        \"uri\": \"<string>\"\n      }\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing mDocs credentials."
        }
      ]
    },
    {
      "name": "Credential verification",
      "item": [
        {
          "name": "CWT credentials verification",
          "item": [
            {
              "name": "Verify a CWT credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                      "type": "file",
                      "src": []
                    },
                    {
                      "key": "trustedIssuers",
                      "value": "[\"<string>\",\"<string>\"]",
                      "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidFrom",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidUntil",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                      "type": "text"
                    },
                    {
                      "key": "checkRevocation",
                      "value": "true",
                      "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact", "verify"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Verify a CWT credential by providing the encoded payload and specifying verification options.\n\nYou can provide a valid CWT credential as either an encoded string or a QR code in a PDF document or an image file.\n\nStandard checks performed on all verification requests:\n- Conformance of the string and encoded data. All string representations of CWT credentials must be prefixed with `CSC/1`.\n- Decoded payload structure is a valid CWT credential.\n- Issuer DID can be used to resolve its `did.json` document.\n- Public key from issuer's `did.json` document validates the proof signature, confirming the credential has not been tampered with.\n\nOptional parameter checks:\n- Credential was issued by a trusted issuer.\n- Current time is after the beginning of the credential validity period.\n- Current time is not after the end of the credential validity period.\n- Credential has not been revoked.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_VERIFY_START\n* CREDENTIAL_COMPACT_VERIFY_SUCCESS\n* CREDENTIAL_COMPACT_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"verified\": \"<boolean>\",\n  \"decoded\": {\n    \"iss\": \"<string>\",\n    \"jti\": \"<string>\",\n    \"nbf\": \"<number>\",\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": {\n      \"url\": \"<string>\",\n      \"index\": \"<number>\"\n    }\n  },\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"details\": \"<object>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Payload Too Large",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Request Entity Too Large",
                  "code": 413,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unsupported Media Type",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image:\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "compact", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Unsupported Media Type",
                  "code": 415,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for verifying CWT credentials."
        },
        {
          "name": "Semantic CWT credentials verification",
          "item": [
            {
              "name": "Verify a Semantic CWT credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "file",
                      "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                      "type": "file",
                      "src": []
                    },
                    {
                      "key": "trustedIssuers",
                      "value": "[\"<string>\",\"<string>\"]",
                      "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidFrom",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                      "type": "text"
                    },
                    {
                      "key": "assertValidUntil",
                      "value": "true",
                      "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                      "type": "text"
                    },
                    {
                      "key": "checkRevocation",
                      "value": "true",
                      "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "compact-semantic", "verify"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Verify a Semantic CWT credential by providing the encoded payload and specifying verification options.\n\nYou can provide a valid Semantic CWT credential as either an encoded string or a QR code in a PDF document or an image file.\n\nStandard checks performed on all verification requests:\n- Conformance of the string and encoded data. All string representations of CWT credentials must be prefixed with `CSC/1`.\n- Decoded payload CWT structure and attributes can be validated.\n- Remote context schema can be resolved and validate claims can be dereferenced.\n- Issuer DID can be used to resolve its `did.json` document.\n- Public key from issuer's `did.json` document validates the proof signature, confirming the credential has not been tampered with.\n\nOptional parameter checks:\n- Credential was issued by a trusted issuer.\n- Current time is after the beginning of the credential validity period.\n- Current time is not after the end of the credential validity period.\n- Credential has not been revoked.\n\n### **Analytic events**\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_START\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_SUCCESS\n* CREDENTIAL_COMPACT_SEMANTIC_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "verify"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"verified\": \"<boolean>\",\n  \"decoded\": {\n    \"iss\": \"<string>\",\n    \"nbf\": \"<number>\",\n    \"jti\": \"<string>\",\n    \"vc\": {\n      \"@context\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"credentialSubject\": {\n        \"eu_95\": \"<string>\",\n        \"incididuntf\": \"<string>\",\n        \"deserunt_b\": \"<string>\"\n      }\n    },\n    \"exp\": \"<number>\",\n    \"iat\": \"<number>\",\n    \"aud\": \"<string>\",\n    \"sub\": \"<string>\",\n    \"status\": {\n      \"url\": \"<string>\",\n      \"index\": \"<number>\"\n    }\n  },\n  \"error\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\",\n    \"details\": \"<object>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "verify"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Payload Too Large",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "verify"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Request Entity Too Large",
                  "code": 413,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Unsupported Media Type",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "file",
                          "value": "<binary>",
                          "description": "(Required) A PDF or an image\n- File size can be 1MB or under. Larger files are rejected with a 413 error. \n- Only the first page of PDF documents is processed.  \n- Image files must contain a QR code of sufficient quality and resolution. This depends on many factors such as the size of the QR relative to the image, and whether the image had been processed in any way.\n- For optimal performance, ensure that only a single QR code is present on the file. ",
                          "type": "text"
                        },
                        {
                          "key": "trustedIssuers",
                          "value": "[\"<string>\",\"<string>\"]",
                          "description": "When you include issuers' DIDs in this array, credentials will only be verified if their `iss` value matches one of these DIDs. You can include multiple trusted issuers, separated by commas.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidFrom",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `nbf` (not before) field by default, so that credentials that have a future `nbf` date will not be verified. When this field is set to `false`, credentials can be verified even when their `nbf` date is in the future.",
                          "type": "text"
                        },
                        {
                          "key": "assertValidUntil",
                          "value": "true",
                          "description": "MATTR VII validates the credential's `exp` (expiry) field by default, so that expired credentials will not be verified. When this field is set to `false`, credentials can be verified even when their `exp` date has passed.",
                          "type": "text"
                        },
                        {
                          "key": "checkRevocation",
                          "value": "true",
                          "description": "MATTR VII checks the credential revocation status by default, so that revoked credentials will not be verified. When this field is set to `false`, credentials can be verified even when they had been revoked.",
                          "type": "text"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/compact-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "compact-semantic",
                        "verify"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Unsupported Media Type",
                  "code": 415,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for verifying Semantic CWT credentials."
        },
        {
          "name": "JSON credentials verification",
          "item": [
            {
              "name": "Verify a JSON credential",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"payload\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuanceDate\": \"<dateTime>\",\n    \"credentialSubject\": {\n      \"givenName\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"alumniOf\": \"<string>\"\n    },\n    \"proof\": {\n      \"type\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"jws\": \"<string>\",\n      \"proofPurpose\": \"<string>\",\n      \"verificationMethod\": \"<string>\"\n    },\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"credentialStatus\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"revocationListIndex\": \"<integer>\",\n      \"revocationListCredential\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"checkRevocation\": true,\n  \"assertValidFrom\": true,\n  \"assertValidUntil\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "credentials", "web-semantic", "verify"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Verify a JSON credential by providing its payload. The credential is verified against the following criteria:\n- Issuer DID can be resolved, so that the referenced DID Document is available and valid and the public key is obtainable.\n- Proof is valid and the credential has not been tampered with.\n- JSON-LD context is valid for subject claims.\n\nOptional verification checks:\n- If `assertExpiry` is set to `true` and the credential has a set expiration date, verification will fail if the expiration date has passed.\n- If `checkRevocation` is set to `true` and the provided credential contains a revocation status list, verification will fail if the credential has been set to `revoked`.\n\n### **Analytic events**\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_START\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_SUCCESS\n* CREDENTIAL_WEB_SEMANTIC_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuanceDate\": \"<dateTime>\",\n    \"credentialSubject\": {\n      \"givenName\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"alumniOf\": \"<string>\"\n    },\n    \"proof\": {\n      \"type\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"jws\": \"<string>\",\n      \"proofPurpose\": \"<string>\",\n      \"verificationMethod\": \"<string>\"\n    },\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"credentialStatus\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"revocationListIndex\": \"<integer>\",\n      \"revocationListCredential\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"checkRevocation\": true,\n  \"assertValidFrom\": true,\n  \"assertValidUntil\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"verified\": \"<boolean>\",\n  \"reason\": {\n    \"type\": \"<string>\",\n    \"message\": \"<string>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"payload\": {\n    \"type\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuanceDate\": \"<dateTime>\",\n    \"credentialSubject\": {\n      \"givenName\": \"<string>\",\n      \"familyName\": \"<string>\",\n      \"alumniOf\": \"<string>\"\n    },\n    \"proof\": {\n      \"type\": \"<string>\",\n      \"created\": \"<dateTime>\",\n      \"jws\": \"<string>\",\n      \"proofPurpose\": \"<string>\",\n      \"verificationMethod\": \"<string>\"\n    },\n    \"@context\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"issuer\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    \"credentialStatus\": {\n      \"id\": \"<string>\",\n      \"type\": \"<string>\",\n      \"revocationListIndex\": \"<integer>\",\n      \"revocationListCredential\": \"<string>\"\n    },\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"checkRevocation\": true,\n  \"assertValidFrom\": true,\n  \"assertValidUntil\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/verify",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "credentials", "web-semantic", "verify"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Create a presentation template",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "presentations",
                    "templates"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a presentation template defining what type of credential is required for a particular verification workflow. Presentation templates are used to create presentation requests that are shared with a specific holder.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation template created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all presentation templates",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "presentations",
                    "templates"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all presentation templates on your tenant.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_LIST_FAIL"
              },
              "response": [
                {
                  "name": "Presentation templates retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"domain\": \"<string>\",\n      \"name\": \"<string>\",\n      \"query\": [\n        {\n          \"type\": \"<string>\",\n          \"credentialQuery\": [\n            {\n              \"required\": \"<boolean>\",\n              \"example\": [\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ],\n              \"reason\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"type\": \"<string>\",\n          \"credentialQuery\": [\n            {\n              \"required\": \"<boolean>\",\n              \"example\": [\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ],\n              \"reason\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<string>\",\n      \"domain\": \"<string>\",\n      \"name\": \"<string>\",\n      \"query\": [\n        {\n          \"type\": \"<string>\",\n          \"credentialQuery\": [\n            {\n              \"required\": \"<boolean>\",\n              \"example\": [\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ],\n              \"reason\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"type\": \"<string>\",\n          \"credentialQuery\": [\n            {\n              \"required\": \"<boolean>\",\n              \"example\": [\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"@context\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"type\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"trustedIssuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ],\n              \"reason\": \"<string>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve a presentation template",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "presentations",
                    "templates",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Presentation template ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieve an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation template retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Presentation template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Presentation template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Presentation template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete a presentation template",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "presentations",
                    "templates",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Presentation template ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_DELETE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation template deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Presentation template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Presentation template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Presentation template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update a presentation template",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"id\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "presentations",
                    "templates",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<string>",
                      "description": "(Required) Presentation template ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing presentation template by its ID.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_START\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_TEMPLATE_UPDATE_FAIL"
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"@context\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"type\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"trustedIssuer\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"id\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/templates/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "templates",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<string>",
                          "description": "(Required) Presentation template ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"domain\": \"<string>\",\n  \"name\": \"<string>\",\n  \"query\": [\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"type\": \"<string>\",\n      \"credentialQuery\": [\n        {\n          \"required\": \"<boolean>\",\n          \"example\": [\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            },\n            {\n              \"type\": \"<string>\",\n              \"trustedIssuer\": [\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                },\n                {\n                  \"required\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  \"issuer\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"reason\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Create a presentation request",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"challenge\": \"<string>\",\n  \"templateId\": \"<string>\",\n  \"did\": \"<string>\",\n  \"callbackUrl\": \"<uri>\",\n  \"expiresTime\": \"<number>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "presentations",
                    "requests"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a short lived presentation request based on an existing presentation template. The request is returned in the form of a JWM message and must be [signed](#operation/signMessage) and sent to the holder via one of the following methods:\n- QR code.\n- Deeplink.\n- [Encrypted](#operation/encryptMessage) and [sent](#operation/sendMessage) as a wallet notification.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_START\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_REQUEST_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "Presentation request created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"challenge\": \"<string>\",\n  \"templateId\": \"<string>\",\n  \"did\": \"<string>\",\n  \"callbackUrl\": \"<uri>\",\n  \"expiresTime\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "requests"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"<string>\",\n  \"callbackUrl\": \"<uri>\",\n  \"request\": {\n    \"id\": \"<uuid>\",\n    \"type\": \"<uri>\",\n    \"from\": \"<string>\",\n    \"created_time\": \"<number>\",\n    \"expires_time\": \"<number>\",\n    \"reply_url\": \"<string>\",\n    \"reply_to\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"body\": {\n      \"id\": \"<string>\",\n      \"domain\": \"<string>\",\n      \"name\": \"<string>\",\n      \"query\": [\n        {\n          \"type\": \"<string>\",\n          \"credentialQuery\": [\n            {\n              \"required\": \"<boolean>\",\n              \"example\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"reason\": \"<string>\"\n            }\n          ]\n        },\n        {\n          \"type\": \"<string>\",\n          \"credentialQuery\": [\n            {\n              \"required\": \"<boolean>\",\n              \"example\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ],\n              \"reason\": \"<string>\"\n            }\n          ]\n        }\n      ],\n      \"challenge\": \"<uuid>\"\n    }\n  },\n  \"didcommUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"challenge\": \"<string>\",\n  \"templateId\": \"<string>\",\n  \"did\": \"<string>\",\n  \"callbackUrl\": \"<uri>\",\n  \"expiresTime\": \"<number>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/requests",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "requests"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Verify a verifiable presentation",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"presentation\": {\n    \"@context\": [\n      \"<object>\",\n      \"<object>\"\n    ],\n    \"type\": [\n      \"<object>\",\n      \"<object>\"\n    ],\n    \"verifiableCredential\": [\n      {\n        \"@context\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"issuanceDate\": \"<dateTime>\",\n        \"credentialSubject\": {\n          \"givenName\": \"<string>\",\n          \"familyName\": \"<string>\",\n          \"alumniOf\": \"<string>\"\n        },\n        \"proof\": {\n          \"type\": \"<string>\",\n          \"created\": \"<dateTime>\",\n          \"jws\": \"<string>\",\n          \"proofPurpose\": \"<string>\",\n          \"verificationMethod\": \"<string>\"\n        },\n        \"issuer\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"logoUrl\": \"<string>\",\n          \"iconUrl\": \"<string>\"\n        },\n        \"credentialBranding\": {\n          \"backgroundColor\": \"<string>\",\n          \"watermarkImageUrl\": \"<string>\"\n        },\n        \"credentialStatus\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"revocationListIndex\": \"<integer>\",\n          \"revocationListCredential\": \"<string>\"\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\",\n    \"holder\": \"<string>\",\n    \"proof\": [\n      {\n        \"type\": \"<string>\",\n        \"created\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"verificationMethod\": \"<string>\"\n      }\n    ]\n  },\n  \"challenge\": \"<string>\",\n  \"domain\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "credentials",
                    "web-semantic",
                    "presentations",
                    "verify"
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Verifies a provided verifiable presentation that adheres to the [W3C Verifiable Credential Data Model](https://www.w3.org/TR/vc-data-model/#presentations):\n- Ensures the presentation conforms to the VC Data model.\n- For each `verifiableCredential` objects:\n  - Issuer DID can be resolved.\n  - JSON-LD context is valid for subject claims.\n  - Proof is valid & the credential has not been tampered with.\n  - Is not in a `revoked` status on a `RevocationList2020`.\n  - The proof is valid for each subjectDID to prove ownership.\n  - Valid proof exists for the presentation `holderDID`.\n\nThe request must include a `presentation` object that adheres to the [W3C Verifiable Credential Data Model](https://www.w3.org/TR/vc-data-model/#presentations).\n\nIf a `challenge` and/or `domain` is provided they are used for credential verification. Otherwise, the `challenge` and/or `domain` within the presentation proof is used instead.\n\n### **Analytic events**\n* PRESENTATION_WEB_SEMANTIC_VERIFY_START\n* PRESENTATION_WEB_SEMANTIC_VERIFY_SUCCESS\n* PRESENTATION_WEB_SEMANTIC_VERIFY_FAIL"
              },
              "response": [
                {
                  "name": "Presentation verification completed",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"presentation\": {\n    \"@context\": [\n      \"<object>\",\n      \"<object>\"\n    ],\n    \"type\": [\n      \"<object>\",\n      \"<object>\"\n    ],\n    \"verifiableCredential\": [\n      {\n        \"@context\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"issuanceDate\": \"<dateTime>\",\n        \"credentialSubject\": {\n          \"givenName\": \"<string>\",\n          \"familyName\": \"<string>\",\n          \"alumniOf\": \"<string>\"\n        },\n        \"proof\": {\n          \"type\": \"<string>\",\n          \"created\": \"<dateTime>\",\n          \"jws\": \"<string>\",\n          \"proofPurpose\": \"<string>\",\n          \"verificationMethod\": \"<string>\"\n        },\n        \"issuer\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"logoUrl\": \"<string>\",\n          \"iconUrl\": \"<string>\"\n        },\n        \"credentialBranding\": {\n          \"backgroundColor\": \"<string>\",\n          \"watermarkImageUrl\": \"<string>\"\n        },\n        \"credentialStatus\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"revocationListIndex\": \"<integer>\",\n          \"revocationListCredential\": \"<string>\"\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\",\n    \"holder\": \"<string>\",\n    \"proof\": [\n      {\n        \"type\": \"<string>\",\n        \"created\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"verificationMethod\": \"<string>\"\n      }\n    ]\n  },\n  \"challenge\": \"<string>\",\n  \"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "verify"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"verified\": \"<boolean>\",\n  \"reason\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"presentation\": {\n    \"@context\": [\n      \"<object>\",\n      \"<object>\"\n    ],\n    \"type\": [\n      \"<object>\",\n      \"<object>\"\n    ],\n    \"verifiableCredential\": [\n      {\n        \"@context\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"type\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"issuanceDate\": \"<dateTime>\",\n        \"credentialSubject\": {\n          \"givenName\": \"<string>\",\n          \"familyName\": \"<string>\",\n          \"alumniOf\": \"<string>\"\n        },\n        \"proof\": {\n          \"type\": \"<string>\",\n          \"created\": \"<dateTime>\",\n          \"jws\": \"<string>\",\n          \"proofPurpose\": \"<string>\",\n          \"verificationMethod\": \"<string>\"\n        },\n        \"issuer\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"logoUrl\": \"<string>\",\n          \"iconUrl\": \"<string>\"\n        },\n        \"credentialBranding\": {\n          \"backgroundColor\": \"<string>\",\n          \"watermarkImageUrl\": \"<string>\"\n        },\n        \"credentialStatus\": {\n          \"id\": \"<string>\",\n          \"type\": \"<string>\",\n          \"revocationListIndex\": \"<integer>\",\n          \"revocationListCredential\": \"<string>\"\n        },\n        \"name\": \"<string>\",\n        \"description\": \"<string>\"\n      }\n    ],\n    \"id\": \"<string>\",\n    \"holder\": \"<string>\",\n    \"proof\": [\n      {\n        \"type\": \"<string>\",\n        \"created\": \"<string>\",\n        \"challenge\": \"<string>\",\n        \"domain\": \"<string>\",\n        \"jws\": \"<string>\",\n        \"proofPurpose\": \"<string>\",\n        \"verificationMethod\": \"<string>\"\n      }\n    ]\n  },\n  \"challenge\": \"<string>\",\n  \"domain\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/web-semantic/presentations/verify",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "web-semantic",
                        "presentations",
                        "verify"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for verifying JSON credentials."
        },
        {
          "name": "mDocs verification",
          "item": [
            {
              "name": "Trusted issuers",
              "item": [
                {
                  "name": "Create a trusted issuer",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"certificatePem\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "trusted-issuers"
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Add a new mDocs trusted issuer, to be used in online presentation workflows.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_CREATE_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_CREATE_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_CREATE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Trusted issuer created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"certificatePem\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<uuid>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateData\": {\n    \"notAfter\": \"<date>\",\n    \"notBefore\": \"<date>\",\n    \"country\": \"<date>\",\n    \"commonName\": \"<date>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"certificatePem\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers"
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all trusted issuers",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "trusted-issuers"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100",
                          "description": "Range size of returned list."
                        },
                        {
                          "key": "cursor",
                          "value": "<string>",
                          "description": "Starting point for the list of entries."
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves all mDocs trusted issuers from your tenant.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_LIST_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_LIST_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_LIST_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Trusted issuers retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers?limit=100&cursor=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers"
                          ],
                          "query": [
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "cursor",
                              "value": "<string>"
                            }
                          ],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a trusted issuer",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "trusted-issuers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Trusted issuer ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing trusted issuer from your tenant by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_RETRIEVE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Trusted issuer retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Trusted issuer ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<uuid>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateData\": {\n    \"notAfter\": \"<date>\",\n    \"notBefore\": \"<date>\",\n    \"country\": \"<date>\",\n    \"commonName\": \"<date>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Trusted issuer ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Trusted issuer ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a trusted issuer",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "credentials",
                        "mobile",
                        "trusted-issuers",
                        ":id"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Trusted issuer ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Deletes an existing trusted issuer by providing its ID.\n\n### **Analytic events**\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_DELETE_START\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_DELETE_SUCCESS\n* MOBILE_CREDENTIAL_TRUSTED_ISSUER_DELETE_FAIL\n"
                  },
                  "response": [
                    {
                      "name": "Trusted issuer deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Trusted issuer ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Trusted issuer ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/credentials/mobile/trusted-issuers/:id",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "credentials",
                            "mobile",
                            "trusted-issuers",
                            ":id"
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "<uuid>",
                              "description": "(Required) Trusted issuer ID"
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Verifier root CA certificates",
              "item": [
                {
                  "name": "Create a verifier root CA certificate",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"commonName\": \"{tenantDomain} Verifier\",\n  \"country\": \"<string>\",\n  \"active\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/certificates/ca",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "presentations", "certificates", "ca"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates a verifier root CA certificate to be used as part of mDocs online verification workflows.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_CREATE_START\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_CREATE_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier root CA certificate created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"commonName\": \"{tenantDomain} Verifier\",\n  \"country\": \"<string>\",\n  \"active\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "certificates", "ca"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateFingerprint\": \"<string>\",\n  \"certificateData\": {\n    \"commonName\": \"<string>\",\n    \"country\": \"<string>\",\n    \"notAfter\": \"<string>\",\n    \"notBefore\": \"<string>\"\n  },\n  \"active\": true\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"commonName\": \"{tenantDomain} Verifier\",\n  \"country\": \"<string>\",\n  \"active\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "certificates", "ca"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all verifier root CA certificates",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/certificates/ca",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "presentations", "certificates", "ca"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves all existing verifier root CA certificates.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_RETRIEVE_LIST_START\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier root CA certificates retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "certificates", "ca"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"certificatePem\": \"<string>\",\n      \"certificateFingerprint\": \"<string>\",\n      \"certificateData\": {\n        \"commonName\": \"<string>\",\n        \"country\": \"<string>\",\n        \"notAfter\": \"<string>\",\n        \"notBefore\": \"<string>\"\n      },\n      \"active\": true\n    },\n    {\n      \"id\": \"<string>\",\n      \"certificatePem\": \"<string>\",\n      \"certificateFingerprint\": \"<string>\",\n      \"certificateData\": {\n        \"commonName\": \"<string>\",\n        \"country\": \"<string>\",\n        \"notAfter\": \"<string>\",\n        \"notBefore\": \"<string>\"\n      },\n      \"active\": true\n    }\n  ],\n  \"nextCursor\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Update a verifier root CA certificate",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"active\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "certificates",
                        "ca",
                        ":certificateId"
                      ],
                      "variable": [
                        {
                          "key": "certificateId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the verifier root CA certificate."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Updates an existing verifier root CA certificate.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_UPDATE_START\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_UPDATE_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier root CA certificate updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "certificates",
                            "ca",
                            ":certificateId"
                          ],
                          "variable": [
                            {
                              "key": "certificateId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier root CA certificate."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateFingerprint\": \"<string>\",\n  \"certificateData\": {\n    \"commonName\": \"<string>\",\n    \"country\": \"<string>\",\n    \"notAfter\": \"<string>\",\n    \"notBefore\": \"<string>\"\n  },\n  \"active\": true\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "certificates",
                            "ca",
                            ":certificateId"
                          ],
                          "variable": [
                            {
                              "key": "certificateId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier root CA certificate."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"active\": true\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "certificates",
                            "ca",
                            ":certificateId"
                          ],
                          "variable": [
                            {
                              "key": "certificateId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier root CA certificate."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a verifier root CA certificate",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "certificates",
                        "ca",
                        ":certificateId"
                      ],
                      "variable": [
                        {
                          "key": "certificateId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the verifier root CA certificate."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing verifier root CA certificate.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_RETRIEVE_START\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_RETRIEVE_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_CA_CERTIFICATE_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier root CA certificate retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "certificates",
                            "ca",
                            ":certificateId"
                          ],
                          "variable": [
                            {
                              "key": "certificateId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier root CA certificate."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"certificatePem\": \"<string>\",\n  \"certificateFingerprint\": \"<string>\",\n  \"certificateData\": {\n    \"commonName\": \"<string>\",\n    \"country\": \"<string>\",\n    \"notAfter\": \"<string>\",\n    \"notBefore\": \"<string>\"\n  },\n  \"active\": true\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "certificates",
                            "ca",
                            ":certificateId"
                          ],
                          "variable": [
                            {
                              "key": "certificateId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier root CA certificate."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a verifier root CA certificate",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "certificates",
                        "ca",
                        ":certificateId"
                      ],
                      "variable": [
                        {
                          "key": "certificateId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the verifier root CA certificate."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Deletes an existing verifier root CA certificate.\n\n### **Analytic events**\n* PRESENTATION_VERIFIER_CA_CERTIFICATE_DELETE_START\n* PRESENTATION_VERIFIER_CA_CERTIFICATE_DELETE_SUCCESS\n* PRESENTATION_VERIFIER_CA_CERTIFICATE_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier root CA certificate deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "certificates",
                            "ca",
                            ":certificateId"
                          ],
                          "variable": [
                            {
                              "key": "certificateId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier root CA certificate."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/certificates/ca/:certificateId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "certificates",
                            "ca",
                            ":certificateId"
                          ],
                          "variable": [
                            {
                              "key": "certificateId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier root CA certificate."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Verifier applications",
              "item": [
                {
                  "name": "Create verifier application",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"openid4vpConfiguration\": {\n    \"supportedModes\": \"all\",\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/applications",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "presentations", "applications"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates an mDocs online verifier application.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_CREATE_START\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_CREATE_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier application created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"openid4vpConfiguration\": {\n    \"supportedModes\": \"all\",\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "applications"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"openid4vpConfiguration\": {\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"supportedModes\": \"all\",\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"id\": \"<string>\",\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"openid4vpConfiguration\": {\n    \"supportedModes\": \"all\",\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "applications"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all verifier applications",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/applications",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "presentations", "applications"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves all configured mDocs online verifier applications.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_RETRIEVE_LIST_START\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier applications retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "applications"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"openid4vpConfiguration\": {\n      \"redirectUris\": [\n        \"<string>\"\n      ],\n      \"supportedModes\": \"all\",\n      \"display\": {\n        \"logoImage\": {\n          \"url\": \"<string>\",\n          \"altText\": \"<string>\"\n        },\n        \"headerText\": \"<string>\",\n        \"bodyText\": \"<string>\",\n        \"privacyPolicyUrl\": \"<string>\",\n        \"primaryColorHex\": \"<string>\"\n      }\n    },\n    \"domain\": \"<string>\",\n    \"type\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resultAvailableInFrontChannel\": true,\n    \"id\": \"<string>\",\n    \"additionalDomains\": [\n      \"<string>\"\n    ]\n  },\n  {\n    \"openid4vpConfiguration\": {\n      \"redirectUris\": [\n        \"<string>\"\n      ],\n      \"supportedModes\": \"all\",\n      \"display\": {\n        \"logoImage\": {\n          \"url\": \"<string>\",\n          \"altText\": \"<string>\"\n        },\n        \"headerText\": \"<string>\",\n        \"bodyText\": \"<string>\",\n        \"privacyPolicyUrl\": \"<string>\",\n        \"primaryColorHex\": \"<string>\"\n      }\n    },\n    \"domain\": \"<string>\",\n    \"type\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resultAvailableInFrontChannel\": true,\n    \"id\": \"<string>\",\n    \"additionalDomains\": [\n      \"<string>\"\n    ]\n  }\n]"
                    }
                  ]
                },
                {
                  "name": "Update verifier application",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"openid4vpConfiguration\": {\n    \"supportedModes\": \"all\",\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "applications",
                        ":applicationId"
                      ],
                      "variable": [
                        {
                          "key": "applicationId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the verifier application."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Updates an existing mDocs online verifier application.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_UPDATE_START\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_UPDATE_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier application updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"openid4vpConfiguration\": {\n    \"supportedModes\": \"all\",\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "applications",
                            ":applicationId"
                          ],
                          "variable": [
                            {
                              "key": "applicationId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier application."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"openid4vpConfiguration\": {\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"supportedModes\": \"all\",\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"id\": \"<string>\",\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"openid4vpConfiguration\": {\n    \"supportedModes\": \"all\",\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "applications",
                            ":applicationId"
                          ],
                          "variable": [
                            {
                              "key": "applicationId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier application."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"openid4vpConfiguration\": {\n    \"supportedModes\": \"all\",\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "applications",
                            ":applicationId"
                          ],
                          "variable": [
                            {
                              "key": "applicationId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier application."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a verifier application",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "applications",
                        ":applicationId"
                      ],
                      "variable": [
                        {
                          "key": "applicationId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the verifier application."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing mDocs online verifier application.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_RETRIEVE_START\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_RETRIEVE_SUCCESS\n* CREDENTIAL_PRESENTATION_VERIFIER_APPLICATION_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier application retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "applications",
                            ":applicationId"
                          ],
                          "variable": [
                            {
                              "key": "applicationId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier application."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"openid4vpConfiguration\": {\n    \"redirectUris\": [\n      \"<string>\"\n    ],\n    \"supportedModes\": \"all\",\n    \"display\": {\n      \"logoImage\": {\n        \"url\": \"<string>\",\n        \"altText\": \"<string>\"\n      },\n      \"headerText\": \"<string>\",\n      \"bodyText\": \"<string>\",\n      \"privacyPolicyUrl\": \"<string>\",\n      \"primaryColorHex\": \"<string>\"\n    }\n  },\n  \"domain\": \"<string>\",\n  \"type\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resultAvailableInFrontChannel\": true,\n  \"id\": \"<string>\",\n  \"additionalDomains\": [\n    \"<string>\"\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "applications",
                            ":applicationId"
                          ],
                          "variable": [
                            {
                              "key": "applicationId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier application."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a verifier application",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "applications",
                        ":applicationId"
                      ],
                      "variable": [
                        {
                          "key": "applicationId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the verifier application."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Removes an existing mDocs online verifier application.\n\n### **Analytic events**\n* PRESENTATION_VERIFIER_APPLICATION_DELETE_START\n* PRESENTATION_VERIFIER_APPLICATION_DELETE_SUCCESS\n* PRESENTATION_VERIFIER_APPLICATION_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Verifier application deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "applications",
                            ":applicationId"
                          ],
                          "variable": [
                            {
                              "key": "applicationId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier application."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/applications/:applicationId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "applications",
                            ":applicationId"
                          ],
                          "variable": [
                            {
                              "key": "applicationId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the verifier application."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Wallet providers",
              "item": [
                {
                  "name": "Create wallet provider",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/wallet-providers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "presentations", "wallet-providers"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Creates a wallet provider that can present mDocs for online verification.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_CREATE_START\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_CREATE_SUCCESS\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_CREATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Wallet provider created",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "wallet-providers"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "wallet-providers"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve all wallet providers",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/wallet-providers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "presentations", "wallet-providers"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves all existing wallet providers that can present mDocs for online verification.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_RETRIEVE_LIST_START\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_RETRIEVE_LIST_SUCCESS\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_RETRIEVE_LIST_FAIL"
                  },
                  "response": [
                    {
                      "name": "Wallet providers retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers",
                          "host": ["{{baseUrl}}"],
                          "path": ["v2", "presentations", "wallet-providers"],
                          "variable": [
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"openid4vpConfiguration\": {\n      \"authorizationEndpoint\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"openid4vpConfiguration\": {\n      \"authorizationEndpoint\": \"<string>\"\n    }\n  }\n]"
                    }
                  ]
                },
                {
                  "name": "Update a wallet provider",
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "wallet-providers",
                        ":walletProviderId"
                      ],
                      "variable": [
                        {
                          "key": "walletProviderId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the wallet provider."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Updates an existing wallet provider that can present mDocs for online verification.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_UPDATE_START\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_UPDATE_SUCCESS\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_UPDATE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Wallet provider updated",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "wallet-providers",
                            ":walletProviderId"
                          ],
                          "variable": [
                            {
                              "key": "walletProviderId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the wallet provider."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Bad Request. The request was malformed or missing required parameters.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "wallet-providers",
                            ":walletProviderId"
                          ],
                          "variable": [
                            {
                              "key": "walletProviderId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the wallet provider."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "wallet-providers",
                            ":walletProviderId"
                          ],
                          "variable": [
                            {
                              "key": "walletProviderId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the wallet provider."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Retrieve a wallet provider",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "wallet-providers",
                        ":walletProviderId"
                      ],
                      "variable": [
                        {
                          "key": "walletProviderId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the wallet provider."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Retrieves an existing wallet provider that can present mDocs for online verification.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_RETRIEVE_START\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_RETRIEVE_SUCCESS\n* CREDENTIAL_PRESENTATION_WALLET_PROVIDER_RETRIEVE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Wallet provider retrieved",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "wallet-providers",
                            ":walletProviderId"
                          ],
                          "variable": [
                            {
                              "key": "walletProviderId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the wallet provider."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"openid4vpConfiguration\": {\n    \"authorizationEndpoint\": \"<string>\"\n  }\n}"
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "wallet-providers",
                            ":walletProviderId"
                          ],
                          "variable": [
                            {
                              "key": "walletProviderId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the wallet provider."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                },
                {
                  "name": "Delete a wallet provider",
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "wallet-providers",
                        ":walletProviderId"
                      ],
                      "variable": [
                        {
                          "key": "walletProviderId",
                          "value": "<uuid>",
                          "description": "(Required) Unique identifier for the wallet provider."
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    },
                    "description": "Deletes an existing wallet provider that can present mDocs for online verification.\n\n### **Analytic events**\n* PRESENTATION_WALLET_PROVIDER_DELETE_START\n* PRESENTATION_WALLET_PROVIDER_DELETE_SUCCESS\n* PRESENTATION_WALLET_PROVIDER_DELETE_FAIL"
                  },
                  "response": [
                    {
                      "name": "Wallet provider deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "wallet-providers",
                            ":walletProviderId"
                          ],
                          "variable": [
                            {
                              "key": "walletProviderId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the wallet provider."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not Found. The specified resource was not found.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/v2/presentations/wallet-providers/:walletProviderId",
                          "host": ["{{baseUrl}}"],
                          "path": [
                            "v2",
                            "presentations",
                            "wallet-providers",
                            ":walletProviderId"
                          ],
                          "variable": [
                            {
                              "key": "walletProviderId",
                              "value": "<uuid>",
                              "description": "(Required) Unique identifier for the wallet provider."
                            },
                            {
                              "key": "tenantName",
                              "value": "{{tenantName}}",
                              "description": "The tenant subdomain assigned when the tenant was established."
                            },
                            {
                              "key": "region",
                              "value": "{{region}}",
                              "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Retrieve presentation session result",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "v2",
                    "presentations",
                    "sessions",
                    ":sessionId",
                    "result"
                  ],
                  "variable": [
                    {
                      "key": "sessionId",
                      "value": "<uuid>",
                      "description": "(Required) Session ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves the result of an online presentation session by providing the session's ID.\n\n### **Analytic events**\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_RETRIEVE_START\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_RETRIEVE_SUCCESS\n* CREDENTIAL_PRESENTATION_SESSION_RESULT_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "Session result retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "sessions",
                        ":sessionId",
                        "result"
                      ],
                      "variable": [
                        {
                          "key": "sessionId",
                          "value": "<uuid>",
                          "description": "(Required) Session ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"sessionId\": \"<string>\",\n  \"challenge\": \"<string>\",\n  \"credentialQuery\": [\n    \"<object>\",\n    \"<object>\"\n  ],\n  \"credentials\": [\n    {\n      \"docType\": \"<string>\",\n      \"validityInfo\": {\n        \"signed\": \"<string>\",\n        \"validFrom\": \"<string>\",\n        \"validUntil\": \"<string>\",\n        \"expectedUpdate\": \"<string>\"\n      },\n      \"claims\": \"<object>\",\n      \"claimErrors\": \"<object>\",\n      \"branding\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImage\": \"<string>\",\n        \"issuerLogo\": \"<string>\",\n        \"issuerIcon\": \"<string>\"\n      },\n      \"issuerInfo\": {\n        \"commonName\": \"<string>\",\n        \"trustedIssuerId\": \"<string>\"\n      },\n      \"verificationResult\": {\n        \"verified\": \"<boolean>\",\n        \"reason\": {\n          \"type\": \"<string>\",\n          \"message\": \"<string>\"\n        }\n      },\n      \"ecosystemValidation\": {\n        \"validated\": \"<boolean>\",\n        \"policyVersion\": \"<string>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ],\n        \"error\": {\n          \"type\": \"<string>\",\n          \"message\": \"<string>\"\n        }\n      }\n    },\n    {\n      \"docType\": \"<string>\",\n      \"validityInfo\": {\n        \"signed\": \"<string>\",\n        \"validFrom\": \"<string>\",\n        \"validUntil\": \"<string>\",\n        \"expectedUpdate\": \"<string>\"\n      },\n      \"claims\": \"<object>\",\n      \"claimErrors\": \"<object>\",\n      \"branding\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"backgroundColor\": \"<string>\",\n        \"watermarkImage\": \"<string>\",\n        \"issuerLogo\": \"<string>\",\n        \"issuerIcon\": \"<string>\"\n      },\n      \"issuerInfo\": {\n        \"commonName\": \"<string>\",\n        \"trustedIssuerId\": \"<string>\"\n      },\n      \"verificationResult\": {\n        \"verified\": \"<boolean>\",\n        \"reason\": {\n          \"type\": \"<string>\",\n          \"message\": \"<string>\"\n        }\n      },\n      \"ecosystemValidation\": {\n        \"validated\": \"<boolean>\",\n        \"policyVersion\": \"<string>\",\n        \"failReasons\": [\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          },\n          {\n            \"type\": \"<string>\",\n            \"message\": \"<string>\"\n          }\n        ],\n        \"error\": {\n          \"type\": \"<string>\",\n          \"message\": \"<string>\"\n        }\n      }\n    }\n  ],\n  \"credentialErrors\": [\n    {\n      \"docType\": \"<string>\",\n      \"errorCode\": \"<string>\"\n    },\n    {\n      \"docType\": \"<string>\",\n      \"errorCode\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/v2/presentations/sessions/:sessionId/result",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "v2",
                        "presentations",
                        "sessions",
                        ":sessionId",
                        "result"
                      ],
                      "variable": [
                        {
                          "key": "sessionId",
                          "value": "<uuid>",
                          "description": "(Required) Session ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for verifying mDocs credentials."
        }
      ]
    },
    {
      "name": "OIDC Bridge verification",
      "item": [
        {
          "name": "OIDC Verifier Auth",
          "item": [
            {
              "name": "Well Known OpenId Configuration",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/.well-known/openid-configuration",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "ext",
                    "oidc",
                    "v1",
                    "verifiers",
                    ":id",
                    ".well-known",
                    "openid-configuration"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "The standard OpenID Connect Well Known configuration metadata endpoint.\n\nThis endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n"
              },
              "response": [
                {
                  "name": "Returns OpenID configuration",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/.well-known/openid-configuration",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        ".well-known",
                        "openid-configuration"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"authorization_endpoint\": \"<uri>\",\n  \"claims_parameter_supported\": \"<boolean>\",\n  \"claims_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"code_challenge_methods_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"end_session_endpoint\": \"<uri>\",\n  \"grant_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id_token_signing_alg_values_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"issuer\": \"<uri>\",\n  \"jwks_uri\": \"<uri>\",\n  \"registration_endpoint\": \"<uri>\",\n  \"request_object_signing_alg_values_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"request_parameter_supported\": \"<boolean>\",\n  \"request_uri_parameter_supported\": \"<boolean>\",\n  \"require_request_uri_registration\": \"<boolean>\",\n  \"response_modes_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"response_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"scopes_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"subject_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"token_endpoint_auth_methods_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"token_endpoint_auth_signing_alg_values_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"token_endpoint\": \"<uri>\",\n  \"userinfo_endpoint\": \"<uri>\",\n  \"userinfo_signing_alg_values_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"claim_types_supported\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve Token",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "client_secret",
                      "value": "<string>"
                    },
                    {
                      "key": "grant_type",
                      "value": "<string>"
                    },
                    {
                      "key": "code",
                      "value": "<string>"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "<uri>"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "token"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "> OIDC Token endpoint\n\nThe OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`\n\n### **Analytic events**\n* OIDC_VERIFIER_AUTH_START\n* OIDC_VERIFIER_AUTH_SUCCESS\n* OIDC_VERIFIER_AUTH_FAIL"
              },
              "response": [
                {
                  "name": "OK",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_secret",
                          "value": "<string>"
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>"
                        },
                        {
                          "key": "code",
                          "value": "<string>"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<uri>"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "token"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"access_token\": \"<string>\",\n  \"token_type\": \"<string>\",\n  \"refresh_token\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"id_token\": \"<string>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "key": "client_secret",
                          "value": "<string>"
                        },
                        {
                          "key": "grant_type",
                          "value": "<string>"
                        },
                        {
                          "key": "code",
                          "value": "<string>"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "<uri>"
                        }
                      ]
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/token",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "token"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for retrieving information required for OIDC bridge verification workflows."
        },
        {
          "name": "OIDC Verifiers",
          "item": [
            {
              "name": "Create an OIDC Verifier",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"includePresentation\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers"],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Creates a new OIDC Credential Verifier on the tenant.\n\nOnce created, this OIDC Verifier is publicly available on its `/.well-known/openid-configuration` path. The Authorization header is not required as it is intended for OIDC Client applications to resolve.\n\n### **Analytic events**\n* OIDC_VERIFIER_CREATE_START\n* OIDC_VERIFIER_CREATE_SUCCESS\n* OIDC_VERIFIER_CREATE_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifier created",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"includePresentation\": \"<boolean>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all OIDC Verifiers",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all OIDC Verifiers on the tenant.\n\n### **Analytic events**\n* OIDC_VERIFIER_RETRIEVE_LIST_START\n* OIDC_VERIFIER_RETRIEVE_LIST_SUCCESS\n* OIDC_VERIFIER_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifiers retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": {\n    \"verifierDid\": \"<string>\",\n    \"presentationTemplateId\": \"<uuid>\",\n    \"claimMappings\": [\n      {\n        \"jsonLdFqn\": \"<string>\",\n        \"oidcClaim\": \"<string>\"\n      },\n      {\n        \"jsonLdFqn\": \"<string>\",\n        \"oidcClaim\": \"<string>\"\n      }\n    ],\n    \"id\": \"<uuid>\",\n    \"includePresentation\": \"<boolean>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers"],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve an OIDC Verifier",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_RETRIEVE_START\n* OIDC_VERIFIER_RETRIEVE_SUCCESS\n* OIDC_VERIFIER_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "OIDC Verifier retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"includePresentation\": \"<boolean>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update an OIDC Verifier",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"includePresentation\": \"<boolean>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_UPDATE_START\n* OIDC_VERIFIER_UPDATE_SUCCESS\n* OIDC_VERIFIER_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifier updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"id\": \"<uuid>\",\n  \"includePresentation\": \"<boolean>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"verifierDid\": \"<string>\",\n  \"presentationTemplateId\": \"<uuid>\",\n  \"claimMappings\": [\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    },\n    {\n      \"jsonLdFqn\": \"<string>\",\n      \"oidcClaim\": \"<string>\"\n    }\n  ],\n  \"includePresentation\": \"<boolean>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete an OIDC Verifier",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing OIDC Verifier by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_DELETE_START\n* OIDC_VERIFIER_DELETE_SUCCESS\n* OIDC_VERIFIER_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifier deleted",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "OIDC Verifier not found",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["ext", "oidc", "v1", "verifiers", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing OIDC Verifiers."
        },
        {
          "name": "OIDC Verifier Client",
          "item": [
            {
              "name": "Configure an OIDC Client",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Configures an OIDC Verifier Client on your tenant.\n\nIn order to verify a credential using an OpenID Connect Authorization Code Flow, you need to set up an OIDC Client application. This is the client that will engage with your configured OIDC Verifier to initiate the verification workflow.\nThere is a list of OIDC Client apps, also known as Relying Party Libraries, on the [OpenID website](https://openid.net/developers/certified/). Pick one which you feel comfortable with.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_CREATE_START\n* OIDC_VERIFIER_CLIENT_CREATE_SUCCESS\n* OIDC_VERIFIER_CLIENT_CREATE_FAIL"
              },
              "response": [
                {
                  "name": "OIDC Client configured",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"secret\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve all OIDC Clients",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients?limit=100&cursor=<string>",
                  "host": ["{{baseUrl}}"],
                  "path": ["ext", "oidc", "v1", "verifiers", ":id", "clients"],
                  "query": [
                    {
                      "key": "limit",
                      "value": "100",
                      "description": "Range size of returned list."
                    },
                    {
                      "key": "cursor",
                      "value": "<string>",
                      "description": "Starting point for the list of entries."
                    }
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) Verifier ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Returns a list of all OIDC Verifier Clients on the Tenant.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_START\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_SUCCESS\n* OIDC_VERIFIER_CLIENT_RETRIEVE_LIST_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Clients retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"nextCursor\": \"<string>\",\n  \"data\": {\n    \"name\": \"<string>\",\n    \"redirectUris\": [\n      \"<uri>\",\n      \"<uri>\"\n    ],\n    \"idTokenSignedResponseAlg\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"secret\": \"<string>\",\n    \"responseTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"grantTypes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"<string>\",\n    \"applicationType\": \"<string>\",\n    \"logoUri\": \"<uri>\"\n  }\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients?limit=100&cursor=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "100"
                        },
                        {
                          "key": "cursor",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) Verifier ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                }
              ]
            },
            {
              "name": "Retrieve an OIDC Client",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "ext",
                    "oidc",
                    "v1",
                    "verifiers",
                    ":id",
                    "clients",
                    ":clientId"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier ID"
                    },
                    {
                      "key": "clientId",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier Client ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Retrieves an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_RETRIEVE_START\n* OIDC_VERIFIER_CLIENT_RETRIEVE_SUCCESS\n* OIDC_VERIFIER_CLIENT_RETRIEVE_FAIL"
              },
              "response": [
                {
                  "name": "OIDC Verifier Client retrieved",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"secret\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Update an OIDC Client",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "ext",
                    "oidc",
                    "v1",
                    "verifiers",
                    ":id",
                    "clients",
                    ":clientId"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier ID"
                    },
                    {
                      "key": "clientId",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier Client ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Updates an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_UPDATE_START\n* OIDC_VERIFIER_CLIENT_UPDATE_SUCCESS\n* OIDC_VERIFIER_CLIENT_UPDATE_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifier Client updated",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"secret\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}"
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"<string>\",\n  \"redirectUris\": [\n    \"<uri>\",\n    \"<uri>\"\n  ],\n  \"idTokenSignedResponseAlg\": \"<string>\",\n  \"responseTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"grantTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"<string>\",\n  \"applicationType\": \"<string>\",\n  \"logoUri\": \"<uri>\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "Delete an OIDC Client",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                  "host": ["{{baseUrl}}"],
                  "path": [
                    "ext",
                    "oidc",
                    "v1",
                    "verifiers",
                    ":id",
                    "clients",
                    ":clientId"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier ID"
                    },
                    {
                      "key": "clientId",
                      "value": "<uuid>",
                      "description": "(Required) OIDC Verifier Client ID"
                    },
                    {
                      "key": "tenantName",
                      "value": "{{tenantName}}",
                      "description": "The tenant subdomain assigned when the tenant was established."
                    },
                    {
                      "key": "region",
                      "value": "{{region}}",
                      "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                    }
                  ]
                },
                "description": "Deletes an existing OIDC Verifier Client by providing its ID.\n\n### **Analytic events**\n* OIDC_VERIFIER_CLIENT_DELETE_START\n* OIDC_VERIFIER_CLIENT_DELETE_SUCCESS\n* OIDC_VERIFIER_CLIENT_DELETE_FAIL\n"
              },
              "response": [
                {
                  "name": "OIDC Verifier Client deleted.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Bad Request. The request was malformed or missing required parameters.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\",\n  \"details\": [\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    },\n    {\n      \"value\": \"<string>\",\n      \"msg\": \"<string>\",\n      \"param\": \"<string>\",\n      \"location\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Not Found. The specified resource was not found.",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/ext/oidc/v1/verifiers/:id/clients/:clientId",
                      "host": ["{{baseUrl}}"],
                      "path": [
                        "ext",
                        "oidc",
                        "v1",
                        "verifiers",
                        ":id",
                        "clients",
                        ":clientId"
                      ],
                      "variable": [
                        {
                          "key": "id",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier ID"
                        },
                        {
                          "key": "clientId",
                          "value": "<uuid>",
                          "description": "(Required) OIDC Verifier Client ID"
                        },
                        {
                          "key": "tenantName",
                          "value": "{{tenantName}}",
                          "description": "The tenant subdomain assigned when the tenant was established."
                        },
                        {
                          "key": "region",
                          "value": "{{region}}",
                          "description": "The tenant region assigned when the tenant was established. (This can only be one of au01,ca01,eu01,us01)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"code\": \"<string>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
                }
              ]
            }
          ],
          "description": "Specifies paths and operations for managing OIDC Verifier Clients."
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{bearerToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          "const tokenUrl = pm.environment.get('auth_url') + '/oauth/token';",
          "",
          "const clientId = pm.environment.get('auth_client_id');",
          "const clientSecret = pm.environment.get('auth_client_secret');",
          "",
          "const echoPostRequest = {",
          "  url: tokenUrl,",
          "  method: 'POST',",
          "  header: 'Content-Type:application/json',",
          "  body: {",
          "    mode: 'application/json',",
          "    raw: JSON.stringify(",
          "        {",
          "        \tclient_id: clientId,",
          "        \tclient_secret: clientSecret,",
          "        \taudience: pm.environment.get('auth_audience'),",
          "        \tgrant_type:'client_credentials'",
          "        })",
          "  }",
          "};",
          "",
          "var getToken = true;",
          "",
          "if (!pm.environment.get('accessTokenExpiry') || ",
          "    !pm.environment.get('bearerToken')) {",
          "    console.log('Token or expiry date are missing')",
          "} else if (pm.environment.get('accessTokenExpiry') <= (new Date()).getTime()) {",
          "    console.log('Token is expired')",
          "} else {",
          "    getToken = false;",
          "    console.log('Token and expiry date are all good');",
          "}",
          "",
          "if (getToken === true) {",
          "    pm.sendRequest(echoPostRequest, function (err, res) {",
          "    console.log(err ? err : res.json());",
          "        if (err === null) {",
          "            console.log('Saving the token and expiry date')",
          "            var responseJson = res.json();",
          "            pm.environment.set('bearerToken', responseJson.access_token)",
          "    ",
          "            var expiryDate = new Date();",
          "            expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
          "            pm.environment.set('accessTokenExpiry', expiryDate.getTime());",
          "        }",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "tenantName",
      "value": "example",
      "type": "any"
    },
    {
      "key": "region",
      "value": "au01",
      "type": "any"
    },
    {
      "key": "baseUrl",
      "value": "https://{{tenantName}}.vii.{{region}}.mattr.global",
      "type": "string"
    },
    {
      "key": "oauth-token-Url",
      "value": "https://auth.au01.mattr.global",
      "type": "string"
    }
  ]
}

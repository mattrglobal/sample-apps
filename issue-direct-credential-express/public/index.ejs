<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>MATTR Sample App</title>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>
  <body class="bg-light">

    <div class="container" style="max-width: 750px">

      <div class="d-flex p-3 my-3 text-white rounded shadow-sm" style="background-color: #333132">
        <img src="https://mattr.global/assets/logos/MATTR_M_gFC_RGB^NC.svg" alt="Mattr."
             width="140" height="40">
        <div class="lh-1 mx-3" style="color: #ead9e3">
          <h6 class="mb-0 lh-2">Sample App</h6>
          <small>Issue a subject-bound Verifiable Credential</small>
        </div>
      </div>

      <form id="sampleForm" autocomplete="off">
        <!-- Section: Credential subject -->
        <div class="shadow-sm border my-3 p-3 rounded bg-white">
          <h6 class="border-bottom pb-2">Subject</h6>
          <div class="input-group">
            <input name="subjectDid" class="form-control" placeholder="did:key:..." required
                   value="<%= defaultSubjectDid %>">
            <button id="didAuthButton" type="button" class="btn btn-outline-secondary"
                    data-bs-toggle="modal" data-bs-target="#didAuthModal">DIDAuth</button>
          </div>
        </div>

        <!-- Section: Presentation Request and Credential Offer signer -->
        <div class="shadow-sm border my-3 p-3 rounded bg-white">
          <h6 class="border-bottom pb-2">Messaging</h6>
          <div class="input-group">
            <input name="messagingDid" class="form-control" placeholder="did:key:..." required value="<%= defaultMessagingDid %>"
                   rel="tooltip" title="This DID must support signing and encrypting JWM message">
          </div>
        </div>

        <!-- Section: Credential claims -->
        <div class="shadow-sm border my-3 p-3 rounded bg-white">
          <h6 class="border-bottom pb-2">Credential</h6>

          <div class="form-floating mb-3">
            <input name="issuerDid" class="form-control" required value="<%= defaultIssuerDid %>"
                   rel="tooltip" title="This DID will be used to issue credentials, BLS key DIDs are supported">
            <label>Issuer</label>
          </div>

          <div class="form-floating mb-3">
            <input name="claimContext" class="form-control" required value="<%= defaultClaimContext %>"
                   rel="tooltip" title="Comma-separated list of JSON-LD context URLs">
            <label>Context</label>
          </div>

          <div class="form-floating mb-3">
            <input name="claimTypes" class="form-control" required value="<%= defaultClaimTypes %>"
                   rel="tooltip" title="Comma-separated list of context defined types">
            <label>Types</label>
          </div>

          <div class="form-floating mb-3">
            <textarea name="claimContent" class="form-control" style="min-height: 156px" rows="6" required><%= defaultClaims %></textarea>
            <label>Claims</label>
          </div>
        </div>

        <!-- Section: Generate credential -->
        <div class="shadow-sm border my-3 p-3 rounded bg-white" id="offerPane">
          <h6 class="border-bottom pb-2">Generate credential</h6>

          <div class="control-pane d-flex justify-content-center m-2">
            <button type="submit" class="btn btn-sm btn-secondary mx-1"
                    id="issueCredential">Issue Credential</button>
            <button type="button" class="btn btn-sm btn-secondary mx-1"
                    id="sendAsyncMessage">Send Async Message</button>
          </div>

          <div class="result-pane d-flex flex-column align-items-center border-top visually-hidden">
            <div class="rounded img-thumbnail mt-2" style="width: 260px; height: 260px">
              <a class="qr-container w-100 h-100" style="width: 250px; height: 250px" href="#"
                 rel="tooltip" title="Click to open deeplink on mobile device">
                <!-- QR Code for the generated verifiable credential -->
              </a>
            </div>
          </div>
        </div>
      </form>

    </div>

    <div id="didAuthModal" class="modal fade" tabindex="-1">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h6 class="modal-title">Scan with Mobile Wallet</h6>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body d-flex justify-content-center">
            <div class="rounded img-thumbnail" style="width: 260px; height: 260px">
              <a class="qr-container w-100 h-100" style="width: 250px; height: 250px"
                 rel="tooltip" title="Click to open deeplink on mobile device">
                <!-- QR Code for DIDAuth presentation request -->
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

    <script type="application/javascript">
     const form = document.getElementById("sampleForm")
     const offerPane = document.getElementById("offerPane")
     const didAuthModal = document.getElementById("didAuthModal")
     const sendAsyncMessage = document.getElementById("sendAsyncMessage")

     // DIDAuth: Step 1, initialize presentation request
     async function initializeDidAuthRequest() {
       const inputs = new FormData(form)
       const messagingDid = inputs.get("messagingDid")

       const resp = await fetch("/presentations/request", {
         method: "POST",
         headers: { "Content-Type": "application/json" },
         body: JSON.stringify({ messagingDid }),
       })
       const { qrcode, deeplink, uid } = await resp.json()

       console.log("Received DIDAuth presentation request")
       didAuthModal.querySelector(".qr-container").href = deeplink
       didAuthModal.querySelector(".qr-container").innerHTML = qrcode
       scheduleFetchDidAuthResponse(uid)

     }
     didAuthModal.addEventListener("shown.bs.modal", (event) => {
       initializeDidAuthRequest()
     })

     // DIDAuth: Step 2, poll presentation callback response
     function scheduleFetchDidAuthResponse(uid) {
       setTimeout(function () {
         // stop processing when interaction had aborted
         if (!didAuthModal.classList.contains("show")) return

         fetch(`/presentations/${uid}/response`).then(async (resp) => {
           const { data } = await resp.json()
           if (data) {
             // DIDAuth: Step 3, use the returned subject DID
             console.log("Received DIDAuth response", data)
             form.querySelector("input[name='subjectDid']").value = data.subjectDid
             return bootstrap.Modal.getInstance(didAuthModal).hide()
           }
           scheduleFetchDidAuthResponse(uid)
         })
       }, 500)
     }

     // CredentialOffer: Step 1, issue credential with the specified claims
     form.addEventListener("submit", async (event) => {
       event.preventDefault()

       const inputs = new FormData(form)
       const issuerDid = inputs.get("issuerDid")
       const subjectDid = inputs.get("subjectDid")
       const messagingDid = inputs.get("messagingDid")
       const claimTypes = inputs.get("claimTypes").split(",").map(s => s.trim())
       const claimContext = inputs.get("claimContext").split(",").map(s => s.trim())
       const claimContent = JSON.parse(inputs.get("claimContent"))

       const body = { issuerDid, subjectDid, messagingDid, claimTypes, claimContext, claimContent }
       console.log("Generating direct credential offer with payload", body)

       const resp = await fetch("/credentials/issue", {
         method: "POST",
         headers: { "Content-Type": "application/json" },
         body: JSON.stringify(body),
       })

       const { qrcode, deeplink, jwe } = await resp.json()
       sendAsyncMessage.setAttribute("data-offer", JSON.stringify({ subjectDid, message: jwe }))

       // CredentialOffer: Step 2a, present the credential offer
       offerPane.querySelector(".qr-container").href = deeplink
       offerPane.querySelector(".qr-container").innerHTML = qrcode
       offerPane.querySelector(".result-pane").classList.remove("visually-hidden")
     })

     // CredentialOffer: Step 2b, send credential offer to subject's inbox
     sendAsyncMessage.addEventListener("click", async (event) => {
       event.preventDefault()

       const offer = event.target.getAttribute("data-offer")
       if (!offer) {
         window.alert("You much issue a credential first!")
         return
       }

       await fetch("/messaging/send", {
         method: "POST",
         headers: { "Content-Type": "application/json" },
         body: offer,
       })
       window.alert("Message sent. Please check your mobile wallet!")
     })

     const tooltips = [].slice.call(document.querySelectorAll('[rel="tooltip"]'))
     tooltips.map((tooltip) => new bootstrap.Tooltip(tooltip))
    </script>

  </body>
</html>

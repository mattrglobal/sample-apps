{
	"info": {
		"_postman_id": "cb41d8ef-8b65-41aa-a2f7-3ab3ec50c3d5",
		"name": "Platform Core API",
		"description": "# Introduction\nThe Platform Core API defines a set of capabilities that can be used to manage a tenant of the MATTR Platform.\n\nThe API can be used to manage Decentralised Identifiers, issue Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs.\n\n## API Reference Versioning\nA previous version of the API Reference can be [accessed here](/api-ref-previous).\n\n# Authorization\nAccess to the API is granted by our authorization provider, as part of onboarding you will be provided with client credentials to make a call to the auth provider and receive a bearer token.\nThis token is then used in an `authorization` header on all calls idenitfied as requiring `bearerAuth` (this is required for the majorty of management operations).\n\n<SecurityDefinitions />\n\n# Pagination\nMost list operations in the API use pagination that can be controlled by a cursor method using the `cursor` and `limit` query parameters.\n\n**Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n```\nGET https://tenant.vii.mattr.global/v1/credentials\n?limit=100\n&cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n```\n\n* The `nextCursor` is found at the start of each returned range of credential entries and identifies the last object in the list.\n* The `limit` determines how many entries are returned in that request, with a maximum value of 1000.\n\nRequesting a page after the last value in the list will return an empty `data` object.\n\n``` json\n{\n\"data\": []\n}\n```\n\nNot using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n\nContact Support:\n Email: support@mattr.global",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Security",
			"item": [
				{
					"name": "Create API Auth Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_id\": \"{{auth_client_id}}\",\n    \"client_secret\": \"{{auth_client_secret}}\",\n    \"audience\": \"{{auth_audience}}\",\n    \"grant_type\": \"client_credentials\"\n}"
						},
						"url": {
							"raw": "{{auth_url}}/oauth/token",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "Authorization endpoint for gaining token used for API requests requiring `bearerAuth`.\n\nYou will be provided the required `client_id` and `client_secret` as part of onboarding."
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"exampleClientId\",\n    \"client_secret\": \"exampleClientSecret\",\n    \"audience\": \"https://vii.mattr.global\",\n    \"grant_type\": \"client_credentials\"\n}"
								},
								"url": {
									"raw": "{{auth_url}}/oauth/token",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"access_denied\",\n \"error_description\": \"Unauthorized\"\n}"
						},
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_id\": \"htf792W4p4MedZbnoWAs51EfqUt4d2\",\n    \"client_secret\": \"d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G\",\n    \"audience\": \"https://vii.mattr.global\",\n    \"grant_type\": \"client_credentials\"\n}"
								},
								"url": {
									"raw": "{{auth_url}}/oauth/token",
									"host": [
										"{{auth_url}}"
									],
									"path": [
										"oauth",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"ACCESS_TOKEN_HERE\",\n \"expires_in\": 86400,\n \"token_type\": \"Bearer\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "DIDs",
			"item": [
				{
					"name": "Well Known DID Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/.well-known/did-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								".well-known",
								"did-configuration"
							]
						},
						"description": "Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant.\n\nSee https://identity.foundation/.well-known/resources/did-configuration/\n\nThese entries are automatically configured for **all** DIDs created by the tenant and is used for any party wanting to establish the relationship between domain ownership and the DIDs by exposing cryptographic proofs.\n\nThis endpoint is unprotected, public facing and can be determinisically found at the root of the tenant subdomian or alias by any party wishing to discover the domain to DID relationship.\n"
					},
					"response": [
						{
							"name": "List of DID Configuration entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/.well-known/did-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										".well-known",
										"did-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"entries\": [\n  {\n   \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld\"\n   ],\n   \"type\": [\n    \"VerifiableCredential\",\n    \"DomainLinkageCredential\"\n   ],\n   \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n   \"issuanceDate\": \"2020-11-01T21:33:38.398Z\",\n   \"credentialSubject\": {\n    \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n    \"origin\": \"tenant.vii.mattr.global\"\n   },\n   \"proof\": {\n    \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..sOuFZV7lrUdxzOaRrCYoD9bbgxp3oEX1fceFFwxekjvJBzbI_ZzKL8-vPWOoFY200KTPwLYcEPhto0GQfM0iDg\",\n    \"type\": \"Ed25519Signature2018\",\n    \"created\": \"2020-11-01T21:33:38Z\",\n    \"proofPurpose\": \"assertionMethod\",\n    \"verificationMethod\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n   }\n  },\n  {\n   \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://w3c-ccg.github.io/ldp-bbs2020/context/v1\",\n    \"https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld\"\n   ],\n   \"type\": [\n    \"VerifiableCredential\",\n    \"DomainLinkageCredential\"\n   ],\n   \"issuer\": \"did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v\",\n   \"issuanceDate\": \"2020-11-01T21:33:38.427Z\",\n   \"credentialSubject\": {\n    \"id\": \"did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v\",\n    \"origin\": \"tenant.vii.mattr.global\"\n   },\n   \"proof\": {\n    \"type\": \"BbsBlsSignature2020\",\n    \"created\": \"2020-11-01T21:33:38Z\",\n    \"proofValue\": \"itoN9nPf6ut0/IxkNp+qesJOju9hV1BYxFMkP4VynqUxFalmQV4PQ6wJhqz5KJppC39+VL+19CxVjPXUXaIDVGRs7WPDGbLaGeViu1Mm4nZCgJbptdw8HOkkpZZ21SCaTN+bok2IG5XRH+QsBWH/cA==\",\n    \"proofPurpose\": \"assertionMethod\",\n    \"verificationMethod\": \"did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v#zUC75v2eWSVhTC9XtyYci1cdrHNze4Wwzgv92GUDXeYQEkfZuu2CavRBVFkk9mnpToxiUMacjgYAx9JBmuoJXWc7YCRDDjTD5ocunta9DJrdmgCdAmuFCUfBPTo4GAnTY7x4582\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Resolve a DID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/dids/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Single DID urn"
								}
							]
						},
						"description": "Resolves the DID provided in the path to its DID Document from the DID method and method identifier. The DID Document may contain cryptographic material like a public key and service endpoints.\n\nExample:\n\n`did:sov:1234556` -  will be referenced on the Sovrin network\n`did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9` - the public key is encapsulated in the DID\n\n#### Returns\n\nThe DID Document is returned along with meta-data already held about the DID by the tenant;\n- Registration Status: Given there can be a lag in writing on-ledger DIDs this status will be updated over a short timeframe (usually within 10 minutes).\n- Registered: Timestamp of registration.\n- Keys: A reference to the Keys in a KMS"
					},
					"response": [
						{
							"name": "A DID Document and meta-data",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"didDocument\": {\n  \"@context\": \"https://w3.org/ns/did/v1\",\n  \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n  \"publicKey\": [\n   {\n    \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n    \"type\": \"Ed25519VerificationKey2018\",\n    \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n    \"publicKeyBase58\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\"\n   }\n  ],\n  \"authentication\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"assertionMethod\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"capabilityDelegation\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"capabilityInvocation\": [\n   \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n  ],\n  \"keyAgreement\": [\n   {\n    \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G\",\n    \"type\": \"X25519KeyAgreementKey2019\",\n    \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n    \"publicKeyBase58\": \"CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\"\n   }\n  ]\n },\n \"registrationStatus\": \"COMPLETED\",\n \"localMetadata\": {\n  \"keys\": [\n   {\n    \"kmsKeyId\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\",\n    \"didDocumentKeyId\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   }\n  ],\n  \"registered\": 1588562204304\n }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						}
					]
				},
				{
					"name": "Delete a DID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/dids/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Single DID urn"
								}
							]
						}
					},
					"response": [
						{
							"name": "DID successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						}
					]
				},
				{
					"name": "Retrieve a list of DIDs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/dids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids"
							]
						},
						"description": "Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n"
					},
					"response": [
						{
							"name": "A list of DIDs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/dids?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": [\n  {\n   \"did\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n   \"localMetadata\": {\n    \"keys\": [\n     {\n      \"kmsKeyId\": \"5jFLoKmMPgqWaV1Ler5yaECr6XjDX6DPymZhYpVnLDVh\",\n      \"didDocumentKeyId\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n     }\n    ],\n    \"registered\": 1586312761694\n   }\n  },\n  {\n   \"did\": \"did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT\",\n   \"localMetadata\": {\n    \"keys\": [\n     {\n      \"kmsKeyId\": \"2ezhxiEP6mgmMoWwaa3KJqS6GhPfYHpQTKvCAtPYCib5\",\n      \"didDocumentKeyId\": \"did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT#z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT\"\n     }\n    ],\n    \"registered\": 1586841097944\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a DID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"<string>\",\n    \"options\": \"<object>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/dids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"dids"
							]
						},
						"description": "Takes a supported DID Method and generates keys and associated information for a new DID and registers the DID Document if applicable.\n\nMethods supported:\n- key\n- web\n- sov\n\n> During Preview any did:sov DIDs will not reside on the Sovrin MainNet, and when migrating to the MainNet any sov DIDs will be removed. Any did:sov DIDs created using this endpoint should be considered as experimental as well as any credentials created using them.\n\n#### Creating did:key\nA DID with a DID method of key can be created as follows.\n\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"ed25519\"}}`\n* `{\"method\": \"key\", \"options\": {\"keyType\": \"bls12381g2\"}}`\n\nIf no options are provided, a DID will be created with an ed25519 key type.\n\nIf the key type in options is set to `bls12381g2` a DID will be created with a BLS key type which supports BBS+ signatures for issuing ZKP-enabled credentials.\n> A DID created with an experimental `bls12381g2` key type can only be used for issuing credentials.\n\n#### Creating did:web\nA DID with a DID method of web can be created as follows.\n\n* `{\"method\": \"web\", \"options\": {\"domain\": \"mattr.global\"}}`\n\nThe returned initial DID Document then needs to be hosted so that it is accessible from the domain provided in the options, e.g. https://mattr.global/.well-known/did.json.\n\nWhen the DID Document is not available for download from the domain, the Registration Status of the DID is PROCESSING.\n\nOnce the DID Document can be downloaded from the domain, the Registration Status will be COMPLETED.\n\nNote that the tenant will be able to prove ownership of the keys associated with the did:web DID Document through the well-known endpoint, i.e. https://tenant.vii.mattr.global/.well-known/did-configuration, while the DID Document hosted on the domain links the DID to a domain.\n\n#### Creating did:sov\nA DID with a DID method of sov can be created as follows.\n\n* `{\"method\": \"sov\"}`\n\nThe Registration Status of the DID is updated over a short timeframe due to the lag incurred in registering the DID Document, which may take up to 10 minutes.\n\n#### Returns\nThe DID, associated metadata and registration status.\n\nUnsupported Methods result in a 400 response with an \"Invalid value\" message."
					},
					"response": [
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Bad Request\",\n \"details\": [\n  {\n   \"value\": \"xxx\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"method\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "DID document created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"method\": \"key\",\n    \"options\": {\n        \"keyType\": \"ed25519\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/dids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"dids"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"did\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n \"registrationStatus\": \"COMPLETED\",\n \"localMetadata\": {\n  \"keys\": [\n   {\n    \"kmsKeyId\": \"D6EjPbBioWJb4WSEYrPHuUrDXbCTkNEfmB91p8MdkvVT\",\n    \"didDocumentKeyId\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq#z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\"\n   }\n  ],\n  \"registered\": 1588741969938,\n  \"initialDidDocument\": {\n   \"@context\": \"https://w3.org/ns/did/v1\",\n   \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n   \"publicKey\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"type\": \"Ed25519VerificationKey2018\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\"\n    }\n   ],\n   \"authentication\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"assertionMethod\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityDelegation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"capabilityInvocation\": [\n    \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\"\n   ],\n   \"keyAgreement\": [\n    {\n     \"id\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G\",\n     \"type\": \"X25519KeyAgreementKey2019\",\n     \"controller\": \"did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9\",\n     \"publicKeyBase58\": \"CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\"\n    }\n   ]\n  }\n }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Messaging",
			"item": [
				{
					"name": "Create a JWS with a DID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"didUrl\": \"<string>\",\n    \"payload\": \"<object>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/messaging/sign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"messaging",
								"sign"
							]
						},
						"description": "Creates a signed message in the form of a JWS (JSON Web Signature) using the DID (Decentralized Identifier) supplied in the request.\n\n#### Returns\n\nA JWS in compact serialization form signed by the did supplied in the request"
					},
					"response": [
						{
							"name": "Error signing message",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"didUrl\": \"did:example:abcdefghijkl#key1\",\n    \"payload\": {\n        \"msg\": \"this is a message\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"sign"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "Message signed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"didUrl\": \"did:example:abcdefghijkl#key1\",\n    \"payload\": {\n        \"msg\": \"this is a message\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"sign"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa21mazNtMldIQlVxVm94SlZ3R1NQejVrYmFKNnpBMXRwN1JRWUJiUUdtczNoI3o2TWttZmszbTJXSEJVcVZveEpWd0dTUHo1a2JhSjZ6QTF0cDdSUVlCYlFHbXMzaCJ9.eyJtc2ciOiJUaGlzIGlzIGEgcGF5bG9hZCJ9.5E9qEmmSOMHLABAr4A9VzuNKFaO4EDo2GSCMoxQm9zsE7eCmEEuaAxtNhOUdd-Wvj64vqBBVl84XB1Yg7X9wBg\""
						}
					]
				},
				{
					"name": "Verify a JWS signed by a DID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jws\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/messaging/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"messaging",
								"verify"
							]
						},
						"description": "Provide a signed payload in the form of a JWS (JSON Web Signature) that has been signed by a DID (Decentralized Identifier) and get a response indicating if the signature verification was successful and the DID that was used to originally sign the payload.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n#### Returns\n\nIndicates if the JWS payload was untampered and that the signature is valid by verifying that the kid in the JWS header is the same as the `iss` value in the Request Object, which could for instance be the Subject DID.\nThe DID used is returned as both the full `didUrl` including fragment pointer to the DID Document and the `did` which can be used for Credential creation."
					},
					"response": [
						{
							"name": "Verification has been performed, see response body for result",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": \"payload\",\n \"didUrl\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"did\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"verified\": true\n}"
						},
						{
							"name": "Invalid JWS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Verification failed\"\n}"
						}
					]
				},
				{
					"name": "Encrypt a Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jws\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/messaging/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"messaging",
								"verify"
							]
						},
						"description": "Provide a signed payload in the form of a JWS (JSON Web Signature) that has been signed by a DID (Decentralized Identifier) and get a response indicating if the signature verification was successful and the DID that was used to originally sign the payload.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n#### Returns\n\nIndicates if the JWS payload was untampered and that the signature is valid by verifying that the kid in the JWS header is the same as the `iss` value in the Request Object, which could for instance be the Subject DID.\nThe DID used is returned as both the full `didUrl` including fragment pointer to the DID Document and the `did` which can be used for Credential creation."
					},
					"response": [
						{
							"name": "Invalid JWS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Verification failed\"\n}"
						},
						{
							"name": "Verification has been performed, see response body for result",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": \"payload\",\n \"didUrl\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"did\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"verified\": true\n}"
						}
					]
				},
				{
					"name": "Send a message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jws\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/messaging/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"messaging",
								"verify"
							]
						},
						"description": "Provide a signed payload in the form of a JWS (JSON Web Signature) that has been signed by a DID (Decentralized Identifier) and get a response indicating if the signature verification was successful and the DID that was used to originally sign the payload.\n\nOne use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n#### Returns\n\nIndicates if the JWS payload was untampered and that the signature is valid by verifying that the kid in the JWS header is the same as the `iss` value in the Request Object, which could for instance be the Subject DID.\nThe DID used is returned as both the full `didUrl` including fragment pointer to the DID Document and the `did` which can be used for Credential creation."
					},
					"response": [
						{
							"name": "Verification has been performed, see response body for result",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"payload\": \"payload\",\n \"didUrl\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"did\": \"did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE\",\n \"verified\": true\n}"
						},
						{
							"name": "Invalid JWS",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/messaging/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"messaging",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Verification failed\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Credentials",
			"item": [
				{
					"name": "Create a Verifiable Credential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"type\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"claims\": \"<object>\",\n    \"issuer\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"subjectId\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"persist\": \"<boolean>\",\n    \"revocable\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials"
							]
						},
						"description": "Creates a Verifiable Credential (VC or just Credential) in a JSON-LD format adhering to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n\n**Creating the Payload:**\n\nThe values required by the operation are validated where available and used to construct the Verifiable Credential.\n\nThe Credential is issued using JSON-LD with linked data proofs, the `type` values of the Credential and the Subject Claims must be represented by a schema in `@context`.\n> The schema `https://www3.org/2018/credentials/v1` is always required in addition any `@context` values, so that the Credential can be referenced.\n\n> The `type` value of `VerifiableCredential` must be used as the *first* value in the array to conform to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n**Subject Identifiers**\n\nIn general, the Subject identifier in the `subjectId` field should have been authentically bound to the subject and authenticated against the information used in the claims, for example by using an OpenID Connect authentication flow or another mechanism including out-of-band processes.\n\nCredentials may be issued without subject identifiers, this covers uses-cases, where the credential cannot or does not need to be adequately bound to a Subject DID and may be treated as a bearer credential or reissued at a later time once the credential can be bound.\n\n**ZKP-enabled BBS+ credential:**\n\nIf you wish to issue a ZKP-enabled Verifiable Credential, the provided `issuer` `id` must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential. Note that the schema `https://w3c-ccg.github.io/ldp-bbs2020/context/v1` will automatically be added to the `@context` in the credential.\n\n> During Preview this feature is experimental. It may change over time and may require credentials to be reissued.\n\n**Credential meta-data:**\n\nSetting the `persist` value to `true` will store the entire credential contents as well as the meta-data on the platform. If set to `false` only the credential meta-data is held on the platform:\n- `id`\n- `tag` (optional)\n- `credentialStatus` (optional)\n- `issuanceDate`\n\nThe optional `tag` value can be used to externally reference the issued credential.\n\n#### Returns\nOn success, the Verifiable Credential is always provided in the response along with meta-data.\nSubject bound credential should be delivered to the intended subject.\n"
					},
					"response": [
						{
							"name": "Credential created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://schema.org\"\n    ],\n    \"subjectId\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n    \"type\": [\n        \"VerifiableCredential\",\n        \"AlumniCredential\"\n    ],\n    \"claims\": {\n        \"givenName\": \"Jamie\",\n        \"familyName\": \"Doe\",\n        \"alumniOf\": \"Example University\"\n    },\n    \"issuer\": {\n        \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"Example University\"\n    },\n    \"persist\": true,\n    \"tag\": \"identifier123\",\n    \"revocable\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"873277c0-a162-11ea-8a1d-a111119347e6\",\n \"credential\": {\n  \"@context\": [\n   \"https://www.w3.org/2018/credentials/v1\",\n   \"https://www.w3.org/2018/credentials/examples/v1\"\n  ],\n  \"type\": [\n   \"VerifiableCredential\",\n   \"AlumniCredential\"\n  ],\n  \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n  \"credentialSubject\": {\n   \"givenName\": \"Jamie\",\n   \"familyName\": \"Doe\"\n  },\n  \"proof\": {\n   \"type\": \"Ed25519Signature2018\",\n   \"created\": \"2020-05-02T12:06:29Z\",\n   \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n   \"proofPurpose\": \"assertionMethod\",\n   \"verificationMethod\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\"\n  },\n  \"issuer\": {\n   \"id\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\",\n   \"name\": \"Example University\"\n  },\n  \"credentialStatus\": {\n   \"id\": \"https://tenant.viimattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n   \"type\": \"RevocationList2020Status\",\n   \"revocationListIndex\": 1,\n   \"revocationListCredential\": \"https://tenant.viimattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\"\n  }\n },\n \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n \"tag\": \"identifier123\",\n \"credentialStatus\": {\n  \"id\": \"https://tenant.viimattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n  \"type\": \"RevocationList2020Status\",\n  \"revocationListIndex\": 1,\n  \"revocationListCredential\": \"https://tenant.viimattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\"\n }\n}"
						},
						{
							"name": "Bad request, Invalid request body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://schema.org\"\n    ],\n    \"subjectId\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n    \"type\": [\n        \"VerifiableCredential\",\n        \"AlumniCredential\"\n    ],\n    \"claims\": {\n        \"givenName\": \"Jamie\",\n        \"familyName\": \"Doe\",\n        \"alumniOf\": \"Example University\"\n    },\n    \"issuer\": {\n        \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"Example University\"\n    },\n    \"persist\": true,\n    \"tag\": \"identifier123\",\n    \"revocable\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve list of Credential Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials?tag=<string>&type=<string>&limit=<number>&cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials"
							],
							"query": [
								{
									"key": "tag",
									"value": "<string>",
									"description": "The optional external reference to filter on"
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The optional credential type to filter on"
								},
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned credential entries, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of credential entries"
								}
							]
						},
						"description": "Returns a list of all credential data stored in the tenant.\n\n**In the list**\n\nInside the `data` array, there is an body for each credential issued on the platform, in addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n> Credentials issued via the OIDC Bridge are set not to be persisted.\n\n**Pagination**\n\nPagination can be controlled by a cursor method using the `cursor`and `limit` query parameters. The `nextCursor` is found at the start of each returned range of credential entries and the `limit` determines how many entries are returned in that request, with a maximum value of `1000`.\n\nNot using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n> The optional `tag` filter or the Credential `type` can be used to retrieve credential data.\n"
					},
					"response": [
						{
							"name": "Bad query parameters in request.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials?tag=identifier123&type=AlumniCredential&limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									],
									"query": [
										{
											"key": "tag",
											"value": "identifier123"
										},
										{
											"key": "type",
											"value": "AlumniCredential"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"value\": \"xxxx\",\n   \"msg\": \"id and createdAt is missing\",\n   \"param\": \"cursor\",\n   \"location\": \"query\"\n  }\n ]\n}"
						},
						{
							"name": "Returns a page of credentials",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials?tag=identifier123&type=AlumniCredential&limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials"
									],
									"query": [
										{
											"key": "tag",
											"value": "identifier123"
										},
										{
											"key": "type",
											"value": "AlumniCredential"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": [\n  {\n   \"id\": \"873277c0-a162-11ea-8a1d-a111119347e6\",\n   \"credential\": {\n    \"@context\": [\n     \"https://www.w3.org/2018/credentials/v1\",\n     \"https://schema.org\"\n    ],\n    \"type\": [\n     \"VerifiableCredential\",\n     \"AlumniCredential\"\n    ],\n    \"issuer\": {\n     \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n     \"name\": \"https://tenant.viimattr.global\"\n    },\n    \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n    \"credentialSubject\": {\n     \"id\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n     \"givenName\": \"Jamie\",\n     \"familyName\": \"Doe\"\n    },\n    \"proof\": {\n     \"type\": \"Ed25519Signature2018\",\n     \"created\": \"2020-05-02T12:06:29Z\",\n     \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n     \"proofPurpose\": \"assertionMethod\",\n     \"verificationMethod\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\"\n    }\n   },\n   \"tag\": \"identifier123\",\n   \"issuanceDate\": \"2020-05-02T12:06:29.156Z\"\n  },\n  {\n   \"id\": \"9043aa74-eb08-11ea-adc1-0242ac120002\",\n   \"tag\": \"identifier124\",\n   \"credentialStatus\": {\n    \"id\": \"https://tenant.viimattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n    \"type\": \"RevocationList2020Status\",\n    \"revocationListCredential\": \"https://tenant.viimattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n    \"revocationListIndex\": 1\n   },\n   \"issuanceDate\": \"2020-10-06T03:21:02.397Z\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve Credential Data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "Get data for a previously created credential using its ID.\n\nIn addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n> Credentials issued via the OIDC Bridge do not have their contents persisted."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "Credential ID not in a UUID format",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "Credential returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"873277c0-a162-11ea-8a1d-a111119347e6\",\n \"credential\": {\n  \"@context\": [\n   \"https://www.w3.org/2018/credentials/v1\",\n   \"https://schema.org\"\n  ],\n  \"type\": [\n   \"VerifiableCredential\",\n   \"AlumniCredential\"\n  ],\n  \"issuer\": {\n   \"id\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\",\n   \"name\": \"https://tenant.vii.mattr.global\"\n  },\n  \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n  \"credentialStatus\": {\n   \"id\": \"https://tenant.vii.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n   \"type\": \"RevocationList2020Status\",\n   \"revocationListCredential\": \"https://tenant.vii.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n   \"revocationListIndex\": 4\n  },\n  \"credentialSubject\": {\n   \"id\": \"did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\",\n   \"givenName\": \"Jamie\",\n   \"familyName\": \"Doe\"\n  },\n  \"proof\": {\n   \"type\": \"Ed25519Signature2018\",\n   \"created\": \"2020-05-02T12:06:29Z\",\n   \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n   \"proofPurpose\": \"assertionMethod\",\n   \"verificationMethod\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\"\n  }\n },\n \"tag\": \"identifier123\",\n \"credentialStatus\": {\n  \"id\": \"https://tenant.vii.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n  \"type\": \"RevocationList2020Status\",\n  \"revocationListCredential\": \"https://tenant.vii.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n  \"revocationListIndex\": 4\n },\n \"issuanceDate\": \"2020-05-02T12:06:29.156Z\"\n}"
						}
					]
				},
				{
					"name": "Remove Credential Data",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "Remove all stored credential data from the tenant using its ID.\n\n> The entire entry including meta-data and the credential contents is removed from the system and cannot be recovered."
					},
					"response": [
						{
							"name": "Invalid id parameter format",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "Credential deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Credential ID not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Verify a Credential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"sunt est ea\",\n            \"cillum ullamco id\"\n        ],\n        \"type\": [\n            \"minim laboris dolor\",\n            \"laboris\"\n        ],\n        \"issuanceDate\": \"1963-07-12T10:54:56.293Z\",\n        \"credentialSubject\": {\n            \"id\": \"dolor et pariatur sint minim\",\n            \"givenName\": \"ea tempor elit\",\n            \"familyName\": \"minim aliqua consequat\",\n            \"alumniOf\": \"Duis aliqua nostrud Ut\"\n        },\n        \"proof\": {\n            \"type\": \"dolor occaecat aliquip\",\n            \"created\": \"1997-08-30T18:26:39.564Z\",\n            \"jws\": \"Lorem Duis veniam proident\",\n            \"proofPurpose\": \"Ut amet fugiat pariatur\",\n            \"verificationMethod\": \"cillum sit\"\n        },\n        \"issuer\": {\n            \"id\": \"pariatur magna enim consequat\",\n            \"name\": \"est cillum irure officia aute\"\n        },\n        \"credentialStatus\": {\n            \"id\": \"labore fugiat\",\n            \"type\": \"laborum et magna non\",\n            \"revocationListIndex\": 62180854,\n            \"revocationListCredential\": \"sit amet consequat Excepteur\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								"verify"
							]
						},
						"description": "Send any JSON-LD Verifiable Credential that conforms to the [W3C Verifiable Credentials data model](https://www.w3.org/TR/vc-data-model/) to perform verification checks and return a response:\n- Issuer DID can be resolved\n- JSON-LD context is valid for subject claims\n- Proof is valid & the credential has not been tampered with\n- Is not in a revoked status on a RevocationList2020\nThis endpoint can be used to check any Credential issued by any service provider."
					},
					"response": [
						{
							"name": "Credential has been processed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://www.w3.org/2018/credentials/examples/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\",\n            \"AlumniCredential\"\n        ],\n        \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n        \"credentialSubject\": {\n            \"givenName\": \"Jamie\",\n            \"familyName\": \"Doe\"\n        },\n        \"proof\": {\n            \"type\": \"Ed25519Signature2018\",\n            \"created\": \"2020-05-02T12:06:29Z\",\n            \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"verificationMethod\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\"\n        },\n        \"issuer\": {\n            \"id\": \"did:issuer:abcdb1f712ebc6f1c276e12ec21\",\n            \"name\": \"Example University\"\n        },\n        \"credentialStatus\": {\n            \"id\": \"https://tenant.vii.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1\",\n            \"type\": \"RevocationList2020Status\",\n            \"revocationListIndex\": 1,\n            \"revocationListCredential\": \"https://tenant.vii.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"verified\": true\n}"
						}
					]
				}
			]
		},
		{
			"name": "Revocation",
			"item": [
				{
					"name": "Set Credential Revocation Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isRevoked\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id",
								"revocation-status"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "A credential can be revoked by setting the revocation status.\n"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isRevoked\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"path\",\n   \"msg\": \"credential not revocable\",\n   \"param\": \"id\",\n   \"value\": \"a80a5e7e-1972-4be6-8a4e-2adf09badf24\"\n  }\n ]\n}"
						},
						{
							"name": "The revocation status has been set",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isRevoked\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve Credential Revocation Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"credentials",
								":id",
								"revocation-status"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Credential ID"
								}
							]
						},
						"description": "Retrieve the revocation status of a certain credential.\n\n\n#### Returns\nThe revocation status of the credential"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"path\",\n   \"msg\": \"credential not revocable\",\n   \"param\": \"id\",\n   \"value\": \"a80a5e7e-1972-4be6-8a4e-2adf09badf24\"\n  }\n ]\n}"
						},
						{
							"name": "Credential status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/credentials/:id/revocation-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"credentials",
										":id",
										"revocation-status"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"isRevoked\": false\n}"
						}
					]
				},
				{
					"name": "Retrieve Revocation List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/revocation-lists/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"revocation-lists",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Revocation list ID"
								}
							]
						},
						"description": "Retrieve the revocation list that contains the revocation status of a number of credentials.\n\n\n#### Returns\nThe revocation list"
					},
					"response": [
						{
							"name": "The revocation list",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/revocation-lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"revocation-lists",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"https://tenant.vii.mattr.global/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3\",\n \"@context\": [\n  \"https://www.w3.org/2018/credentials/v1\",\n  \"https://w3id.org/vc-revocation-list-2020/v1\"\n ],\n \"type\": [\n  \"VerifiableCredential\",\n  \"RevocationList2020Credential\"\n ],\n \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n \"issuanceDate\": \"2020-05-02T12:06:29.156Z\",\n \"credentialSubject\": {\n  \"type\": \"RevocationList2020\",\n  \"encodedList\": \"H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA\"\n },\n \"proof\": {\n  \"type\": \"Ed25519Signature2018\",\n  \"created\": \"2020-05-02T12:06:29Z\",\n  \"jws\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\n  \"proofPurpose\": \"assertionMethod\",\n  \"verificationMethod\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y\"\n }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/revocation-lists/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"revocation-lists",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Resource Not Found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Presentations",
			"item": [
				{
					"name": "Create a Presentation Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"domain\": \"<string>\",\n    \"name\": \"<string>\",\n    \"query\": [\n        {\n            \"type\": \"<string>\",\n            \"credentialQuery\": [\n                {\n                    \"required\": \"<boolean>\",\n                    \"example\": [\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        },\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"reason\": \"<string>\"\n                },\n                {\n                    \"required\": \"<boolean>\",\n                    \"example\": [\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        },\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"reason\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"type\": \"<string>\",\n            \"credentialQuery\": [\n                {\n                    \"required\": \"<boolean>\",\n                    \"example\": [\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        },\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"reason\": \"<string>\"\n                },\n                {\n                    \"required\": \"<boolean>\",\n                    \"example\": [\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        },\n                        {\n                            \"@context\": \"<array>\",\n                            \"type\": \"<string>\",\n                            \"trustedIssuer\": [\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                },\n                                {\n                                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"reason\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates"
							]
						},
						"description": "Create a presentation template"
					},
					"response": [
						{
							"name": "Template created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"tenant.vii.mattr.global\",\n    \"name\": \"alumni_credential_request\",\n    \"query\": [\n        {\n            \"type\": \"QueryByExample\",\n            \"credentialQuery\": [\n                {\n                    \"required\": true,\n                    \"reason\": \"We need you to prove your alumni membership.\",\n                    \"example\": {\n                        \"@context\": [\n                            \"https://schema.org\"\n                        ],\n                        \"type\": \"AlumniCredential\",\n                        \"trustedIssuer\": [\n                            {\n                                \"required\": true,\n                                \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n \"domain\": \"tenant.vii.mattr.global\",\n \"name\": \"alumni_credential_request\",\n \"query\": [\n  {\n   \"type\": \"QueryByExample\",\n   \"credentialQuery\": [\n    {\n     \"required\": true,\n     \"reason\": \"We need you to prove your alumni membership.\",\n     \"example\": {\n      \"@context\": [\n       \"https://schema.org\"\n      ],\n      \"type\": \"AlumniCredential\",\n      \"trustedIssuer\": [\n       {\n        \"required\": true,\n        \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n       }\n      ]\n     }\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Bad request, Invalid request body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"domain\": \"tenant.vii.mattr.global\",\n    \"name\": \"alumni_credential_request\",\n    \"query\": [\n        {\n            \"type\": \"QueryByExample\",\n            \"credentialQuery\": [\n                {\n                    \"required\": true,\n                    \"reason\": \"We need you to prove your alumni membership.\",\n                    \"example\": {\n                        \"@context\": [\n                            \"https://schema.org\"\n                        ],\n                        \"type\": \"AlumniCredential\",\n                        \"trustedIssuer\": [\n                            {\n                                \"required\": true,\n                                \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint e\",\n \"message\": \"officia eu\",\n \"details\": [\n  {\n   \"value\": \"nisi aliqua reprehend\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"in\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a list of Presentation Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates?limit=<number>&cursor=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates"
							],
							"query": [
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned templates, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of templates"
								}
							]
						},
						"description": "Get presentation templates"
					},
					"response": [
						{
							"name": "All templates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": [\n  {\n   \"id\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n   \"domain\": \"tenant.vii.mattr.global\",\n   \"name\": \"alumni_credential_request\",\n   \"query\": [\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": [\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      },\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      }\n     ]\n    },\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": [\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      },\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      }\n     ]\n    }\n   ]\n  },\n  {\n   \"id\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n   \"domain\": \"tenant.vii.mattr.global\",\n   \"name\": \"alumni_credential_request\",\n   \"query\": [\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": [\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      },\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      }\n     ]\n    },\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": [\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      },\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      }\n     ]\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Presentation Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Presentation template ID"
								}
							]
						},
						"description": "Get a Presentation Template from its ID"
					},
					"response": [
						{
							"name": "Invalid templateId parameter format",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "Template returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n \"domain\": \"tenant.vii.mattr.global\",\n \"name\": \"alumni_credential_request\",\n \"query\": [\n  {\n   \"type\": \"QueryByExample\",\n   \"credentialQuery\": [\n    {\n     \"required\": \"<boolean>\",\n     \"example\": [\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": false,\n         \"issuer\": \"dolor\"\n        },\n        {\n         \"required\": true,\n         \"issuer\": \"nulla\"\n        }\n       ]\n      },\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": false,\n         \"issuer\": \"labore mollit\"\n        },\n        {\n         \"required\": false,\n         \"issuer\": \"anim ullamco deserunt v\"\n        }\n       ]\n      }\n     ],\n     \"reason\": \"<string>\"\n    },\n    {\n     \"required\": \"<boolean>\",\n     \"example\": [\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": false,\n         \"issuer\": \"Excepteur esse in\"\n        },\n        {\n         \"required\": false,\n         \"issuer\": \"ipsum cillum eu adipisicing\"\n        }\n       ]\n      },\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": false,\n         \"issuer\": \"anim laboris velit dolor aliqua\"\n        },\n        {\n         \"required\": false,\n         \"issuer\": \"ut\"\n        }\n       ]\n      }\n     ],\n     \"reason\": \"<string>\"\n    }\n   ]\n  },\n  {\n   \"type\": \"QueryByExample\",\n   \"credentialQuery\": [\n    {\n     \"required\": \"<boolean>\",\n     \"example\": [\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": true,\n         \"issuer\": \"occaecat aute\"\n        },\n        {\n         \"required\": false,\n         \"issuer\": \"tempor sunt\"\n        }\n       ]\n      },\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": true,\n         \"issuer\": \"aliqua\"\n        },\n        {\n         \"required\": true,\n         \"issuer\": \"cillum e\"\n        }\n       ]\n      }\n     ],\n     \"reason\": \"<string>\"\n    },\n    {\n     \"required\": \"<boolean>\",\n     \"example\": [\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": true,\n         \"issuer\": \"velit nulla fugiat ut\"\n        },\n        {\n         \"required\": false,\n         \"issuer\": \"aliquip id officia ex pariatur\"\n        }\n       ]\n      },\n      {\n       \"@context\": \"<array>\",\n       \"type\": \"<string>\",\n       \"trustedIssuer\": [\n        {\n         \"required\": false,\n         \"issuer\": \"amet adipisicing commodo\"\n        },\n        {\n         \"required\": false,\n         \"issuer\": \"ullamco\"\n        }\n       ]\n      }\n     ],\n     \"reason\": \"<string>\"\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete Presentation template",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/templates/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"templates",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) Presentation template ID"
								}
							]
						},
						"description": "Delete a Presentation Template"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						},
						{
							"name": "Template deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid templateId parameter format",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"templates",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sed laborum anim\",\n \"message\": \"sit dolore\",\n \"details\": [\n  {\n   \"value\": \"in Excepteur Lorem eu est\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  },\n  {\n   \"value\": \"nulla labore incididunt\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"id\",\n   \"location\": \"body\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Presentation Request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"templateId\": \"<string>\",\n    \"did\": \"<string>\",\n    \"challenge\": \"<string>\",\n    \"expiresTime\": \"<number>\",\n    \"callbackUrl\": \"<uri>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/presentations/requests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"presentations",
								"requests"
							]
						},
						"description": "Creates a short lived Presentation Request.\n\nIf no `expiresTime` is provided, a default of 5 minutes will be used."
					},
					"response": [
						{
							"name": "Presentation Request created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"templateId\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n    \"did\": \"did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr\",\n    \"challenge\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n    \"expiresTime\": 1592955632103,\n    \"callbackUrl\": \"https://tenant.vii.mattr.global/v1/presentations/response\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"requests"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"c74128a0-9949-11ea-9554-b5a630b3c119\",\n \"callbackUrl\": \"https://tenant.vii.mattr.global/v1/presentations/response\",\n \"request\": {\n  \"id\": \"c74128a0-9949-11ea-9554-b5a630b3c119\",\n  \"type\": \"https://mattr.global/schemas/verifiable-presentation/request/QueryByExample\",\n  \"from\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n  \"created_time\": \"dolore enim est proident\",\n  \"expires_time\": \"ut voluptate esse officia\",\n  \"reply_url\": \"https://tenant.vii.mattr.global/v1/presentations/response\",\n  \"reply_to\": [\n   \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n   \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\"\n  ],\n  \"body\": {\n   \"id\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n   \"domain\": \"tenant.vii.mattr.global\",\n   \"name\": \"alumni_credential_request\",\n   \"query\": [\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": [\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      },\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      }\n     ]\n    },\n    {\n     \"type\": \"QueryByExample\",\n     \"credentialQuery\": [\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      },\n      {\n       \"required\": \"<boolean>\",\n       \"example\": [\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        },\n        {\n         \"@context\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         },\n         \"trustedIssuer\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n         }\n        }\n       ],\n       \"reason\": \"<string>\"\n      }\n     ]\n    }\n   ],\n   \"challenge\": \"e1b35ae0-9e0e-11ea-9bbf-a387b27c9e60\"\n  }\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"templateId\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n    \"did\": \"did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr\",\n    \"challenge\": \"64e45290-9980-11ea-b872-f1bee5fb328f\",\n    \"expiresTime\": 1592955632103,\n    \"callbackUrl\": \"https://tenant.vii.mattr.global/v1/presentations/response\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/presentations/requests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"presentations",
										"requests"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"callbackUrl\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "OIDC Issuer Auth",
			"item": [
				{
					"name": "Well Known OpenId Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/.well-known/openid-configuration",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								".well-known",
								"openid-configuration"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								}
							]
						},
						"description": "The standard OpenID Connect Well Known configuration metadata endpoint.\n\nThis endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n"
					},
					"response": [
						{
							"name": "Returns OpenID configuration",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/.well-known/openid-configuration",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										".well-known",
										"openid-configuration"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authorization_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/authorize\",\n \"claims_parameter_supported\": true,\n \"claims_supported\": [\n  \"dolore culpa\",\n  \"culpa ullamco reprehenderit\"\n ],\n \"code_challenge_methods_supported\": [\n  \"amet occaecat ipsum aliqua\",\n  \"dolor aliqua fugiat\"\n ],\n \"end_session_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/session/end\",\n \"grant_types_supported\": [\n  \"exercitation in sunt\",\n  \"reprehenderit do non Duis est\"\n ],\n \"id_token_signing_alg_values_supported\": [\n  \"HS256\",\n  \"ES256\"\n ],\n \"issuer\": \"https://tenant.vii.mattr.global\",\n \"jwks_uri\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/jwks\",\n \"registration_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients\",\n \"request_object_signing_alg_values_supported\": [\n  \"Excepteur voluptate elit id enim\",\n  \"quis\"\n ],\n \"request_parameter_supported\": true,\n \"request_uri_parameter_supported\": true,\n \"require_request_uri_registration\": true,\n \"response_modes_supported\": [\n  \"magna\",\n  \"ipsum adipisicing est in\"\n ],\n \"response_types_supported\": [\n  \"minim cupidatat amet\",\n  \"est\"\n ],\n \"scopes_supported\": [\n  \"openid\",\n  \"offline_access\"\n ],\n \"subject_types_supported\": [\n  \"i\",\n  \"cillum non\"\n ],\n \"token_endpoint_auth_methods_supported\": [\n  \"nulla ullamco commodo laborum\",\n  \"id\"\n ],\n \"token_endpoint_auth_signing_alg_values_supported\": [\n  \"nostrud tempor\",\n  \"aliqua exercitation voluptate\"\n ],\n \"token_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/token\",\n \"userinfo_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/me\",\n \"userinfo_signing_alg_values_supported\": [\n  \"HS256\",\n  \"ES256\"\n ],\n \"claim_types_supported\": [\n  \"Duis aliqua quis\",\n  \"deserunt reprehenderit esse\"\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{}",
									"description": "undefined"
								},
								{
									"key": "client_secret",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "grant_type",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "code",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "redirect_uri",
									"value": "<uri>",
									"description": "undefined"
								}
							]
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/token",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								"token"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "> OIDC Token endpoint\n\nThe OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{}",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "shdT2ks5tg9b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "https://my-client-rp.example.com",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/token",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"token"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"dolore deserunt qui\"\n}"
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{}",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "shdT2ks5tg9b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "https://my-client-rp.example.com",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/token",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"token"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"in Duis ea nisi\",\n \"token_type\": \"bearer\",\n \"refresh_token\": \"consequat nulla incididunt dolore et\",\n \"expires_in\": -5259881,\n \"id_token\": \"dolore amet\"\n}"
						}
					]
				},
				{
					"name": "Authorization Flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/authorize?client_id=<string>&response_type=<string>&scope=<string>&nonce=<string>&prompt=<string>",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) id obtained at registration"
								},
								{
									"key": "response_type",
									"value": "<string>",
									"description": "(Required) A combo of code, token, and id_token"
								},
								{
									"key": "scope",
									"value": "<string>",
									"description": "openid is required for authentication requests. Other scopes may also be included."
								},
								{
									"key": "nonce",
									"value": "<string>",
									"description": "A value that is returned in the ID token. It is used to mitigate replay attacks."
								},
								{
									"key": "prompt",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "> OIDC Authorize URL"
					},
					"response": [
						{
							"name": "Successful authorization response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/authorize?client_id=<string>&response_type=id_token&scope=openid+email&nonce=<string>&prompt=<string>",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "response_type",
											"value": "id_token"
										},
										{
											"key": "scope",
											"value": "openid+email"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "prompt",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "https://cd.aiptuX-l6s6Q+Uk4mnLNmxP-Y7E-m+wAD3Wda35lqVzP0JRE",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/authorize?client_id=<string>&response_type=id_token&scope=openid+email&nonce=<string>&prompt=<string>",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "response_type",
											"value": "id_token"
										},
										{
											"key": "scope",
											"value": "openid+email"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "prompt",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "ea anim "
						}
					]
				}
			]
		},
		{
			"name": "OIDC Issuers",
			"item": [
				{
					"name": "Create an OIDC Issuer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credential\": {\n        \"issuerDid\": \"<string>\",\n        \"name\": \"<string>\",\n        \"context\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"type\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"federatedProvider\": {\n        \"url\": \"<uri>\",\n        \"clientId\": \"<string>\",\n        \"clientSecret\": \"<string>\",\n        \"scope\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"claimMappings\": [\n        {\n            \"jsonLdTerm\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        },\n        {\n            \"jsonLdTerm\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers"
							]
						},
						"description": "Create a new OIDC Credential Issuer for this tenant.\n\nThe Credential information defines a descriptive name for the Credential to be issued as well as the `issuerDid` and `type` that the issued Credential will contain. The `context` is used to define the JSON-LD schema for the JSON-LD terms.\n\nThe Federated Provider details are used to obtain the values for the new credential. The OIDC provider will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are provided in the `url`, `scope`, `clientId` and `clientSecret` attributes. If no `scope` is provided, the default value `openid profile email` will be used.\n\n> The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported`.\n\nClaim mappings are used to map OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential. The defined claims are also used for display purposes in a client, like a Mobile Wallet.\n\n**ZKP-enabled BBS+ credential:**\nIf you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n> ZKP-enabled BBS+ credentials are an experimental feature, credentials issued to the mobile wallet will not be validated at this time.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {\n        \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"University Attendance Credential\",\n        \"context\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"type\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"federatedProvider\": {\n        \"url\": \"https://example-university.au.auth0.com\",\n        \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n        \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n        \"scope\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"claimMappings\": [\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"url\"\n  }\n ]\n}"
						},
						{
							"name": "Issuer created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {\n        \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"University Attendance Credential\",\n        \"context\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"type\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"federatedProvider\": {\n        \"url\": \"https://example-university.au.auth0.com\",\n        \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n        \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n        \"scope\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"claimMappings\": [\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"credential\": {\n  \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n  \"name\": \"University Attendance Credential\",\n  \"context\": [\n   \"<uri>\",\n   \"<uri>\"\n  ],\n  \"type\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n },\n \"federatedProvider\": {\n  \"url\": \"https://example-university.au.auth0.com\",\n  \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n  \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n  \"callbackUrl\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback\",\n  \"scope\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n },\n \"claimMappings\": [\n  {\n   \"jsonLdTerm\": \"alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  },\n  {\n   \"jsonLdTerm\": \"alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  }\n ],\n \"id\": \"983c0a86-204f-4431-9371-f5a22e506599\"\n}"
						}
					]
				},
				{
					"name": "Retrieve list of OIDC Issuers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers?limit=<number>&cursor=<string>",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers"
							],
							"query": [
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned issuer entries, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of issuer entries"
								}
							]
						},
						"description": "Returns a list of all OIDC Issuers in the Tenant.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"query\",\n   \"msg\": {\n    \"message\": \"Failed to decode base64url data\"\n   },\n   \"param\": \"cursor\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						},
						{
							"name": "Returns a page of issuers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": {\n  \"credential\": {\n   \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n   \"name\": \"University Attendance Credential\",\n   \"context\": [\n    \"<uri>\",\n    \"<uri>\"\n   ],\n   \"type\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  \"federatedProvider\": {\n   \"url\": \"https://example-university.au.auth0.com\",\n   \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n   \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n   \"callbackUrl\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback\",\n   \"scope\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  \"claimMappings\": [\n   {\n    \"jsonLdTerm\": \"alumniOf\",\n    \"oidcClaim\": \"alumni_of\"\n   },\n   {\n    \"jsonLdTerm\": \"alumniOf\",\n    \"oidcClaim\": \"alumni_of\"\n   }\n  ],\n  \"id\": \"983c0a86-204f-4431-9371-f5a22e506599\"\n }\n}"
						}
					]
				},
				{
					"name": "Retrieve an OIDC Issuer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								}
							]
						},
						"description": "Retrieve an OIDC Issuer by providing an Issuer ID."
					},
					"response": [
						{
							"name": "The Issuer is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"issuerId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"issuerId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						},
						{
							"name": "Retrieved Issuer",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"credential\": {\n  \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n  \"name\": \"University Attendance Credential\",\n  \"context\": [\n   \"<uri>\",\n   \"<uri>\"\n  ],\n  \"type\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n },\n \"federatedProvider\": {\n  \"url\": \"https://example-university.au.auth0.com\",\n  \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n  \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n  \"callbackUrl\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback\",\n  \"scope\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n },\n \"claimMappings\": [\n  {\n   \"jsonLdTerm\": \"alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  },\n  {\n   \"jsonLdTerm\": \"alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  }\n ],\n \"id\": \"983c0a86-204f-4431-9371-f5a22e506599\"\n}"
						}
					]
				},
				{
					"name": "Update an OIDC Issuer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credential\": {\n        \"issuerDid\": \"<string>\",\n        \"name\": \"<string>\",\n        \"context\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"type\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"federatedProvider\": {\n        \"url\": \"<uri>\",\n        \"clientId\": \"<string>\",\n        \"clientSecret\": \"<string>\",\n        \"scope\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"claimMappings\": [\n        {\n            \"jsonLdTerm\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        },\n        {\n            \"jsonLdTerm\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								}
							]
						},
						"description": "Update an OIDC Credential Issuer.\n\nThe `issuerDid` is the Issuer DID that will be used in the issued Credential.\n\nThe `credentialName` describes the Credential and `credentialTypes` defines the Credential Types for the issued Credential.\n\nIn order for the tenant to issue a new credential, the OIDC bridge will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are provided in the `federatedProviderUrl`, `federatedProviderScope`, `federatedProviderClientId` and `federatedProviderClientSecret` attributes. If no `federatedProviderScope` is provided, the default value `openid profile email` will be used.\n\n> The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported` which needs to contain `openid` and `profile`.\n\nClaim mappings are used to map OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential. The `jsonLdContext` is used to define the JSON-LD schema for the JSON-LD terms. The defined claims are also used for display purposes in a client, like a Mobile Wallet.\n\n**ZKP-enabled BBS+ credential:**\nIf you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n> ZKP-enabled BBS+ credentials are an experimental feature, credentials issued to the mobile wallet will not be validated at this time.\n"
					},
					"response": [
						{
							"name": "The Issuer is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {\n        \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"University Attendance Credential\",\n        \"context\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"type\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"federatedProvider\": {\n        \"url\": \"https://example-university.au.auth0.com\",\n        \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n        \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n        \"scope\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"claimMappings\": [\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"issuerId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {\n        \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"University Attendance Credential\",\n        \"context\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"type\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"federatedProvider\": {\n        \"url\": \"https://example-university.au.auth0.com\",\n        \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n        \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n        \"scope\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"claimMappings\": [\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"url\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully updated the Issuer",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {\n        \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n        \"name\": \"University Attendance Credential\",\n        \"context\": [\n            \"<uri>\",\n            \"<uri>\"\n        ],\n        \"type\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"federatedProvider\": {\n        \"url\": \"https://example-university.au.auth0.com\",\n        \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n        \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n        \"scope\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    },\n    \"claimMappings\": [\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdTerm\": \"alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"credential\": {\n  \"issuerDid\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n  \"name\": \"University Attendance Credential\",\n  \"context\": [\n   \"<uri>\",\n   \"<uri>\"\n  ],\n  \"type\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n },\n \"federatedProvider\": {\n  \"url\": \"https://example-university.au.auth0.com\",\n  \"clientId\": \"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\",\n  \"clientSecret\": \"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\",\n  \"callbackUrl\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback\",\n  \"scope\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n },\n \"claimMappings\": [\n  {\n   \"jsonLdTerm\": \"alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  },\n  {\n   \"jsonLdTerm\": \"alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  }\n ],\n \"id\": \"983c0a86-204f-4431-9371-f5a22e506599\"\n}"
						}
					]
				},
				{
					"name": "Remove an OIDC Issuer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								}
							]
						},
						"description": "Removes an OIDC Issuer by providing an Issuer ID.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"issuerId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						},
						{
							"name": "Issuer deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The Issuer is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"issuerId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "OIDC Issuer Client",
			"item": [
				{
					"name": "Create a Client",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"<string>\",\n    \"idTokenSignedResponseAlg\": \"<string>\",\n    \"applicationType\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								"clients"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								}
							]
						},
						"description": "Issuer clients are required to be created in the system for custom digital wallets and VC Issue flows that are enbled through the OIDC Credential Provider.\n\nThe Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n"
					},
					"response": [
						{
							"name": "Client created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for Wallet\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"OIDC Client for Wallet\",\n \"redirectUris\": [\n  \"<uri>\",\n  \"<uri>\"\n ],\n \"id\": \"6a860559-21a3-4b57-9a2b-aaea3ba4683d\",\n \"secret\": \"PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC\",\n \"responseTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"grantTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"tokenEndpointAuthMethod\": \"client_secret_post\",\n \"idTokenSignedResponseAlg\": \"ES256\",\n \"applicationType\": \"web\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for Wallet\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"redirectUris is not array of strings\",\n   \"param\": \"redirectUris\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve list of Clients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients?limit=<number>&cursor=<string>",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								"clients"
							],
							"query": [
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned client entries, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of client entries"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								}
							]
						},
						"description": "Returns a list of all OIDC Issuer Clients in the Tenant.\n"
					},
					"response": [
						{
							"name": "Returns a page of clients",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": {\n  \"name\": \"OIDC Client for Wallet\",\n  \"redirectUris\": [\n   \"<uri>\",\n   \"<uri>\"\n  ],\n  \"id\": \"6a860559-21a3-4b57-9a2b-aaea3ba4683d\",\n  \"secret\": \"PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC\",\n  \"responseTypes\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"grantTypes\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"client_secret_post\",\n  \"idTokenSignedResponseAlg\": \"ES256\",\n  \"applicationType\": \"web\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"query\",\n   \"msg\": {\n    \"message\": \"Failed to decode base64url data\"\n   },\n   \"param\": \"cursor\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Client",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "issuerId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								},
								{
									"key": "clientId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "Retrieve an OIDC Issuer Client by providing a Client ID."
					},
					"response": [
						{
							"name": "The Client is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"clientId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"clientId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						},
						{
							"name": "Retrieved Client",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"OIDC Client for Wallet\",\n \"redirectUris\": [\n  \"<uri>\",\n  \"<uri>\"\n ],\n \"id\": \"6a860559-21a3-4b57-9a2b-aaea3ba4683d\",\n \"secret\": \"PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC\",\n \"responseTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"grantTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"tokenEndpointAuthMethod\": \"client_secret_post\",\n \"idTokenSignedResponseAlg\": \"ES256\",\n \"applicationType\": \"web\"\n}"
						}
					]
				},
				{
					"name": "Update a Client",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"<string>\",\n    \"idTokenSignedResponseAlg\": \"<string>\",\n    \"applicationType\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "issuerId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								},
								{
									"key": "clientId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "Update an OIDC Issuer Client.\n\nThe Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for Wallet\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"redirectUris is not array of strings\",\n   \"param\": \"redirectUris\"\n  }\n ]\n}"
						},
						{
							"name": "The Client is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for Wallet\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"clientId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully updated a Client",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for Wallet\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"OIDC Client for Wallet\",\n \"redirectUris\": [\n  \"<uri>\",\n  \"<uri>\"\n ],\n \"id\": \"6a860559-21a3-4b57-9a2b-aaea3ba4683d\",\n \"secret\": \"PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC\",\n \"responseTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"grantTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"tokenEndpointAuthMethod\": \"client_secret_post\",\n \"idTokenSignedResponseAlg\": \"ES256\",\n \"applicationType\": \"web\"\n}"
						}
					]
				},
				{
					"name": "Remove a Client",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"issuers",
								":id",
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "issuerId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Issuer ID"
								},
								{
									"key": "clientId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "Removes an OIDC Issuer Client by providing a Client ID.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"clientId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						},
						{
							"name": "Client deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The Client is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/issuers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"issuers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"clientId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "OIDC Verifier Auth",
			"item": [
				{
					"name": "Well Known OpenId Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/.well-known/openid-configuration",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								".well-known",
								"openid-configuration"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								}
							]
						},
						"description": "The standard OpenID Connect Well Known configuration metadata endpoint.\n\nThis endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n"
					},
					"response": [
						{
							"name": "Returns OpenID configuration",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/.well-known/openid-configuration",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										".well-known",
										"openid-configuration"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"authorization_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/authorize\",\n \"claims_parameter_supported\": true,\n \"claims_supported\": [\n  \"ullamco enim\",\n  \"ad labore\"\n ],\n \"code_challenge_methods_supported\": [\n  \"S256\"\n ],\n \"end_session_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/session/end\",\n \"grant_types_supported\": [\n  \"laborum et\",\n  \"dolore ad\"\n ],\n \"id_token_signing_alg_values_supported\": [\n  \"HS256\",\n  \"ES256\"\n ],\n \"issuer\": \"https://tenant.vii.mattr.global\",\n \"jwks_uri\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/jwks\",\n \"registration_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients\",\n \"request_object_signing_alg_values_supported\": [\n  \"laborum reprehenderit adipisicing exercitation\",\n  \"elit occaecat officia Excepteur irure\"\n ],\n \"request_parameter_supported\": true,\n \"request_uri_parameter_supported\": true,\n \"require_request_uri_registration\": true,\n \"response_modes_supported\": [\n  \"voluptate proident\",\n  \"occaecat exercitation laborum ad Ut\"\n ],\n \"response_types_supported\": [\n  \"in elit tempor\",\n  \"esse\"\n ],\n \"scopes_supported\": [\n  \"openid\",\n  \"offline_access\"\n ],\n \"subject_types_supported\": [\n  \"public\"\n ],\n \"token_endpoint_auth_methods_supported\": [\n  \"voluptate sit quis laboris\",\n  \"dolor amet ut\"\n ],\n \"token_endpoint_auth_signing_alg_values_supported\": [\n  \"laboris enim magna id nulla\",\n  \"sed commodo \"\n ],\n \"token_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/token\",\n \"userinfo_endpoint\": \"https://tenant.vii.mattr.global/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/me\",\n \"userinfo_signing_alg_values_supported\": [\n  \"HS256\",\n  \"ES256\"\n ],\n \"claim_types_supported\": [\n  \"normal\"\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{}",
									"description": "undefined"
								},
								{
									"key": "client_secret",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "grant_type",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "code",
									"value": "<string>",
									"description": "undefined"
								},
								{
									"key": "redirect_uri",
									"value": "<uri>",
									"description": "undefined"
								}
							]
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/token",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								"token"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "> OIDC Token endpoint\n\nThe OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{}",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "shdT2ks5tg9b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "https://my-client-rp.example.com",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/token",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"token"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"access_token\": \"in Duis ea nisi\",\n \"token_type\": \"bearer\",\n \"refresh_token\": \"consequat nulla incididunt dolore et\",\n \"expires_in\": -5259881,\n \"id_token\": \"dolore amet\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{}",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "client_secret",
											"value": "aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "grant_type",
											"value": "authorization_code",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "code",
											"value": "shdT2ks5tg9b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										},
										{
											"key": "redirect_uri",
											"value": "https://my-client-rp.example.com",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/token",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"token"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"error\": \"dolore deserunt qui\"\n}"
						}
					]
				},
				{
					"name": "Authorization Flow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/authorize?client_id=<string>&response_type=<string>&scope=<string>&nonce=<string>&prompt=<string>",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) id obtained at registration"
								},
								{
									"key": "response_type",
									"value": "<string>",
									"description": "(Required) A combo of code, token, and id_token"
								},
								{
									"key": "scope",
									"value": "<string>",
									"description": "openid is required for authentication requests. Other scopes may also be included."
								},
								{
									"key": "nonce",
									"value": "<string>",
									"description": "A value that is returned in the ID token. It is used to mitigate replay attacks."
								},
								{
									"key": "prompt",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "> OIDC Authorize URL"
					},
					"response": [
						{
							"name": "Successful authorization response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/authorize?client_id=<string>&response_type=id_token&scope=openid+email&nonce=<string>&prompt=<string>",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "response_type",
											"value": "id_token"
										},
										{
											"key": "scope",
											"value": "openid+email"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "prompt",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "https://cd.aiptuX-l6s6Q+Uk4mnLNmxP-Y7E-m+wAD3Wda35lqVzP0JRE",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/authorize?client_id=<string>&response_type=id_token&scope=openid+email&nonce=<string>&prompt=<string>",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"authorize"
									],
									"query": [
										{
											"key": "client_id",
											"value": "<string>"
										},
										{
											"key": "response_type",
											"value": "id_token"
										},
										{
											"key": "scope",
											"value": "openid+email"
										},
										{
											"key": "nonce",
											"value": "<string>"
										},
										{
											"key": "prompt",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "ea anim "
						}
					]
				}
			]
		},
		{
			"name": "OIDC Verifiers",
			"item": [
				{
					"name": "Create an OIDC Verifier",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"verifierDid\": \"<string>\",\n    \"presentationTemplateId\": \"<uuid>\",\n    \"claimMappings\": [\n        {\n            \"jsonLdFqn\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        },\n        {\n            \"jsonLdFqn\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers"
							]
						},
						"description": "Create a new OIDC Credential Verifier for this tenant.\n\nThe `verifierDid` is the Verifier DID that will be used to securely send the Credential to.\n\nThe `presentationTemplateId` references the Presentation Template that defines what Credential is being requested for presentation.\n\nClaim mappings are used to map JSON-LD terms used in a Credential to OpenID Connect terms used by clients.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n    \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n    \"claimMappings\": [\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"presentationTemplateId\"\n  }\n ]\n}"
						},
						{
							"name": "Verifier created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n    \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n    \"claimMappings\": [\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n \"claimMappings\": [\n  {\n   \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  },\n  {\n   \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  }\n ],\n \"id\": \"41458e5a-9092-40b7-9a26-d4eb43c5792f\"\n}"
						}
					]
				},
				{
					"name": "Retrieve list of OIDC Verifiers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers?limit=<number>&cursor=<string>",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers"
							],
							"query": [
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned verifier entries, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of verifier entries"
								}
							]
						},
						"description": "Returns a list of all OIDC Verifiers in the Tenant.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"query\",\n   \"msg\": {\n    \"message\": \"Failed to decode base64url data\"\n   },\n   \"param\": \"cursor\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						},
						{
							"name": "Returns a page of Verifiers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": {\n  \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n  \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n  \"claimMappings\": [\n   {\n    \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n    \"oidcClaim\": \"alumni_of\"\n   },\n   {\n    \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n    \"oidcClaim\": \"alumni_of\"\n   }\n  ],\n  \"id\": \"41458e5a-9092-40b7-9a26-d4eb43c5792f\"\n }\n}"
						}
					]
				},
				{
					"name": "Retrieve an OIDC Verifier",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								}
							]
						},
						"description": "Retrieve an OIDC Verifier by providing a Verifier ID."
					},
					"response": [
						{
							"name": "The Verifier is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"verifierId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"verifierId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						},
						{
							"name": "Retrieved Verifier",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n \"claimMappings\": [\n  {\n   \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  },\n  {\n   \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  }\n ],\n \"id\": \"41458e5a-9092-40b7-9a26-d4eb43c5792f\"\n}"
						}
					]
				},
				{
					"name": "Update an OIDC Verifier",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"verifierDid\": \"<string>\",\n    \"presentationTemplateId\": \"<uuid>\",\n    \"claimMappings\": [\n        {\n            \"jsonLdFqn\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        },\n        {\n            \"jsonLdFqn\": \"<string>\",\n            \"oidcClaim\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								}
							]
						},
						"description": "Update an OIDC Credential Verifier.\n\nThe `verifierDid` is the Verifier DID that will be used to securely send the Credential to.\n\nThe `presentationTemplateId` references the Presentation Template that defines what Credential is being requested for presentation.\n\nClaim mappings are used to map JSON-LD terms used in a Credential to OpenID Connect terms used by clients.  The `jsonLdContext` is used to define the JSON-LD schema for the JSON-LD terms.\n"
					},
					"response": [
						{
							"name": "Successfully updated a Verifier",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n    \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n    \"claimMappings\": [\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n \"claimMappings\": [\n  {\n   \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  },\n  {\n   \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n   \"oidcClaim\": \"alumni_of\"\n  }\n ],\n \"id\": \"41458e5a-9092-40b7-9a26-d4eb43c5792f\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n    \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n    \"claimMappings\": [\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"presentationTemplateId\"\n  }\n ]\n}"
						},
						{
							"name": "The Verifier is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n    \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n    \"claimMappings\": [\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        },\n        {\n            \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n            \"oidcClaim\": \"alumni_of\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"verifierId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Remove an OIDC Verifier",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								}
							]
						},
						"description": "Removes an OIDC Verifier by providing a Verifier ID.\n"
					},
					"response": [
						{
							"name": "Verifier deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The Verifier is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"verifierId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"verifierId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "OIDC Verifier Client",
			"item": [
				{
					"name": "Create a Client",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"<string>\",\n    \"idTokenSignedResponseAlg\": \"<string>\",\n    \"applicationType\": \"<string>\",\n    \"logoUri\": \"<uri>\"\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								"clients"
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								}
							]
						},
						"description": "Relying party clients are required to be created in the system for Authorization and VC Verify flows that are enbled through OIDC.\n\nThe Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n"
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for the verifier\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\",\n    \"logoUri\": \"https://example.com/logo.png\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"redirectUris is not array of strings\",\n   \"param\": \"redirectUris\"\n  }\n ]\n}"
						},
						{
							"name": "Client created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for the verifier\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\",\n    \"logoUri\": \"https://example.com/logo.png\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"OIDC Client for the verifier\",\n \"redirectUris\": [\n  \"<uri>\",\n  \"<uri>\"\n ],\n \"id\": \"da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d\",\n \"secret\": \"H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E\",\n \"responseTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"grantTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"tokenEndpointAuthMethod\": \"client_secret_post\",\n \"idTokenSignedResponseAlg\": \"ES256\",\n \"applicationType\": \"web\",\n \"logoUri\": \"https://example.com/logo.png\"\n}"
						}
					]
				},
				{
					"name": "Retrieve list of Clients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients?limit=<number>&cursor=<string>",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								"clients"
							],
							"query": [
								{
									"key": "limit",
									"value": "<number>",
									"description": "Range size of returned client entries, default 100"
								},
								{
									"key": "cursor",
									"value": "<string>",
									"description": "Starting point for the range of client entries"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								}
							]
						},
						"description": "Returns a list of all OIDC Verifier Clients in the Tenant.\n"
					},
					"response": [
						{
							"name": "Returns a page of clients",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"nextCursor\": \"Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\",\n \"data\": {\n  \"name\": \"OIDC Client for the verifier\",\n  \"redirectUris\": [\n   \"<uri>\",\n   \"<uri>\"\n  ],\n  \"id\": \"da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d\",\n  \"secret\": \"H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E\",\n  \"responseTypes\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"grantTypes\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"tokenEndpointAuthMethod\": \"client_secret_post\",\n  \"idTokenSignedResponseAlg\": \"ES256\",\n  \"applicationType\": \"web\",\n  \"logoUri\": \"https://example.com/logo.png\"\n }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients?limit=2&cursor=Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "cursor",
											"value": "Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"query\",\n   \"msg\": {\n    \"message\": \"Failed to decode base64url data\"\n   },\n   \"param\": \"cursor\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Retrieve a Client",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "verifierId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								},
								{
									"key": "clientId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "Retrieve an OIDC Verifier Client by providing a Client ID."
					},
					"response": [
						{
							"name": "Retrieved Client",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"OIDC Client for the verifier\",\n \"redirectUris\": [\n  \"<uri>\",\n  \"<uri>\"\n ],\n \"id\": \"da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d\",\n \"secret\": \"H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E\",\n \"responseTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"grantTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"tokenEndpointAuthMethod\": \"client_secret_post\",\n \"idTokenSignedResponseAlg\": \"ES256\",\n \"applicationType\": \"web\",\n \"logoUri\": \"https://example.com/logo.png\"\n}"
						},
						{
							"name": "The Client is not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"clientId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"clientId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Update a Client",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"<string>\",\n    \"idTokenSignedResponseAlg\": \"<string>\",\n    \"applicationType\": \"<string>\",\n    \"logoUri\": \"<uri>\"\n}"
						},
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "verifierId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								},
								{
									"key": "clientId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "Update an OIDC Verifier Client.\n\nThe Client endpoint accepts OpenID Connect standard registration parameters.\n\n> When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n"
					},
					"response": [
						{
							"name": "The Client is not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for the verifier\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\",\n    \"logoUri\": \"https://example.com/logo.png\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"clientId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully updated a Client",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for the verifier\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\",\n    \"logoUri\": \"https://example.com/logo.png\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"OIDC Client for the verifier\",\n \"redirectUris\": [\n  \"<uri>\",\n  \"<uri>\"\n ],\n \"id\": \"da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d\",\n \"secret\": \"H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E\",\n \"responseTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"grantTypes\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"tokenEndpointAuthMethod\": \"client_secret_post\",\n \"idTokenSignedResponseAlg\": \"ES256\",\n \"applicationType\": \"web\",\n \"logoUri\": \"https://example.com/logo.png\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"OIDC Client for the verifier\",\n    \"redirectUris\": [\n        \"<uri>\",\n        \"<uri>\"\n    ],\n    \"responseTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"grantTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tokenEndpointAuthMethod\": \"client_secret_post\",\n    \"idTokenSignedResponseAlg\": \"ES256\",\n    \"applicationType\": \"web\",\n    \"logoUri\": \"https://example.com/logo.png\"\n}"
								},
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"body\",\n   \"msg\": \"redirectUris is not array of strings\",\n   \"param\": \"redirectUris\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Remove a Client",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
							"host": [
								"{{extUrl}}"
							],
							"path": [
								"oidc",
								"v1",
								"verifiers",
								":id",
								"clients",
								":id"
							],
							"variable": [
								{
									"key": "verifierId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Verifier ID"
								},
								{
									"key": "clientId",
									"value": "<uuid>",
									"type": "string",
									"description": "(Required) Client ID"
								}
							]
						},
						"description": "Removes an OIDC Verifier Client by providing a Client ID.\n"
					},
					"response": [
						{
							"name": "The Client is not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"NotFound\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Resource Not Found\",\n   \"param\": \"clientId\",\n   \"value\": \"a368cfb4-9537-4439-acc6-ce3cf2287eb7\"\n  }\n ]\n}"
						},
						{
							"name": "Client deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: bearer",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{extUrl}}/oidc/v1/verifiers/:id/clients/:id",
									"host": [
										"{{extUrl}}"
									],
									"path": [
										"oidc",
										"v1",
										"verifiers",
										":id",
										"clients",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"BadRequest\",\n \"message\": \"Validation Error\",\n \"details\": [\n  {\n   \"location\": \"params\",\n   \"msg\": \"Invalid value\",\n   \"param\": \"clientId\",\n   \"value\": \"abc\"\n  }\n ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const tokenUrl = pm.environment.get('auth_url') + '/oauth/token';",
					"",
					"const clientId = pm.environment.get('auth_client_id');",
					"const clientSecret = pm.environment.get('auth_client_secret');",
					"",
					"const echoPostRequest = {",
					"  url: tokenUrl,",
					"  method: 'POST',",
					"  header: 'Content-Type:application/json',",
					"  body: {",
					"    mode: 'application/json',",
					"    raw: JSON.stringify(",
					"        {",
					"        \tclient_id: clientId,",
					"        \tclient_secret: clientSecret,",
					"        \taudience:'https://vii.mattr.global',",
					"        \tgrant_type:'client_credentials'",
					"        })",
					"  }",
					"};",
					"",
					"var getToken = true;",
					"",
					"if (!pm.environment.get('accessTokenExpiry') || ",
					"    !pm.environment.get('bearerToken')) {",
					"    console.log('Token or expiry date are missing')",
					"} else if (pm.environment.get('accessTokenExpiry') <= (new Date()).getTime()) {",
					"    console.log('Token is expired')",
					"} else {",
					"    getToken = false;",
					"    console.log('Token and expiry date are all good');",
					"}",
					"",
					"if (getToken === true) {",
					"    pm.sendRequest(echoPostRequest, function (err, res) {",
					"    console.log(err ? err : res.json());",
					"        if (err === null) {",
					"            console.log('Saving the token and expiry date')",
					"            var responseJson = res.json();",
					"            pm.environment.set('bearerToken', responseJson.access_token)",
					"    ",
					"            var expiryDate = new Date();",
					"            expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
					"            pm.environment.set('accessTokenExpiry', expiryDate.getTime());",
					"        }",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}